#!/usr/bin/env python

import rospy
import numpy as np
import time
import sys
import signal
import os

from std_msgs.msg import Float64MultiArray
from myur.RobotiqHand import RobotiqHand

class Controller():

    def __init__(self):
        ## Create a ROS node
        rospy.init_node('Main', anonymous=False)
        freq = 100
        dt = 1.0/freq
        rate = rospy.Rate(freq)
        rospy.Subscriber('/UR5e/my_controller/state', Float64MultiArray, self.getRobotState, queue_size=1)
        rospy.Subscriber('/HumanState', Float64MultiArray, self.getHumanState, queue_size=1)
        CMD = rospy.Publisher('/UR5e/my_controller/command', Float64MultiArray, queue_size=1)

        ## Move UR5e Robot to Initial Configuration (q1)
        self.qa  = np.array([[np.Inf],[np.Inf],[np.Inf],[np.Inf],[np.Inf],[np.Inf]], dtype='float64')
        self.qa_ = np.array([[np.Inf],[np.Inf],[np.Inf],[np.Inf],[np.Inf],[np.Inf]], dtype='float64')
        while np.isinf(np.linalg.norm(self.qa)):
            rate.sleep()
        q0 = self.qa
        q1 = np.array([[0.6950],[-0.3999],[0.7330],[-0.3332],[0.6950],[0.0000]], dtype='float64')
        t = 0.0
        T = np.amax(np.array([np.amax(np.abs(q0-q1))/(np.pi/10), 1],dtype='float64'))
        q_CMD = Float64MultiArray()
        while t<=T+0.5:
            tr = self.TraPlanner(q0,q1,t,T)
            qd = tr[0:6]
            qd_ = tr[6:12]
            q_CMD.data = qd_ + 5*(qd - self.qa)
            q_CMD.layout.data_offset = q_CMD.layout.data_offset + 1
            CMD.publish(q_CMD)
            rate.sleep()
            t = t + dt
        ## Initialize
        q = self.qa #Joint position of virtual UR5e robot
        q_ = self.qa_ #Joint velocity of virtual UR5e robot
        pm = self.Cal_pm(q) #Nine points of virtual UR5e robot
        pe0 = np.array([[pm[0,8]], [pm[1,8]], [pm[2,8]]],dtype='float64') #Position of the EE of virtual UR5e robot
        pe1 = np.array([[0.500], [-0.850], [0.100]],dtype='float64') #Position of the wrist of virtual UR5e robot
        Re = self.Cal_Re(q) #Rotation matrix of the EE
        oe0 = self.Rot2Qua(Re)
        oe1 = self.Rot2Qua(np.identity(3))
        t = 0.0
        vr = 0.3 #Reference robot velocity
        T = np.linalg.norm(pe1-pe0)*1.5/vr #Duration of robot's skill
        soft = [0,1] #Soft DOFs of this skill
        hard = [2,3,4,5] #Hard DOFs of this skill
        Lam = 5 #Control gain related to HO-TV-CBFs
        Ke = 5 #Control gain related to hard- and soft-constaints
        Kq = 10 #Control gain related to robot's initial configuration
        Ds = 0.25 #Safe distance to be kept between human and robot
        u_min = -np.diag(np.array([28, 28, 28, 150, 150, 150],dtype='float64')) #Minimum control inputs
        u_max = -u_min #Maximum control inputs
        self.pH = np.array([[0.000], [-1.000], [0.100]],dtype='float64') #Position of human's hand
        self.pH_ = np.array([[0.000], [0.000], [0.000]],dtype='float64') #Velocity of human's hand
        self.pH__ = np.array([[0.000], [0.000], [0.000]],dtype='float64') #Acceleration of human's hand
        ## Main Loop
        while t<=T+0.5:
            ## Generate Trajectory of Robot's EE
            tr = self.TraPlanner(pe0,pe1,t,T)
            pd = tr[0:3]
            pd_ = tr[3:6]
            pd__ = tr[6:9]
            tr = self.TraPlanner(oe0,oe1,t,T)
            od = tr[0:4]
            od_ = tr[4:8]
            od__ = tr[8:12]
            od[3] = (1-np.linalg.norm(od[0:3])**2)**0.5
            od_[3] = -np.dot(od[0:3].transpose(),od_[0:3])/od[3]
            invEd = self.Cal_invE(od)
            wd = np.dot(invEd,od_[0:3])
            wd_ = np.dot(invEd,od__[0:3]) + np.dot(self.Cal_invE_(od,od_),od_[0:3])
            ## Calculate Utility Variables
            pm = self.Cal_pm(q)
            pe = np.array([[pm[0,8]], [pm[1,8]], [pm[2,8]]],dtype='float64')
            p8 = np.array([[pm[0,7]], [pm[1,7]], [pm[2,7]]],dtype='float64')
            Re = self.Cal_Re(q)
            Re_ = self.Cal_Re_(q,q_)
            J8 = self.Cal_J9(q)
            J8_ = self.Cal_J9_(q,q_)
            J9 = self.Cal_J9(q)
            J9_ = self.Cal_J9_(q,q_)
            Jw = self.Cal_Jw(q)
            Jw_ = self.Cal_Jw_(q,q_)
            M = self.Cal_M(q)
            invM = np.linalg.inv(M)
            C = self.Cal_C(q,q_)
            G = self.Cal_G(q,q_)
            Rt = np.identity(3) #Task frame
            Rt_ = np.zeros([3,3],dtype='float64') #First time derivative of task frame
            Rt__ = np.zeros([3,3],dtype='float64') #Second time derivative of task frame
            ## Construct Hard- and Soft-Constraint Control Sets
            ep = pe - pd #Position error in world frame
            ep_ = np.dot(J9,q_) - pd_
            oe = self.Rot2Qua(Re) #Orientation error in world frame
            Rd = self.Qua2Rot(od)
            Rd_ = self.Qua2Rot_(od,od_)
            R = np.dot(Re,Rd.transpose())
            R_ = np.dot(Re_,Rd.transpose()) + np.dot(Re,Rd_.transpose())
            eo = self.Rot2Qua(R)
            eo_ = self.Rot2Qua_(R,R_)
            E = self.Cal_E(eo)
            E_ = self.Cal_E_(eo_)
            tep = np.dot(Rt.transpose(),ep) #Position error in task frame
            tep_ = np.dot(Rt_.transpose(),ep) + np.dot(Rt.transpose(),ep_)
            teo = np.dot(Rt.transpose(),eo[0:3]) #Orientation error in task frame
            teo_ = np.dot(Rt_.transpose(),eo[0:3]) + np.dot(Rt.transpose(),eo_[0:3])
            Bp = np.dot(Rt.transpose(),J9)
            Bo = np.dot(Rt.transpose(),np.dot(E,Jw))
            B = np.dot(np.vstack((Bp,Bo)),invM)
            bp = np.dot(Rt.transpose(),np.dot(J9_,q_)-pd__) + np.dot(Rt_.transpose(),ep_) + 2*Ke*tep_ + Ke**2*tep
            bo = np.dot(Rt.transpose(),np.dot(E,np.dot(Jw_,q_)-np.dot(R,wd_)-np.dot(R_,wd)) + np.dot(E_,np.dot(Jw,q_) + np.dot(R,wd))) + np.dot(Rt_.transpose(),eo_[0:3]) + 2*Ke*teo_ + Ke**2*teo
            b = np.vstack((bp,bo)) - np.dot(np.vstack((Bp,Bo)),np.dot(invM,np.dot(C,q_) + G))
            B_hard = B[hard,:]
            B_soft = B[soft,:]
            b_hard = b[hard]
            b_soft = b[soft]
            ## Construct Safety Control Set
            pA = (p8+pe)/2 - self.pH
            pA_ = (np.dot(J8,q_)+np.dot(J9,q_))/2 - self.pH_
            pB_ = (np.dot(J8,q_)-np.dot(J9,q_))/2
            pB = (p8-pe)/2
            lB = np.linalg.norm(pB)
            delta = np.dot(pA.transpose(),pB)/lB**2
            delta_ = (np.dot(pA_.transpose(),pB) + np.dot(pA.transpose(),pB_))/lB**2
            us = self.Proj(delta)
            v = pA - us[0]*pB
            vn = v/np.linalg.norm(v)
            JA = (J8 + J9)/2
            JA_ = (J8_ + J9_)/2
            JB = (J8 - J9)/2
            JB_ = (J8_ - J9_)/2
            HA = -us[1]*np.dot(pB,pB.transpose())/lB**2 + np.identity(3)
            HA_ = -(us[2]*delta_*np.dot(pB,pB.transpose()) + us[1]*(np.dot(pB_,pB.transpose()) + np.dot(pB,pB_.transpose())))/lB**2
            HB = -us[1]*np.dot(pB,pA.transpose())/lB**2 - us[0]*np.identity(3)
            HB_ = -us[1]*delta_*np.identity(3) - (us[2]*delta_*np.dot(pB,pA.transpose()) + us[1]*(np.dot(pB_,pA.transpose()) + np.dot(pB,pA_.transpose())))/lB**2
            v_ = pA_ - us[0]*pB_ - us[1]*delta_*pB
            h = np.linalg.norm(v) - Ds
            h_ = np.dot(vn.transpose(),v_)
            A = np.dot(np.dot(vn.transpose(),(np.dot(HA,JA) + np.dot(HB,JB))),invM)
            a = - np.dot(np.dot(vn.transpose(),(np.dot(HA,JA) + np.dot(HB,JB))),np.dot(invM,np.dot(C,q_) + G)) + np.dot(np.dot(vn.transpose(),np.dot(HA,JA_)+np.dot(HB,JB_) + np.dot(HA_,JA)+np.dot(HB_,JB)),q_) - np.dot(vn.transpose(),np.dot(HA,self.pH__) + np.dot(HA_,self.pH_)) + (np.dot(v_.transpose(),v_) - np.dot(vn.transpose(),v_)**2)/np.linalg.norm(v) + 2*Lam*h_ + Lam**2*h
            ## Determine Final Control Input Based on QPs
            u1 = QP_Task(u_min,u_max,B_soft,b_soft,B_hard,b_hard,A,a) #Task-space QP
            D = invM
            d = np.dot(invM,np.dot(C,q_) + G) + 2*Kq*q_ + Kq**2*(q-q0)
            u = QP_Joint(u_min,u_max,D,d,B_soft,u1,B_hard,b_hard,A,a) #Joint-space QP
            ## Dynamics of The Virtual UR5e Robot
            x0 = np.vstack((q,q_))
            x = UR5e_Dynamics(x0,u,dt, invM, C, G) #Calculate dynamics of the virtual UR5e robot
            q = x[0:6] #Joint position of the virtual UR5e robot
            q_ = x[6:12] #Joint velocity of the virtual UR5e robot
            ## Contorl of The Real UR5e Robot
            q_CMD.data = q_ + 5*(q - self.qa) #Calculate command joint velocity to the real UR5e robot
            q_CMD.layout.data_offset = q_CMD.layout.data_offset + 1
            CMD.publish(q_CMD) #Send calculated command joint velocity to the real UR5e robot
            rate.sleep()
            t = t + dt
            #print([np.linalg.norm(tep),np.linalg.norm(teo)])

        q_CMD.data = np.zeros([6,1],dtype='float64')
        q_CMD.layout.data_offset = q_CMD.layout.data_offset + 1
        CMD.publish(q_CMD)
        print('HRI completed')


    def getRobotState(self, msg): #This Function Gets Joint States of Real UR5e Robot
        self.qa = np.array([[msg.data[0]], [msg.data[1]], [msg.data[2]], 
                            [msg.data[3]], [msg.data[4]], [msg.data[5]]])
        self.qa_ = np.array([[msg.data[6]], [msg.data[7]], [msg.data[8]], 
                             [msg.data[9]], [msg.data[10]], [msg.data[11]]])

    def getHumanState(self, msg): #This Function Gets States of The Human
        self.pH = np.array([[msg.data[0]], [msg.data[1]], [msg.data[2]]])
        self.pH_ = np.array([[msg.data[3]], [msg.data[4]], [msg.data[5]]])
        self.pH__ = np.array([[msg.data[6]], [msg.data[7]], [msg.data[8]]])

    def Cal_pm(self, q): #This Function Calculates Positions of 9 Points of UR5e Robot
        pm = np.zeros([3,9],dtype='float64')
        pm[0,0] = 0
        pm[0,1] = 0
        pm[0,2] = (689*np.sin(q[0]))/5000
        pm[0,3] = (689*np.sin(q[0]))/5000 - (17*np.cos(q[0])*np.cos(q[1]))/40
        pm[0,4] = (33*np.sin(q[0]))/5000 - (17*np.cos(q[0])*np.cos(q[1]))/40
        pm[0,5] = (33*np.sin(q[0]))/5000 - (np.cos(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000
        pm[0,6] = (1333*np.sin(q[0]))/10000 - (np.cos(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000
        pm[0,7] = (1333*np.sin(q[0]))/10000 + (997*np.sin(q[1] + q[2] + q[3])*np.cos(q[0]))/10000 - (np.cos(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000
        pm[0,8] = (1333*np.sin(q[0]))/10000 + (649*np.cos(q[4])*np.sin(q[0]))/2500 + (997*np.sin(q[1] + q[2] + q[3])*np.cos(q[0]))/10000 - (np.cos(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000 - (649*np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4]))/2500
        pm[1,0] = 0
        pm[1,1] = 0
        pm[1,2] = -(689*np.cos(q[0]))/5000
        pm[1,3] = - (689*np.cos(q[0]))/5000 - (17*np.cos(q[1])*np.sin(q[0]))/40
        pm[1,4] = - (33*np.cos(q[0]))/5000 - (17*np.cos(q[1])*np.sin(q[0]))/40
        pm[1,5] = - (33*np.cos(q[0]))/5000 - (np.sin(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000
        pm[1,6] = - (1333*np.cos(q[0]))/10000 - (np.sin(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000
        pm[1,7] = (997*np.sin(q[1] + q[2] + q[3])*np.sin(q[0]))/10000 - (1333*np.cos(q[0]))/10000 - (np.sin(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000
        pm[1,8] = (997*np.sin(q[1] + q[2] + q[3])*np.sin(q[0]))/10000 - (649*np.cos(q[0])*np.cos(q[4]))/2500 - (1333*np.cos(q[0]))/10000 - (np.sin(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000 - (649*np.cos(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4]))/2500
        pm[2,0] = 0
        pm[2,1] = 13/80
        pm[2,2] = 13/80
        pm[2,3] = 13/80 - (17*np.sin(q[1]))/40
        pm[2,4] = 13/80 - (17*np.sin(q[1]))/40
        pm[2,5] = 13/80 - (17*np.sin(q[1]))/40 - (1961*np.sin(q[1] + q[2]))/5000
        pm[2,6] = 13/80 - (17*np.sin(q[1]))/40 - (1961*np.sin(q[1] + q[2]))/5000
        pm[2,7] = 13/80 - (1961*np.sin(q[1] + q[2]))/5000 - (17*np.sin(q[1]))/40 - (997*np.cos(q[1] + q[2] + q[3]))/10000
        pm[2,8] = 13/80 - (1961*np.sin(q[1] + q[2]))/5000 - (17*np.sin(q[1]))/40 - (649*np.sin(q[1] + q[2] + q[3])*np.sin(q[4]))/2500 - (997*np.cos(q[1] + q[2] + q[3]))/10000
        return pm

    def Cal_Re(self, q): #This Function Calculates Orientation of EE of UR5e Robot
        R = np.zeros([3,3],dtype='float64')
        R[0,0] = np.cos(q[5])*(np.sin(q[0])*np.sin(q[4]) + np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4])) - np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[5])
        R[0,1] = np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4]) - np.cos(q[4])*np.sin(q[0])
        R[0,2] = - np.sin(q[5])*(np.sin(q[0])*np.sin(q[4]) + np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4])) - np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[5])
        R[1,0] = - np.cos(q[5])*(np.cos(q[0])*np.sin(q[4]) - np.cos(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0])) - np.sin(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[5])
        R[1,1] = np.cos(q[0])*np.cos(q[4]) + np.cos(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4])
        R[1,2] = np.sin(q[5])*(np.cos(q[0])*np.sin(q[4]) - np.cos(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0])) - np.sin(q[1] + q[2] + q[3])*np.cos(q[5])*np.sin(q[0])
        R[2,0] = np.cos(q[1] + q[2] + q[3])*np.sin(q[5]) + np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*np.cos(q[5])
        R[2,1] = np.sin(q[1] + q[2] + q[3])*np.sin(q[4])
        R[2,2] = np.cos(q[1] + q[2] + q[3])*np.cos(q[5]) - np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[5])
        return R

    def Cal_Re_(self, q, q_): #This Function Calculates Time Derivative of Re
        R_ = np.zeros([3,3],dtype='float64')
        R_[0,0] = q_[0]*(np.cos(q[5])*(np.cos(q[0])*np.sin(q[4]) - np.cos(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0])) + np.sin(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[5])) - q_[5]*(np.sin(q[5])*(np.sin(q[0])*np.sin(q[4]) + np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4])) + np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[5])) - q_[1]*(np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[5]) + np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4])*np.cos(q[5])) - q_[2]*(np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[5]) + np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4])*np.cos(q[5])) - q_[3]*(np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[5]) + np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4])*np.cos(q[5])) + q_[4]*np.cos(q[5])*(np.cos(q[4])*np.sin(q[0]) - np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4]))
        R_[0,1] = q_[4]*(np.sin(q[0])*np.sin(q[4]) + np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4])) - q_[0]*(np.cos(q[0])*np.cos(q[4]) + np.cos(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4])) - q_[1]*np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4]) - q_[2]*np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4]) - q_[3]*np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4])
        R_[0,2] = - q_[5]*(np.cos(q[5])*(np.sin(q[0])*np.sin(q[4]) + np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4])) - np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[5])) - q_[0]*(np.sin(q[5])*(np.cos(q[0])*np.sin(q[4]) - np.cos(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0])) - np.sin(q[1] + q[2] + q[3])*np.cos(q[5])*np.sin(q[0])) - q_[1]*(np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[5]) - np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4])*np.sin(q[5])) - q_[2]*(np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[5]) - np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4])*np.sin(q[5])) - q_[3]*(np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[5]) - np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4])*np.sin(q[5])) - q_[4]*np.sin(q[5])*(np.cos(q[4])*np.sin(q[0]) - np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4]))
        R_[1,0] = q_[0]*(np.cos(q[5])*(np.sin(q[0])*np.sin(q[4]) + np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4])) - np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[5])) + q_[5]*(np.sin(q[5])*(np.cos(q[0])*np.sin(q[4]) - np.cos(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0])) - np.sin(q[1] + q[2] + q[3])*np.cos(q[5])*np.sin(q[0])) - q_[1]*(np.cos(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[5]) + np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*np.cos(q[5])*np.sin(q[0])) - q_[2]*(np.cos(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[5]) + np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*np.cos(q[5])*np.sin(q[0])) - q_[3]*(np.cos(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[5]) + np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*np.cos(q[5])*np.sin(q[0])) - q_[4]*np.cos(q[5])*(np.cos(q[0])*np.cos(q[4]) + np.cos(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4]))
        R_[1,1] = - q_[0]*(np.cos(q[4])*np.sin(q[0]) - np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4])) - q_[4]*(np.cos(q[0])*np.sin(q[4]) - np.cos(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0])) - q_[1]*np.sin(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4]) - q_[2]*np.sin(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4]) - q_[3]*np.sin(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4])
        R_[1,2] = q_[5]*(np.cos(q[5])*(np.cos(q[0])*np.sin(q[4]) - np.cos(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0])) + np.sin(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[5])) - q_[0]*(np.sin(q[5])*(np.sin(q[0])*np.sin(q[4]) + np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4])) + np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[5])) - q_[1]*(np.cos(q[1] + q[2] + q[3])*np.cos(q[5])*np.sin(q[0]) - np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0])*np.sin(q[5])) - q_[2]*(np.cos(q[1] + q[2] + q[3])*np.cos(q[5])*np.sin(q[0]) - np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0])*np.sin(q[5])) - q_[3]*(np.cos(q[1] + q[2] + q[3])*np.cos(q[5])*np.sin(q[0]) - np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0])*np.sin(q[5])) + q_[4]*np.sin(q[5])*(np.cos(q[0])*np.cos(q[4]) + np.cos(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4]))
        R_[2,0] = q_[5]*(np.cos(q[1] + q[2] + q[3])*np.cos(q[5]) - np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[5])) - q_[2]*(np.sin(q[1] + q[2] + q[3])*np.sin(q[5]) - np.cos(q[1] + q[2] + q[3])*np.cos(q[4])*np.cos(q[5])) - q_[3]*(np.sin(q[1] + q[2] + q[3])*np.sin(q[5]) - np.cos(q[1] + q[2] + q[3])*np.cos(q[4])*np.cos(q[5])) - q_[1]*(np.sin(q[1] + q[2] + q[3])*np.sin(q[5]) - np.cos(q[1] + q[2] + q[3])*np.cos(q[4])*np.cos(q[5])) - q_[4]*np.sin(q[1] + q[2] + q[3])*np.cos(q[5])*np.sin(q[4])
        R_[2,1] = q_[1]*np.cos(q[1] + q[2] + q[3])*np.sin(q[4]) + q_[2]*np.cos(q[1] + q[2] + q[3])*np.sin(q[4]) + q_[3]*np.cos(q[1] + q[2] + q[3])*np.sin(q[4]) + q_[4]*np.sin(q[1] + q[2] + q[3])*np.cos(q[4])
        R_[2,2] = q_[4]*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])*np.sin(q[5]) - q_[2]*(np.sin(q[1] + q[2] + q[3])*np.cos(q[5]) + np.cos(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[5])) - q_[3]*(np.sin(q[1] + q[2] + q[3])*np.cos(q[5]) + np.cos(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[5])) - q_[5]*(np.cos(q[1] + q[2] + q[3])*np.sin(q[5]) + np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*np.cos(q[5])) - q_[1]*(np.sin(q[1] + q[2] + q[3])*np.cos(q[5]) + np.cos(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[5]))
        return R_

    def Cal_J9(self, q): #This Function Calculates Jacobian Matrix of EE of UR5e Robot
        J = np.zeros([3,6],dtype='float64')
        J[0,0] = (1333*np.cos(q[0]))/10000 + (649*np.cos(q[0])*np.cos(q[4]))/2500 - (997*np.sin(q[1] + q[2] + q[3])*np.sin(q[0]))/10000 + (np.sin(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000 + (649*np.cos(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4]))/2500
        J[0,1] = (np.cos(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 3922*np.sin(q[1] + q[2]) + 4250*np.sin(q[1]) + 2596*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])))/10000
        J[0,2] = (np.cos(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 3922*np.sin(q[1] + q[2]) + 2596*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])))/10000
        J[0,3] = (np.cos(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 2596*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])))/10000
        J[0,4] = - (649*np.sin(q[0])*np.sin(q[4]))/2500 - (649*np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4]))/2500
        J[0,5] = 0
        J[1,0] = (1333*np.sin(q[0]))/10000 + (649*np.cos(q[4])*np.sin(q[0]))/2500 + (997*np.sin(q[1] + q[2] + q[3])*np.cos(q[0]))/10000 - (np.cos(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000 - (649*np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4]))/2500
        J[1,1] = (np.sin(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 3922*np.sin(q[1] + q[2]) + 4250*np.sin(q[1]) + 2596*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])))/10000
        J[1,2] = (np.sin(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 3922*np.sin(q[1] + q[2]) + 2596*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])))/10000
        J[1,3] = (np.sin(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 2596*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])))/10000
        J[1,4] = (649*np.cos(q[0])*np.sin(q[4]))/2500 - (649*np.cos(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0]))/2500
        J[1,5] = 0
        J[2,0] = 0
        J[2,1] = (997*np.sin(q[1] + q[2] + q[3]))/10000 - (1961*np.cos(q[1] + q[2]))/5000 - (17*np.cos(q[1]))/40 - (649*np.cos(q[1] + q[2] + q[3])*np.sin(q[4]))/2500
        J[2,2] = (997*np.sin(q[1] + q[2] + q[3]))/10000 - (1961*np.cos(q[1] + q[2]))/5000 - (649*np.cos(q[1] + q[2] + q[3])*np.sin(q[4]))/2500
        J[2,3] = (997*np.sin(q[1] + q[2] + q[3]))/10000 - (649*np.cos(q[1] + q[2] + q[3])*np.sin(q[4]))/2500
        J[2,4] = -(649*np.sin(q[1] + q[2] + q[3])*np.cos(q[4]))/2500
        J[2,5] = 0
        return J

    def Cal_J9_(self, q, q_): #This Function Calculates Time Derivative of J9
        J_ = np.zeros([3,6],dtype='float64')
        J_[0,0] = - (649*q_[4]*(np.cos(q[0])*np.sin(q[4]) - np.cos(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0])))/2500 - q_[0]*((1333*np.sin(q[0]))/10000 - (17*np.cos(q[0])*np.cos(q[1]))/40 + (649*np.cos(q[4])*np.sin(q[0]))/2500 + (997*np.sin(q[1] + q[2] + q[3])*np.cos(q[0]))/10000 - (1961*np.cos(q[1] + q[2])*np.cos(q[0]))/5000 - (649*np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4]))/2500) - (q_[1]*np.sin(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 3922*np.sin(q[1] + q[2]) + 4250*np.sin(q[1]) + 2596*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 - (q_[3]*np.sin(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 2596*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 - (q_[2]*np.sin(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 3922*np.sin(q[1] + q[2]) + 2596*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])))/10000
        J_[0,1] = (q_[1]*np.cos(q[0])*(3922*np.cos(q[1] + q[2]) - 997*np.sin(q[1] + q[2] + q[3]) + 4250*np.cos(q[1]) + 2596*np.cos(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 - (q_[0]*np.sin(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 3922*np.sin(q[1] + q[2]) + 4250*np.sin(q[1]) + 2596*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 - (q_[3]*np.cos(q[0])*(997*np.sin(q[1] + q[2] + q[3]) - 2596*np.cos(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 + (q_[2]*np.cos(q[0])*(3922*np.cos(q[1] + q[2]) - 997*np.sin(q[1] + q[2] + q[3]) + 2596*np.cos(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 + (649*q_[4]*np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4]))/2500
        J_[0,2] = (q_[1]*np.cos(q[0])*(3922*np.cos(q[1] + q[2]) - 997*np.sin(q[1] + q[2] + q[3]) + 2596*np.cos(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 - (q_[3]*np.cos(q[0])*(997*np.sin(q[1] + q[2] + q[3]) - 2596*np.cos(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 + (q_[2]*np.cos(q[0])*(3922*np.cos(q[1] + q[2]) - 997*np.sin(q[1] + q[2] + q[3]) + 2596*np.cos(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 - (q_[0]*np.sin(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 3922*np.sin(q[1] + q[2]) + 2596*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 + (649*q_[4]*np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4]))/2500
        J_[0,3] = (649*q_[4]*np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4]))/2500 - (q_[2]*np.cos(q[0])*(997*np.sin(q[1] + q[2] + q[3]) - 2596*np.cos(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 - (q_[3]*np.cos(q[0])*(997*np.sin(q[1] + q[2] + q[3]) - 2596*np.cos(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 - (q_[0]*np.sin(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 2596*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 - (q_[1]*np.cos(q[0])*(997*np.sin(q[1] + q[2] + q[3]) - 2596*np.cos(q[1] + q[2] + q[3])*np.sin(q[4])))/10000
        J_[0,4] = (649*q_[1]*np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4]))/2500 - q_[4]*((649*np.cos(q[4])*np.sin(q[0]))/2500 - (649*np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4]))/2500) - q_[0]*((649*np.cos(q[0])*np.sin(q[4]))/2500 - (649*np.cos(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0]))/2500) + (649*q_[2]*np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4]))/2500 + (649*q_[3]*np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4]))/2500
        J_[0,5] = 0
        J_[1,0] = q_[0]*((1333*np.cos(q[0]))/10000 + (649*np.cos(q[0])*np.cos(q[4]))/2500 + (17*np.cos(q[1])*np.sin(q[0]))/40 - (997*np.sin(q[1] + q[2] + q[3])*np.sin(q[0]))/10000 + (1961*np.cos(q[1] + q[2])*np.sin(q[0]))/5000 + (649*np.cos(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4]))/2500) - q_[4]*((649*np.sin(q[0])*np.sin(q[4]))/2500 + (649*np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4]))/2500) + (q_[1]*np.cos(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 3922*np.sin(q[1] + q[2]) + 4250*np.sin(q[1]) + 2596*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 + (q_[3]*np.cos(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 2596*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 + (q_[2]*np.cos(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 3922*np.sin(q[1] + q[2]) + 2596*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])))/10000
        J_[1,1] = (q_[1]*np.sin(q[0])*(3922*np.cos(q[1] + q[2]) - 997*np.sin(q[1] + q[2] + q[3]) + 4250*np.cos(q[1]) + 2596*np.cos(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 + (q_[0]*np.cos(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 3922*np.sin(q[1] + q[2]) + 4250*np.sin(q[1]) + 2596*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 - (q_[3]*np.sin(q[0])*(997*np.sin(q[1] + q[2] + q[3]) - 2596*np.cos(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 + (q_[2]*np.sin(q[0])*(3922*np.cos(q[1] + q[2]) - 997*np.sin(q[1] + q[2] + q[3]) + 2596*np.cos(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 + (649*q_[4]*np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0]))/2500
        J_[1,2] = (q_[0]*np.cos(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 3922*np.sin(q[1] + q[2]) + 2596*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 - (q_[3]*np.sin(q[0])*(997*np.sin(q[1] + q[2] + q[3]) - 2596*np.cos(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 + (q_[1]*np.sin(q[0])*(3922*np.cos(q[1] + q[2]) - 997*np.sin(q[1] + q[2] + q[3]) + 2596*np.cos(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 + (q_[2]*np.sin(q[0])*(3922*np.cos(q[1] + q[2]) - 997*np.sin(q[1] + q[2] + q[3]) + 2596*np.cos(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 + (649*q_[4]*np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0]))/2500
        J_[1,3] = (q_[0]*np.cos(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 2596*np.sin(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 - (q_[1]*np.sin(q[0])*(997*np.sin(q[1] + q[2] + q[3]) - 2596*np.cos(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 - (q_[2]*np.sin(q[0])*(997*np.sin(q[1] + q[2] + q[3]) - 2596*np.cos(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 - (q_[3]*np.sin(q[0])*(997*np.sin(q[1] + q[2] + q[3]) - 2596*np.cos(q[1] + q[2] + q[3])*np.sin(q[4])))/10000 + (649*q_[4]*np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0]))/2500
        J_[1,4] = q_[4]*((649*np.cos(q[0])*np.cos(q[4]))/2500 + (649*np.cos(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4]))/2500) - q_[0]*((649*np.sin(q[0])*np.sin(q[4]))/2500 + (649*np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4]))/2500) + (649*q_[1]*np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0]))/2500 + (649*q_[2]*np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0]))/2500 + (649*q_[3]*np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0]))/2500
        J_[1,5] = 0
        J_[2,0] = 0
        J_[2,1] = q_[3]*((997*np.cos(q[1] + q[2] + q[3]))/10000 + (649*np.sin(q[1] + q[2] + q[3])*np.sin(q[4]))/2500) + q_[2]*((997*np.cos(q[1] + q[2] + q[3]))/10000 + (1961*np.sin(q[1] + q[2]))/5000 + (649*np.sin(q[1] + q[2] + q[3])*np.sin(q[4]))/2500) + q_[1]*((997*np.cos(q[1] + q[2] + q[3]))/10000 + (1961*np.sin(q[1] + q[2]))/5000 + (17*np.sin(q[1]))/40 + (649*np.sin(q[1] + q[2] + q[3])*np.sin(q[4]))/2500) - (649*q_[4]*np.cos(q[1] + q[2] + q[3])*np.cos(q[4]))/2500
        J_[2,2] = q_[3]*((997*np.cos(q[1] + q[2] + q[3]))/10000 + (649*np.sin(q[1] + q[2] + q[3])*np.sin(q[4]))/2500) + q_[1]*((997*np.cos(q[1] + q[2] + q[3]))/10000 + (1961*np.sin(q[1] + q[2]))/5000 + (649*np.sin(q[1] + q[2] + q[3])*np.sin(q[4]))/2500) + q_[2]*((997*np.cos(q[1] + q[2] + q[3]))/10000 + (1961*np.sin(q[1] + q[2]))/5000 + (649*np.sin(q[1] + q[2] + q[3])*np.sin(q[4]))/2500) - (649*q_[4]*np.cos(q[1] + q[2] + q[3])*np.cos(q[4]))/2500
        J_[2,3] = q_[1]*((997*np.cos(q[1] + q[2] + q[3]))/10000 + (649*np.sin(q[1] + q[2] + q[3])*np.sin(q[4]))/2500) + q_[2]*((997*np.cos(q[1] + q[2] + q[3]))/10000 + (649*np.sin(q[1] + q[2] + q[3])*np.sin(q[4]))/2500) + q_[3]*((997*np.cos(q[1] + q[2] + q[3]))/10000 + (649*np.sin(q[1] + q[2] + q[3])*np.sin(q[4]))/2500) - (649*q_[4]*np.cos(q[1] + q[2] + q[3])*np.cos(q[4]))/2500
        J_[2,4] = (649*q_[4]*np.sin(q[1] + q[2] + q[3])*np.sin(q[4]))/2500 - (649*q_[2]*np.cos(q[1] + q[2] + q[3])*np.cos(q[4]))/2500 - (649*q_[3]*np.cos(q[1] + q[2] + q[3])*np.cos(q[4]))/2500 - (649*q_[1]*np.cos(q[1] + q[2] + q[3])*np.cos(q[4]))/2500
        J_[2,5] = 0
        return J_

    def Cal_J8(self, q): #This Function Calculates Jacobian Matrix of Wrist of UR5e Robot
        J = np.zeros([3,6],dtype='float64')
        J[0,0] = (1333*np.cos(q[0]))/10000 - (997*np.sin(q[1] + q[2] + q[3])*np.sin(q[0]))/10000 + (np.sin(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000
        J[0,1] = (997*np.cos(q[1] + q[2] + q[3])*np.cos(q[0]))/10000 + (np.cos(q[0])*(1961*np.sin(q[1] + q[2]) + 2125*np.sin(q[1])))/5000
        J[0,2] = (np.cos(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 3922*np.sin(q[1] + q[2])))/10000
        J[0,3] = (997*np.cos(q[1] + q[2] + q[3])*np.cos(q[0]))/10000
        J[0,4] = 0
        J[0,5] = 0
        J[1,0] = (1333*np.sin(q[0]))/10000 + (997*np.sin(q[1] + q[2] + q[3])*np.cos(q[0]))/10000 - (np.cos(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000
        J[1,1] = (997*np.cos(q[1] + q[2] + q[3])*np.sin(q[0]))/10000 + (np.sin(q[0])*(1961*np.sin(q[1] + q[2]) + 2125*np.sin(q[1])))/5000
        J[1,2] = (np.sin(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 3922*np.sin(q[1] + q[2])))/10000
        J[1,3] = (997*np.cos(q[1] + q[2] + q[3])*np.sin(q[0]))/10000
        J[1,4] = 0
        J[1,5] = 0
        J[2,0] = 0
        J[2,1] = (997*np.sin(q[1] + q[2] + q[3]))/10000 - (1961*np.cos(q[1] + q[2]))/5000 - (17*np.cos(q[1]))/40
        J[2,2] = (997*np.sin(q[1] + q[2] + q[3]))/10000 - (1961*np.cos(q[1] + q[2]))/5000
        J[2,3] = (997*np.sin(q[1] + q[2] + q[3]))/10000
        J[2,4] = 0
        J[2,5] = 0
        return J

    def Cal_J8_(self, q, q_): #This Function Calculates Time Derivative of J8
        J_ = np.zeros([3,6],dtype='float64')
        J_[0,0] = - q_[2]*((997*np.cos(q[1] + q[2] + q[3])*np.sin(q[0]))/10000 + (1961*np.sin(q[1] + q[2])*np.sin(q[0]))/5000) - q_[1]*((997*np.cos(q[1] + q[2] + q[3])*np.sin(q[0]))/10000 + (np.sin(q[0])*(1961*np.sin(q[1] + q[2]) + 2125*np.sin(q[1])))/5000) - q_[0]*((1333*np.sin(q[0]))/10000 + (997*np.sin(q[1] + q[2] + q[3])*np.cos(q[0]))/10000 - (np.cos(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000) - (997*q_[3]*np.cos(q[1] + q[2] + q[3])*np.sin(q[0]))/10000
        J_[0,1] = - q_[1]*((997*np.sin(q[1] + q[2] + q[3])*np.cos(q[0]))/10000 - (np.cos(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000) - q_[2]*((997*np.sin(q[1] + q[2] + q[3])*np.cos(q[0]))/10000 - (1961*np.cos(q[1] + q[2])*np.cos(q[0]))/5000) - q_[0]*((997*np.cos(q[1] + q[2] + q[3])*np.sin(q[0]))/10000 + (np.sin(q[0])*(1961*np.sin(q[1] + q[2]) + 2125*np.sin(q[1])))/5000) - (997*q_[3]*np.sin(q[1] + q[2] + q[3])*np.cos(q[0]))/10000
        J_[0,2] = - (q_[1]*np.cos(q[0])*(997*np.sin(q[1] + q[2] + q[3]) - 3922*np.cos(q[1] + q[2])))/10000 - (q_[2]*np.cos(q[0])*(997*np.sin(q[1] + q[2] + q[3]) - 3922*np.cos(q[1] + q[2])))/10000 - (q_[0]*np.sin(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 3922*np.sin(q[1] + q[2])))/10000 - (997*q_[3]*np.sin(q[1] + q[2] + q[3])*np.cos(q[0]))/10000
        J_[0,3] = - (997*q_[0]*np.cos(q[1] + q[2] + q[3])*np.sin(q[0]))/10000 - (997*q_[1]*np.sin(q[1] + q[2] + q[3])*np.cos(q[0]))/10000 - (997*q_[2]*np.sin(q[1] + q[2] + q[3])*np.cos(q[0]))/10000 - (997*q_[3]*np.sin(q[1] + q[2] + q[3])*np.cos(q[0]))/10000
        J_[0,4] = 0
        J_[0,5] = 0
        J_[1,0] = q_[2]*((997*np.cos(q[1] + q[2] + q[3])*np.cos(q[0]))/10000 + (1961*np.sin(q[1] + q[2])*np.cos(q[0]))/5000) + q_[1]*((997*np.cos(q[1] + q[2] + q[3])*np.cos(q[0]))/10000 + (np.cos(q[0])*(1961*np.sin(q[1] + q[2]) + 2125*np.sin(q[1])))/5000) + q_[0]*((1333*np.cos(q[0]))/10000 - (997*np.sin(q[1] + q[2] + q[3])*np.sin(q[0]))/10000 + (np.sin(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000) + (997*q_[3]*np.cos(q[1] + q[2] + q[3])*np.cos(q[0]))/10000
        J_[1,1] = q_[0]*((997*np.cos(q[1] + q[2] + q[3])*np.cos(q[0]))/10000 + (np.cos(q[0])*(1961*np.sin(q[1] + q[2]) + 2125*np.sin(q[1])))/5000) - q_[1]*((997*np.sin(q[1] + q[2] + q[3])*np.sin(q[0]))/10000 - (np.sin(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000) - q_[2]*((997*np.sin(q[1] + q[2] + q[3])*np.sin(q[0]))/10000 - (1961*np.cos(q[1] + q[2])*np.sin(q[0]))/5000) - (997*q_[3]*np.sin(q[1] + q[2] + q[3])*np.sin(q[0]))/10000
        J_[1,2] = (q_[0]*np.cos(q[0])*(997*np.cos(q[1] + q[2] + q[3]) + 3922*np.sin(q[1] + q[2])))/10000 - (q_[1]*np.sin(q[0])*(997*np.sin(q[1] + q[2] + q[3]) - 3922*np.cos(q[1] + q[2])))/10000 - (q_[2]*np.sin(q[0])*(997*np.sin(q[1] + q[2] + q[3]) - 3922*np.cos(q[1] + q[2])))/10000 - (997*q_[3]*np.sin(q[1] + q[2] + q[3])*np.sin(q[0]))/10000
        J_[1,3] = (997*q_[0]*np.cos(q[1] + q[2] + q[3])*np.cos(q[0]))/10000 - (997*q_[1]*np.sin(q[1] + q[2] + q[3])*np.sin(q[0]))/10000 - (997*q_[2]*np.sin(q[1] + q[2] + q[3])*np.sin(q[0]))/10000 - (997*q_[3]*np.sin(q[1] + q[2] + q[3])*np.sin(q[0]))/10000
        J_[1,4] = 0
        J_[1,5] = 0
        J_[2,0] = 0
        J_[2,1] = q_[2]*((997*np.cos(q[1] + q[2] + q[3]))/10000 + (1961*np.sin(q[1] + q[2]))/5000) + (997*q_[3]*np.cos(q[1] + q[2] + q[3]))/10000 + q_[1]*((997*np.cos(q[1] + q[2] + q[3]))/10000 + (1961*np.sin(q[1] + q[2]))/5000 + (17*np.sin(q[1]))/40)
        J_[2,2] = q_[1]*((997*np.cos(q[1] + q[2] + q[3]))/10000 + (1961*np.sin(q[1] + q[2]))/5000) + q_[2]*((997*np.cos(q[1] + q[2] + q[3]))/10000 + (1961*np.sin(q[1] + q[2]))/5000) + (997*q_[3]*np.cos(q[1] + q[2] + q[3]))/10000
        J_[2,3] = (997*np.cos(q[1] + q[2] + q[3])*(q_[1] + q_[2] + q_[3]))/10000
        J_[2,4] = 0
        J_[2,5] = 0
        return J_

    def Cal_Jw(self, q): #This Function Calculates Rotational Jacobian Matrix of EE of UR5e Robot
        J = np.zeros([3,6],dtype='float64')
        J[0,0] = 0
        J[0,1] = np.sin(q[0])
        J[0,2] = np.sin(q[0])
        J[0,3] = np.sin(q[0])
        J[0,4] = np.sin(q[1] + q[2] + q[3])*np.cos(q[0])
        J[0,5] = np.cos(q[4])*np.sin(q[0]) - np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4])
        J[1,0] = 0
        J[1,1] = -np.cos(q[0])
        J[1,2] = -np.cos(q[0])
        J[1,3] = -np.cos(q[0])
        J[1,4] = np.sin(q[1] + q[2] + q[3])*np.sin(q[0])
        J[1,5] = - np.cos(q[0])*np.cos(q[4]) - np.cos(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4])
        J[2,0] = 1
        J[2,1] = 0
        J[2,2] = 0
        J[2,3] = 0
        J[2,4] = -np.cos(q[1] + q[2] + q[3])
        J[2,5] = -np.sin(q[1] + q[2] + q[3])*np.sin(q[4])
        return J

    def Cal_Jw_(self, q, q_): #This Function Calculates Time Derivative of Jw
        J_ = np.zeros([3,6],dtype='float64')
        J_[0,0] = 0
        J_[0,1] = q_[0]*np.cos(q[0])
        J_[0,2] = q_[0]*np.cos(q[0])
        J_[0,3] = q_[0]*np.cos(q[0])
        J_[0,4] = q_[1]*np.cos(q[1] + q[2] + q[3])*np.cos(q[0]) + q_[2]*np.cos(q[1] + q[2] + q[3])*np.cos(q[0]) + q_[3]*np.cos(q[1] + q[2] + q[3])*np.cos(q[0]) - q_[0]*np.sin(q[1] + q[2] + q[3])*np.sin(q[0])
        J_[0,5] = q_[0]*(np.cos(q[0])*np.cos(q[4]) + np.cos(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4])) - q_[4]*(np.sin(q[0])*np.sin(q[4]) + np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.cos(q[4])) + q_[1]*np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4]) + q_[2]*np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4]) + q_[3]*np.sin(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4])
        J_[1,0] = 0
        J_[1,1] = q_[0]*np.sin(q[0])
        J_[1,2] = q_[0]*np.sin(q[0])
        J_[1,3] = q_[0]*np.sin(q[0])
        J_[1,4] = q_[0]*np.sin(q[1] + q[2] + q[3])*np.cos(q[0]) + q_[1]*np.cos(q[1] + q[2] + q[3])*np.sin(q[0]) + q_[2]*np.cos(q[1] + q[2] + q[3])*np.sin(q[0]) + q_[3]*np.cos(q[1] + q[2] + q[3])*np.sin(q[0])
        J_[1,5] = q_[0]*(np.cos(q[4])*np.sin(q[0]) - np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4])) + q_[4]*(np.cos(q[0])*np.sin(q[4]) - np.cos(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[0])) + q_[1]*np.sin(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4]) + q_[2]*np.sin(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4]) + q_[3]*np.sin(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4])
        J_[2,0] = 0
        J_[2,1] = 0
        J_[2,2] = 0
        J_[2,3] = 0
        J_[2,4] = np.sin(q[1] + q[2] + q[3])*(q_[1] + q_[2] + q_[3])
        J_[2,5] = - q_[1]*np.cos(q[1] + q[2] + q[3])*np.sin(q[4]) - q_[2]*np.cos(q[1] + q[2] + q[3])*np.sin(q[4]) - q_[3]*np.cos(q[1] + q[2] + q[3])*np.sin(q[4]) - q_[4]*np.sin(q[1] + q[2] + q[3])*np.cos(q[4])
        return J_

    def Cal_M(self, q): #This Function Calculates The Matrix M in Equation (1)
        m = np.array([[3.761],[8.058],[2.846],[1.37],[1.3],[0.365]],dtype='float64')
        mp = 1.0
        M = np.zeros([6,6],dtype='float64')
        M[0,0] = (7999453625994239*m[0])/4611686018427387904 + (26155996692470328580334117*m[1])/540431955284459520000000000 + (44197516235818609323449*m[2])/337769972052787200000000 + (8361428230273126137767913*m[3])/45035996273704960000000000 + (47901573450033238331*m[1]*np.cos(2*q[1]))/1383505805528216371200 + (289*m[2]*np.cos(2*q[1]))/3200 + (289*m[3]*np.cos(2*q[1]))/3200 - (18399582378411726024713*m[3]*np.cos(2*q[1] + 2*q[2] + 2*q[3]))/45035996273704960000000000 + m[5]*(((1333*np.sin(q[0]))/10000 + (283736864587506557649*np.cos(q[4])*np.sin(q[0]))/2882303761517117440000 + (997*np.sin(q[1] + q[2] + q[3])*np.cos(q[0]))/10000 - (np.cos(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000 - (283736864587506557649*np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4]))/2882303761517117440000)**2 + ((1333*np.cos(q[0]))/10000 + (283736864587506557649*np.cos(q[0])*np.cos(q[4]))/2882303761517117440000 - (997*np.sin(q[1] + q[2] + q[3])*np.sin(q[0]))/10000 + (np.sin(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000 + (283736864587506557649*np.cos(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4]))/2882303761517117440000)**2) + (542707053720217*m[5]*(np.cos(q[1] + q[2] + q[3])*np.sin(q[5]) + np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*np.cos(q[5]))**2)/288230376151711744 + (542707053720217*m[5]*(np.cos(q[1] + q[2] + q[3])*np.cos(q[5]) - np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*np.sin(q[5]))**2)/288230376151711744 + m[4]*(((1333*np.sin(q[0]))/10000 + (817*np.cos(q[4])*np.sin(q[0]))/50000 + (979*np.sin(q[1] + q[2] + q[3])*np.cos(q[0]))/10000 - (np.cos(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000 - (817*np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4]))/50000)**2 + ((1333*np.cos(q[0]))/10000 + (817*np.cos(q[0])*np.cos(q[4]))/50000 - (979*np.sin(q[1] + q[2] + q[3])*np.sin(q[0]))/10000 + (np.sin(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000 + (817*np.cos(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4]))/50000)**2) + mp*(((1333*np.sin(q[0]))/10000 + (649*np.cos(q[4])*np.sin(q[0]))/2500 + (997*np.sin(q[1] + q[2] + q[3])*np.cos(q[0]))/10000 - (np.cos(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000 - (649*np.cos(q[1] + q[2] + q[3])*np.cos(q[0])*np.sin(q[4]))/2500)**2 + ((1333*np.cos(q[0]))/10000 + (649*np.cos(q[0])*np.cos(q[4]))/2500 - (997*np.sin(q[1] + q[2] + q[3])*np.sin(q[0]))/10000 + (np.sin(q[0])*(1961*np.cos(q[1] + q[2]) + 2125*np.cos(q[1])))/5000 + (649*np.cos(q[1] + q[2] + q[3])*np.sin(q[0])*np.sin(q[4]))/2500)**2) + (13216703834082521293499*m[2]*np.cos(2*q[1] + 2*q[2]))/337769972052787200000000 + (3845521*m[3]*np.cos(2*q[1] + 2*q[2]))/50000000 + (2968519231631617*m[4]*np.cos(q[1] + q[2] + q[3])**2)/2305843009213693952 - (13889*m[3]*np.sin(2*q[1] + q[2] + q[3]))/2000000 - (13889*m[3]*np.sin(q[2] + q[3]))/2000000 + (20587*m[2]*np.cos(q[2]))/200000 + (33337*m[3]*np.cos(q[2]))/200000 - (1602137*m[3]*np.sin(q[3]))/250000000 - (1602137*m[3]*np.sin(2*q[1] + 2*q[2] + q[3]))/250000000 + (20587*m[2]*np.cos(2*q[1] + q[2]))/200000 + (33337*m[3]*np.cos(2*q[1] + q[2]))/200000 + (2968519231631617*m[4]*np.sin(q[1] + q[2] + q[3])**2*np.cos(q[4])**2)/2305843009213693952 + (106253245864567*m[4]*np.sin(q[1] + q[2] + q[3])**2*np.sin(q[4])**2)/144115188075855872 + (106253245864567*m[5]*np.sin(q[1] + q[2] + q[3])**2*np.sin(q[4])**2)/36028797018963968
        M[0,1] = (1602137*m[4]*np.sin(q[1] + q[2] - q[4]))/500000000 + (556407991456100359549689*m[5]*np.sin(q[1] + q[2] - q[4]))/28823037615171174400000000 + (1272689*mp*np.sin(q[1] + q[2] - q[4]))/25000000 - (144609*m[4]*np.cos(q[1] + q[2] + q[3] + q[4]))/500000000 - (5958474156337637710629*m[5]*np.cos(q[1] + q[2] + q[3] + q[4]))/3602879701896396800000000 - (13629*mp*np.cos(q[1] + q[2] + q[3] + q[4]))/3125000 + (64183*m[2]*np.sin(q[1] + q[2]))/10000000 + (515743*m[3]*np.sin(q[1] + q[2]))/10000000 + (2614013*m[4]*np.sin(q[1] + q[2]))/50000000 + (2614013*m[5]*np.sin(q[1] + q[2]))/50000000 + (13889*m[4]*np.sin(q[1] + q[4]))/4000000 + (4823526697987611480033*m[5]*np.sin(q[1] + q[4]))/230584300921369395200000 + (2614013*mp*np.sin(q[1] + q[2]))/50000000 + (11033*mp*np.sin(q[1] + q[4]))/200000 + (24089*m[1]*np.sin(q[1]))/1000000 + (901*m[2]*np.sin(q[1]))/80000 + (4471*m[3]*np.sin(q[1]))/80000 + (22661*m[4]*np.sin(q[1]))/400000 + (22661*m[5]*np.sin(q[1]))/400000 + (22661*mp*np.sin(q[1]))/400000 + (236113*m[4]*np.cos(q[1] + q[2] + q[3] - q[4]))/125000000 + (18399582378411726024713*m[4]*np.cos(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 - (18399582378411726024713*m[4]*np.cos(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 + (66110689448889027932217*m[5]*np.cos(q[1] + q[2] + q[3] - q[4]))/5764607523034234880000000 + (71648743731038005291574683765544160407201*m[5]*np.cos(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 - (71648743731038005291574683765544160407201*m[5]*np.cos(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 + (151217*mp*np.cos(q[1] + q[2] + q[3] - q[4]))/5000000 + (421201*mp*np.cos(q[1] + q[2] + q[3] - 2*q[4]))/25000000 - (421201*mp*np.cos(q[1] + q[2] + q[3] + 2*q[4]))/25000000 + (13889*m[4]*np.sin(q[1] - q[4]))/4000000 + (4823526697987611480033*m[5]*np.sin(q[1] - q[4]))/230584300921369395200000 + (11033*mp*np.sin(q[1] - q[4]))/200000 + (214871*m[3]*np.cos(q[1] + q[2] + q[3]))/100000000 + (1305007*m[4]*np.cos(q[1] + q[2] + q[3]))/100000000 + (1329001*m[5]*np.cos(q[1] + q[2] + q[3]))/100000000 + (1329001*mp*np.cos(q[1] + q[2] + q[3]))/100000000 + (1602137*m[4]*np.sin(q[1] + q[2] + q[4]))/500000000 + (556407991456100359549689*m[5]*np.sin(q[1] + q[2] + q[4]))/28823037615171174400000000 + (1272689*mp*np.sin(q[1] + q[2] + q[4]))/25000000
        M[0,2] = (1602137*m[4]*np.sin(q[1] + q[2] - q[4]))/500000000 + (556407991456100359549689*m[5]*np.sin(q[1] + q[2] - q[4]))/28823037615171174400000000 + (1272689*mp*np.sin(q[1] + q[2] - q[4]))/25000000 - (144609*m[4]*np.cos(q[1] + q[2] + q[3] + q[4]))/500000000 - (5958474156337637710629*m[5]*np.cos(q[1] + q[2] + q[3] + q[4]))/3602879701896396800000000 - (13629*mp*np.cos(q[1] + q[2] + q[3] + q[4]))/3125000 + (64183*m[2]*np.sin(q[1] + q[2]))/10000000 + (515743*m[3]*np.sin(q[1] + q[2]))/10000000 + (2614013*m[4]*np.sin(q[1] + q[2]))/50000000 + (2614013*m[5]*np.sin(q[1] + q[2]))/50000000 + (2614013*mp*np.sin(q[1] + q[2]))/50000000 + (236113*m[4]*np.cos(q[1] + q[2] + q[3] - q[4]))/125000000 + (18399582378411726024713*m[4]*np.cos(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 - (18399582378411726024713*m[4]*np.cos(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 + (66110689448889027932217*m[5]*np.cos(q[1] + q[2] + q[3] - q[4]))/5764607523034234880000000 + (71648743731038005291574683765544160407201*m[5]*np.cos(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 - (71648743731038005291574683765544160407201*m[5]*np.cos(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 + (151217*mp*np.cos(q[1] + q[2] + q[3] - q[4]))/5000000 + (421201*mp*np.cos(q[1] + q[2] + q[3] - 2*q[4]))/25000000 - (421201*mp*np.cos(q[1] + q[2] + q[3] + 2*q[4]))/25000000 + (214871*m[3]*np.cos(q[1] + q[2] + q[3]))/100000000 + (1305007*m[4]*np.cos(q[1] + q[2] + q[3]))/100000000 + (1329001*m[5]*np.cos(q[1] + q[2] + q[3]))/100000000 + (1329001*mp*np.cos(q[1] + q[2] + q[3]))/100000000 + (1602137*m[4]*np.sin(q[1] + q[2] + q[4]))/500000000 + (556407991456100359549689*m[5]*np.sin(q[1] + q[2] + q[4]))/28823037615171174400000000 + (1272689*mp*np.sin(q[1] + q[2] + q[4]))/25000000
        M[0,3] = (236113*m[4]*np.cos(q[1] + q[2] + q[3] - q[4]))/125000000 - (5958474156337637710629*m[5]*np.cos(q[1] + q[2] + q[3] + q[4]))/3602879701896396800000000 - (13629*mp*np.cos(q[1] + q[2] + q[3] + q[4]))/3125000 - (144609*m[4]*np.cos(q[1] + q[2] + q[3] + q[4]))/500000000 + (18399582378411726024713*m[4]*np.cos(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 - (18399582378411726024713*m[4]*np.cos(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 + (66110689448889027932217*m[5]*np.cos(q[1] + q[2] + q[3] - q[4]))/5764607523034234880000000 + (71648743731038005291574683765544160407201*m[5]*np.cos(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 - (71648743731038005291574683765544160407201*m[5]*np.cos(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 + (151217*mp*np.cos(q[1] + q[2] + q[3] - q[4]))/5000000 + (421201*mp*np.cos(q[1] + q[2] + q[3] - 2*q[4]))/25000000 - (421201*mp*np.cos(q[1] + q[2] + q[3] + 2*q[4]))/25000000 + (214871*m[3]*np.cos(q[1] + q[2] + q[3]))/100000000 + (1305007*m[4]*np.cos(q[1] + q[2] + q[3]))/100000000 + (1329001*m[5]*np.cos(q[1] + q[2] + q[3]))/100000000 + (1329001*mp*np.cos(q[1] + q[2] + q[3]))/100000000
        M[0,4] = (1602137*m[4]*np.sin(q[1] + q[2] - q[4]))/500000000 + (556407991456100359549689*m[5]*np.sin(q[1] + q[2] - q[4]))/28823037615171174400000000 + (1272689*mp*np.sin(q[1] + q[2] - q[4]))/25000000 - (236113*m[4]*np.cos(q[1] + q[2] + q[3] + q[4]))/125000000 - (66110689448889027932217*m[5]*np.cos(q[1] + q[2] + q[3] + q[4]))/5764607523034234880000000 - (151217*mp*np.cos(q[1] + q[2] + q[3] + q[4]))/5000000 - (13889*m[4]*np.sin(q[1] + q[4]))/4000000 - (4823526697987611480033*m[5]*np.sin(q[1] + q[4]))/230584300921369395200000 - (11033*mp*np.sin(q[1] + q[4]))/200000 - (144609*m[4]*np.cos(q[1] + q[2] + q[3] - q[4]))/500000000 - (5958474156337637710629*m[5]*np.cos(q[1] + q[2] + q[3] - q[4]))/3602879701896396800000000 - (13629*mp*np.cos(q[1] + q[2] + q[3] - q[4]))/3125000 + (13889*m[4]*np.sin(q[1] - q[4]))/4000000 + (4823526697987611480033*m[5]*np.sin(q[1] - q[4]))/230584300921369395200000 + (11033*mp*np.sin(q[1] - q[4]))/200000 - (35001652044750319774713*m[4]*np.cos(q[1] + q[2] + q[3]))/22517998136852480000000000 - (96149074149345570669947681665422560407201*m[5]*np.cos(q[1] + q[2] + q[3]))/8307674973655724205648794126752153600000000 - (421201*mp*np.cos(q[1] + q[2] + q[3]))/6250000 - (1602137*m[4]*np.sin(q[1] + q[2] + q[4]))/500000000 - (556407991456100359549689*m[5]*np.sin(q[1] + q[2] + q[4]))/28823037615171174400000000 - (1272689*mp*np.sin(q[1] + q[2] + q[4]))/25000000
        M[0,5] = (106253245864567*m[5]*(np.cos(q[1] + q[2] + q[3] + q[4]) - np.cos(q[1] + q[2] + q[3] - q[4])))/72057594037927936
        M[1,0] = (1602137*m[4]*np.sin(q[1] + q[2] - q[4]))/500000000 + (556407991456100359549689*m[5]*np.sin(q[1] + q[2] - q[4]))/28823037615171174400000000 + (1272689*mp*np.sin(q[1] + q[2] - q[4]))/25000000 - (144609*m[4]*np.cos(q[1] + q[2] + q[3] + q[4]))/500000000 - (5958474156337637710629*m[5]*np.cos(q[1] + q[2] + q[3] + q[4]))/3602879701896396800000000 - (13629*mp*np.cos(q[1] + q[2] + q[3] + q[4]))/3125000 + (64183*m[2]*np.sin(q[1] + q[2]))/10000000 + (515743*m[3]*np.sin(q[1] + q[2]))/10000000 + (2614013*m[4]*np.sin(q[1] + q[2]))/50000000 + (2614013*m[5]*np.sin(q[1] + q[2]))/50000000 + (13889*m[4]*np.sin(q[1] + q[4]))/4000000 + (4823526697987611480033*m[5]*np.sin(q[1] + q[4]))/230584300921369395200000 + (2614013*mp*np.sin(q[1] + q[2]))/50000000 + (11033*mp*np.sin(q[1] + q[4]))/200000 + (24089*m[1]*np.sin(q[1]))/1000000 + (901*m[2]*np.sin(q[1]))/80000 + (4471*m[3]*np.sin(q[1]))/80000 + (22661*m[4]*np.sin(q[1]))/400000 + (22661*m[5]*np.sin(q[1]))/400000 + (22661*mp*np.sin(q[1]))/400000 + (236113*m[4]*np.cos(q[1] + q[2] + q[3] - q[4]))/125000000 + (18399582378411726024713*m[4]*np.cos(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 - (18399582378411726024713*m[4]*np.cos(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 + (66110689448889027932217*m[5]*np.cos(q[1] + q[2] + q[3] - q[4]))/5764607523034234880000000 + (71648743731038005291574683765544160407201*m[5]*np.cos(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 - (71648743731038005291574683765544160407201*m[5]*np.cos(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 + (151217*mp*np.cos(q[1] + q[2] + q[3] - q[4]))/5000000 + (421201*mp*np.cos(q[1] + q[2] + q[3] - 2*q[4]))/25000000 - (421201*mp*np.cos(q[1] + q[2] + q[3] + 2*q[4]))/25000000 + (13889*m[4]*np.sin(q[1] - q[4]))/4000000 + (4823526697987611480033*m[5]*np.sin(q[1] - q[4]))/230584300921369395200000 + (11033*mp*np.sin(q[1] - q[4]))/200000 + (214871*m[3]*np.cos(q[1] + q[2] + q[3]))/100000000 + (1305007*m[4]*np.cos(q[1] + q[2] + q[3]))/100000000 + (1329001*m[5]*np.cos(q[1] + q[2] + q[3]))/100000000 + (1329001*mp*np.cos(q[1] + q[2] + q[3]))/100000000 + (1602137*m[4]*np.sin(q[1] + q[2] + q[4]))/500000000 + (556407991456100359549689*m[5]*np.sin(q[1] + q[2] + q[4]))/28823037615171174400000000 + (1272689*mp*np.sin(q[1] + q[2] + q[4]))/25000000
        M[1,1] = (189613668002494751*m[1])/2702159776422297600 + (21920467927011101201437*m[2])/84442493013196800000000 + (7566052454042812949457913*m[3])/22517998136852480000000000 + (15545348778752874728564713*m[4])/45035996273704960000000000 + (5842742148447957296820063117005457554484897*m[5])/16615349947311448411297588253504307200000000 + (37808201*mp)/100000000 - (18399582378411726024713*m[4]*np.cos(2*q[4]))/45035996273704960000000000 - (71648743731038005291574683765544160407201*m[5]*np.cos(2*q[4]))/16615349947311448411297588253504307200000000 - (421201*mp*np.cos(2*q[4]))/12500000 - (13889*m[4]*np.sin(q[2] + q[3] - q[4]))/2000000 - (4823526697987611480033*m[5]*np.sin(q[2] + q[3] - q[4]))/115292150460684697600000 - (11033*mp*np.sin(q[2] + q[3] - q[4]))/100000 - (13889*m[3]*np.sin(q[2] + q[3]))/1000000 - (16643*m[4]*np.sin(q[2] + q[3]))/200000 - (16949*m[5]*np.sin(q[2] + q[3]))/200000 + (1602137*m[4]*np.sin(q[3] + q[4]))/250000000 + (556407991456100359549689*m[5]*np.sin(q[3] + q[4]))/14411518807585587200000000 - (16949*mp*np.sin(q[2] + q[3]))/200000 + (1272689*mp*np.sin(q[3] + q[4]))/12500000 + (20587*m[2]*np.cos(q[2]))/100000 + (33337*m[3]*np.cos(q[2]))/100000 + (33337*m[4]*np.cos(q[2]))/100000 + (33337*m[5]*np.cos(q[2]))/100000 + (33337*mp*np.cos(q[2]))/100000 - (1602137*m[3]*np.sin(q[3]))/125000000 - (1919819*m[4]*np.sin(q[3]))/25000000 - (1955117*m[5]*np.sin(q[3]))/25000000 - (1955117*mp*np.sin(q[3]))/25000000 - (1602137*m[4]*np.sin(q[3] - q[4]))/250000000 - (556407991456100359549689*m[5]*np.sin(q[3] - q[4]))/14411518807585587200000000 - (1272689*mp*np.sin(q[3] - q[4]))/12500000 + (13889*m[4]*np.sin(q[2] + q[3] + q[4]))/2000000 + (4823526697987611480033*m[5]*np.sin(q[2] + q[3] + q[4]))/115292150460684697600000 + (11033*mp*np.sin(q[2] + q[3] + q[4]))/100000
        M[1,2] = (6668042626502429201437*m[2])/84442493013196800000000 + (3498739040573833749457913*m[3])/22517998136852480000000000 + (7410721951814916328564713*m[4])/45035996273704960000000000 + (2841594564214826927529436238716242066484897*m[5])/16615349947311448411297588253504307200000000 + (19745701*mp)/100000000 - (18399582378411726024713*m[4]*np.cos(2*q[4]))/45035996273704960000000000 - (71648743731038005291574683765544160407201*m[5]*np.cos(2*q[4]))/16615349947311448411297588253504307200000000 - (421201*mp*np.cos(2*q[4]))/12500000 - (13889*m[4]*np.sin(q[2] + q[3] - q[4]))/4000000 - (4823526697987611480033*m[5]*np.sin(q[2] + q[3] - q[4]))/230584300921369395200000 - (11033*mp*np.sin(q[2] + q[3] - q[4]))/200000 - (13889*m[3]*np.sin(q[2] + q[3]))/2000000 - (16643*m[4]*np.sin(q[2] + q[3]))/400000 - (16949*m[5]*np.sin(q[2] + q[3]))/400000 + (1602137*m[4]*np.sin(q[3] + q[4]))/250000000 + (556407991456100359549689*m[5]*np.sin(q[3] + q[4]))/14411518807585587200000000 - (16949*mp*np.sin(q[2] + q[3]))/400000 + (1272689*mp*np.sin(q[3] + q[4]))/12500000 + (20587*m[2]*np.cos(q[2]))/200000 + (33337*m[3]*np.cos(q[2]))/200000 + (33337*m[4]*np.cos(q[2]))/200000 + (33337*m[5]*np.cos(q[2]))/200000 + (33337*mp*np.cos(q[2]))/200000 - (1602137*m[3]*np.sin(q[3]))/125000000 - (1919819*m[4]*np.sin(q[3]))/25000000 - (1955117*m[5]*np.sin(q[3]))/25000000 - (1955117*mp*np.sin(q[3]))/25000000 - (1602137*m[4]*np.sin(q[3] - q[4]))/250000000 - (556407991456100359549689*m[5]*np.sin(q[3] - q[4]))/14411518807585587200000000 - (1272689*mp*np.sin(q[3] - q[4]))/12500000 + (13889*m[4]*np.sin(q[2] + q[3] + q[4]))/4000000 + (4823526697987611480033*m[5]*np.sin(q[2] + q[3] + q[4]))/230584300921369395200000 + (11033*mp*np.sin(q[2] + q[3] + q[4]))/200000
        M[1,3] = (35001652044750319774713*m[3])/22517998136852480000000000 + (483247174756749469198313*m[4])/45035996273704960000000000 + (285807478425424191286975723588076589362849*m[5])/16615349947311448411297588253504307200000000 + (4363617*mp)/100000000 - (18399582378411726024713*m[4]*np.cos(2*q[4]))/45035996273704960000000000 - (71648743731038005291574683765544160407201*m[5]*np.cos(2*q[4]))/16615349947311448411297588253504307200000000 - (421201*mp*np.cos(2*q[4]))/12500000 - (13889*m[4]*np.sin(q[2] + q[3] - q[4]))/4000000 - (4823526697987611480033*m[5]*np.sin(q[2] + q[3] - q[4]))/230584300921369395200000 - (11033*mp*np.sin(q[2] + q[3] - q[4]))/200000 - (13889*m[3]*np.sin(q[2] + q[3]))/2000000 - (16643*m[4]*np.sin(q[2] + q[3]))/400000 - (16949*m[5]*np.sin(q[2] + q[3]))/400000 + (1602137*m[4]*np.sin(q[3] + q[4]))/500000000 + (556407991456100359549689*m[5]*np.sin(q[3] + q[4]))/28823037615171174400000000 - (16949*mp*np.sin(q[2] + q[3]))/400000 + (1272689*mp*np.sin(q[3] + q[4]))/25000000 - (1602137*m[3]*np.sin(q[3]))/250000000 - (1919819*m[4]*np.sin(q[3]))/50000000 - (1955117*m[5]*np.sin(q[3]))/50000000 - (1955117*mp*np.sin(q[3]))/50000000 - (1602137*m[4]*np.sin(q[3] - q[4]))/500000000 - (556407991456100359549689*m[5]*np.sin(q[3] - q[4]))/28823037615171174400000000 - (1272689*mp*np.sin(q[3] - q[4]))/25000000 + (13889*m[4]*np.sin(q[2] + q[3] + q[4]))/4000000 + (4823526697987611480033*m[5]*np.sin(q[2] + q[3] + q[4]))/230584300921369395200000 + (11033*mp*np.sin(q[2] + q[3] + q[4]))/200000
        M[1,4] = (np.cos(q[4])*(1000807923592781103104000*m[4]*np.sin(q[2] + q[3]) - 1414428269968720189880265*m[5] - 3730006591601870781808640*mp - 230539048752313576456192*m[4] + 6029408372484514350041250*m[5]*np.sin(q[2] + q[3]) + 15900228700409178357760000*mp*np.sin(q[2] + q[3]) + 923569100313149996793856*m[4]*np.sin(q[3]) + 5564079914561003595496890*m[5]*np.sin(q[3]) + 14673105167765834710384640*mp*np.sin(q[3])))/144115188075855872000000000
        M[1,5] = (106253245864567*m[5]*np.cos(q[4]))/36028797018963968
        M[2,0] = (1602137*m[4]*np.sin(q[1] + q[2] - q[4]))/500000000 + (556407991456100359549689*m[5]*np.sin(q[1] + q[2] - q[4]))/28823037615171174400000000 + (1272689*mp*np.sin(q[1] + q[2] - q[4]))/25000000 - (144609*m[4]*np.cos(q[1] + q[2] + q[3] + q[4]))/500000000 - (5958474156337637710629*m[5]*np.cos(q[1] + q[2] + q[3] + q[4]))/3602879701896396800000000 - (13629*mp*np.cos(q[1] + q[2] + q[3] + q[4]))/3125000 + (64183*m[2]*np.sin(q[1] + q[2]))/10000000 + (515743*m[3]*np.sin(q[1] + q[2]))/10000000 + (2614013*m[4]*np.sin(q[1] + q[2]))/50000000 + (2614013*m[5]*np.sin(q[1] + q[2]))/50000000 + (2614013*mp*np.sin(q[1] + q[2]))/50000000 + (236113*m[4]*np.cos(q[1] + q[2] + q[3] - q[4]))/125000000 + (18399582378411726024713*m[4]*np.cos(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 - (18399582378411726024713*m[4]*np.cos(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 + (66110689448889027932217*m[5]*np.cos(q[1] + q[2] + q[3] - q[4]))/5764607523034234880000000 + (71648743731038005291574683765544160407201*m[5]*np.cos(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 - (71648743731038005291574683765544160407201*m[5]*np.cos(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 + (151217*mp*np.cos(q[1] + q[2] + q[3] - q[4]))/5000000 + (421201*mp*np.cos(q[1] + q[2] + q[3] - 2*q[4]))/25000000 - (421201*mp*np.cos(q[1] + q[2] + q[3] + 2*q[4]))/25000000 + (214871*m[3]*np.cos(q[1] + q[2] + q[3]))/100000000 + (1305007*m[4]*np.cos(q[1] + q[2] + q[3]))/100000000 + (1329001*m[5]*np.cos(q[1] + q[2] + q[3]))/100000000 + (1329001*mp*np.cos(q[1] + q[2] + q[3]))/100000000 + (1602137*m[4]*np.sin(q[1] + q[2] + q[4]))/500000000 + (556407991456100359549689*m[5]*np.sin(q[1] + q[2] + q[4]))/28823037615171174400000000 + (1272689*mp*np.sin(q[1] + q[2] + q[4]))/25000000
        M[2,1] = (6668042626502429201437*m[2])/84442493013196800000000 + (3498739040573833749457913*m[3])/22517998136852480000000000 + (7410721951814916328564713*m[4])/45035996273704960000000000 + (2841594564214826927529436238716242066484897*m[5])/16615349947311448411297588253504307200000000 + (19745701*mp)/100000000 - (18399582378411726024713*m[4]*np.cos(2*q[4]))/45035996273704960000000000 - (71648743731038005291574683765544160407201*m[5]*np.cos(2*q[4]))/16615349947311448411297588253504307200000000 - (421201*mp*np.cos(2*q[4]))/12500000 - (13889*m[4]*np.sin(q[2] + q[3] - q[4]))/4000000 - (4823526697987611480033*m[5]*np.sin(q[2] + q[3] - q[4]))/230584300921369395200000 - (11033*mp*np.sin(q[2] + q[3] - q[4]))/200000 - (13889*m[3]*np.sin(q[2] + q[3]))/2000000 - (16643*m[4]*np.sin(q[2] + q[3]))/400000 - (16949*m[5]*np.sin(q[2] + q[3]))/400000 + (1602137*m[4]*np.sin(q[3] + q[4]))/250000000 + (556407991456100359549689*m[5]*np.sin(q[3] + q[4]))/14411518807585587200000000 - (16949*mp*np.sin(q[2] + q[3]))/400000 + (1272689*mp*np.sin(q[3] + q[4]))/12500000 + (20587*m[2]*np.cos(q[2]))/200000 + (33337*m[3]*np.cos(q[2]))/200000 + (33337*m[4]*np.cos(q[2]))/200000 + (33337*m[5]*np.cos(q[2]))/200000 + (33337*mp*np.cos(q[2]))/200000 - (1602137*m[3]*np.sin(q[3]))/125000000 - (1919819*m[4]*np.sin(q[3]))/25000000 - (1955117*m[5]*np.sin(q[3]))/25000000 - (1955117*mp*np.sin(q[3]))/25000000 - (1602137*m[4]*np.sin(q[3] - q[4]))/250000000 - (556407991456100359549689*m[5]*np.sin(q[3] - q[4]))/14411518807585587200000000 - (1272689*mp*np.sin(q[3] - q[4]))/12500000 + (13889*m[4]*np.sin(q[2] + q[3] + q[4]))/4000000 + (4823526697987611480033*m[5]*np.sin(q[2] + q[3] + q[4]))/230584300921369395200000 + (11033*mp*np.sin(q[2] + q[3] + q[4]))/200000
        M[2,2] = (6668042626502429201437*m[2])/84442493013196800000000 + (3498739040573833749457913*m[3])/22517998136852480000000000 + (3714560767096664027294713*m[4])/22517998136852480000000000 + (1456621653972932466410505461240893113446049*m[5])/8307674973655724205648794126752153600000000 + (23115309*mp)/100000000 - (18399582378411726024713*m[4]*np.cos(q[4])**2)/22517998136852480000000000 - (71648743731038005291574683765544160407201*m[5]*np.cos(q[4])**2)/8307674973655724205648794126752153600000000 - (421201*mp*np.cos(q[4])**2)/6250000 - (1602137*m[3]*np.sin(q[3]))/125000000 - (1919819*m[4]*np.sin(q[3]))/25000000 - (1955117*m[5]*np.sin(q[3]))/25000000 - (1955117*mp*np.sin(q[3]))/25000000 + (1602137*m[4]*np.cos(q[3])*np.sin(q[4]))/125000000 + (556407991456100359549689*m[5]*np.cos(q[3])*np.sin(q[4]))/7205759403792793600000000 + (1272689*mp*np.cos(q[3])*np.sin(q[4]))/6250000
        M[2,3] = (35001652044750319774713*m[3])/22517998136852480000000000 + (250823378567580597611513*m[4])/22517998136852480000000000 + (7149124443129243931571008147072414995401*m[5])/332306998946228968225951765070086144000000 + (309329*mp)/4000000 - (18399582378411726024713*m[4]*np.cos(q[4])**2)/22517998136852480000000000 - (71648743731038005291574683765544160407201*m[5]*np.cos(q[4])**2)/8307674973655724205648794126752153600000000 - (421201*mp*np.cos(q[4])**2)/6250000 - (1602137*m[3]*np.sin(q[3]))/250000000 - (1919819*m[4]*np.sin(q[3]))/50000000 - (1955117*m[5]*np.sin(q[3]))/50000000 - (1955117*mp*np.sin(q[3]))/50000000 + (1602137*m[4]*np.cos(q[3])*np.sin(q[4]))/250000000 + (556407991456100359549689*m[5]*np.cos(q[3])*np.sin(q[4]))/14411518807585587200000000 + (1272689*mp*np.cos(q[3])*np.sin(q[4]))/12500000
        M[2,4] = -(np.cos(q[4])*(230539048752313576456192*m[4] + 1414428269968720189880265*m[5] + 3730006591601870781808640*mp - 923569100313149996793856*m[4]*np.sin(q[3]) - 5564079914561003595496890*m[5]*np.sin(q[3]) - 14673105167765834710384640*mp*np.sin(q[3])))/144115188075855872000000000
        M[2,5] = (106253245864567*m[5]*np.cos(q[4]))/36028797018963968
        M[3,0] = (236113*m[4]*np.cos(q[1] + q[2] + q[3] - q[4]))/125000000 - (5958474156337637710629*m[5]*np.cos(q[1] + q[2] + q[3] + q[4]))/3602879701896396800000000 - (13629*mp*np.cos(q[1] + q[2] + q[3] + q[4]))/3125000 - (144609*m[4]*np.cos(q[1] + q[2] + q[3] + q[4]))/500000000 + (18399582378411726024713*m[4]*np.cos(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 - (18399582378411726024713*m[4]*np.cos(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 + (66110689448889027932217*m[5]*np.cos(q[1] + q[2] + q[3] - q[4]))/5764607523034234880000000 + (71648743731038005291574683765544160407201*m[5]*np.cos(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 - (71648743731038005291574683765544160407201*m[5]*np.cos(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 + (151217*mp*np.cos(q[1] + q[2] + q[3] - q[4]))/5000000 + (421201*mp*np.cos(q[1] + q[2] + q[3] - 2*q[4]))/25000000 - (421201*mp*np.cos(q[1] + q[2] + q[3] + 2*q[4]))/25000000 + (214871*m[3]*np.cos(q[1] + q[2] + q[3]))/100000000 + (1305007*m[4]*np.cos(q[1] + q[2] + q[3]))/100000000 + (1329001*m[5]*np.cos(q[1] + q[2] + q[3]))/100000000 + (1329001*mp*np.cos(q[1] + q[2] + q[3]))/100000000
        M[3,1] = (35001652044750319774713*m[3])/22517998136852480000000000 + (483247174756749469198313*m[4])/45035996273704960000000000 + (285807478425424191286975723588076589362849*m[5])/16615349947311448411297588253504307200000000 + (4363617*mp)/100000000 - (18399582378411726024713*m[4]*np.cos(2*q[4]))/45035996273704960000000000 - (71648743731038005291574683765544160407201*m[5]*np.cos(2*q[4]))/16615349947311448411297588253504307200000000 - (421201*mp*np.cos(2*q[4]))/12500000 - (13889*m[4]*np.sin(q[2] + q[3] - q[4]))/4000000 - (4823526697987611480033*m[5]*np.sin(q[2] + q[3] - q[4]))/230584300921369395200000 - (11033*mp*np.sin(q[2] + q[3] - q[4]))/200000 - (13889*m[3]*np.sin(q[2] + q[3]))/2000000 - (16643*m[4]*np.sin(q[2] + q[3]))/400000 - (16949*m[5]*np.sin(q[2] + q[3]))/400000 + (1602137*m[4]*np.sin(q[3] + q[4]))/500000000 + (556407991456100359549689*m[5]*np.sin(q[3] + q[4]))/28823037615171174400000000 - (16949*mp*np.sin(q[2] + q[3]))/400000 + (1272689*mp*np.sin(q[3] + q[4]))/25000000 - (1602137*m[3]*np.sin(q[3]))/250000000 - (1919819*m[4]*np.sin(q[3]))/50000000 - (1955117*m[5]*np.sin(q[3]))/50000000 - (1955117*mp*np.sin(q[3]))/50000000 - (1602137*m[4]*np.sin(q[3] - q[4]))/500000000 - (556407991456100359549689*m[5]*np.sin(q[3] - q[4]))/28823037615171174400000000 - (1272689*mp*np.sin(q[3] - q[4]))/25000000 + (13889*m[4]*np.sin(q[2] + q[3] + q[4]))/4000000 + (4823526697987611480033*m[5]*np.sin(q[2] + q[3] + q[4]))/230584300921369395200000 + (11033*mp*np.sin(q[2] + q[3] + q[4]))/200000
        M[3,2] = (35001652044750319774713*m[3])/22517998136852480000000000 + (250823378567580597611513*m[4])/22517998136852480000000000 + (7149124443129243931571008147072414995401*m[5])/332306998946228968225951765070086144000000 + (309329*mp)/4000000 - (18399582378411726024713*m[4]*np.cos(q[4])**2)/22517998136852480000000000 - (71648743731038005291574683765544160407201*m[5]*np.cos(q[4])**2)/8307674973655724205648794126752153600000000 - (421201*mp*np.cos(q[4])**2)/6250000 - (1602137*m[3]*np.sin(q[3]))/250000000 - (1919819*m[4]*np.sin(q[3]))/50000000 - (1955117*m[5]*np.sin(q[3]))/50000000 - (1955117*mp*np.sin(q[3]))/50000000 + (1602137*m[4]*np.cos(q[3])*np.sin(q[4]))/250000000 + (556407991456100359549689*m[5]*np.cos(q[3])*np.sin(q[4]))/14411518807585587200000000 + (1272689*mp*np.cos(q[3])*np.sin(q[4]))/12500000
        M[3,3] = (35001652044750319774713*m[3])/22517998136852480000000000 + (483247174756749469198313*m[4])/45035996273704960000000000 + (285807478425424191286975723588076589362849*m[5])/16615349947311448411297588253504307200000000 + (4363617*mp)/100000000 - (18399582378411726024713*m[4]*np.cos(2*q[4]))/45035996273704960000000000 - (71648743731038005291574683765544160407201*m[5]*np.cos(2*q[4]))/16615349947311448411297588253504307200000000 - (421201*mp*np.cos(2*q[4]))/12500000
        M[3,4] = -np.cos(q[4])*((799843*m[4])/500000000 + (282885653993744037976053*m[5])/28823037615171174400000000 + (647053*mp)/25000000)
        M[3,5] = (106253245864567*m[5]*np.cos(q[4]))/36028797018963968
        M[4,0] = (1602137*m[4]*np.sin(q[1] + q[2] - q[4]))/500000000 + (556407991456100359549689*m[5]*np.sin(q[1] + q[2] - q[4]))/28823037615171174400000000 + (1272689*mp*np.sin(q[1] + q[2] - q[4]))/25000000 - (236113*m[4]*np.cos(q[1] + q[2] + q[3] + q[4]))/125000000 - (66110689448889027932217*m[5]*np.cos(q[1] + q[2] + q[3] + q[4]))/5764607523034234880000000 - (151217*mp*np.cos(q[1] + q[2] + q[3] + q[4]))/5000000 - (13889*m[4]*np.sin(q[1] + q[4]))/4000000 - (4823526697987611480033*m[5]*np.sin(q[1] + q[4]))/230584300921369395200000 - (11033*mp*np.sin(q[1] + q[4]))/200000 - (144609*m[4]*np.cos(q[1] + q[2] + q[3] - q[4]))/500000000 - (5958474156337637710629*m[5]*np.cos(q[1] + q[2] + q[3] - q[4]))/3602879701896396800000000 - (13629*mp*np.cos(q[1] + q[2] + q[3] - q[4]))/3125000 + (13889*m[4]*np.sin(q[1] - q[4]))/4000000 + (4823526697987611480033*m[5]*np.sin(q[1] - q[4]))/230584300921369395200000 + (11033*mp*np.sin(q[1] - q[4]))/200000 - (35001652044750319774713*m[4]*np.cos(q[1] + q[2] + q[3]))/22517998136852480000000000 - (96149074149345570669947681665422560407201*m[5]*np.cos(q[1] + q[2] + q[3]))/8307674973655724205648794126752153600000000 - (421201*mp*np.cos(q[1] + q[2] + q[3]))/6250000 - (1602137*m[4]*np.sin(q[1] + q[2] + q[4]))/500000000 - (556407991456100359549689*m[5]*np.sin(q[1] + q[2] + q[4]))/28823037615171174400000000 - (1272689*mp*np.sin(q[1] + q[2] + q[4]))/25000000
        M[4,1] = (np.cos(q[4])*(1000807923592781103104000*m[4]*np.sin(q[2] + q[3]) - 1414428269968720189880265*m[5] - 3730006591601870781808640*mp - 230539048752313576456192*m[4] + 6029408372484514350041250*m[5]*np.sin(q[2] + q[3]) + 15900228700409178357760000*mp*np.sin(q[2] + q[3]) + 923569100313149996793856*m[4]*np.sin(q[3]) + 5564079914561003595496890*m[5]*np.sin(q[3]) + 14673105167765834710384640*mp*np.sin(q[3])))/144115188075855872000000000
        M[4,2] = -(np.cos(q[4])*(230539048752313576456192*m[4] + 1414428269968720189880265*m[5] + 3730006591601870781808640*mp - 923569100313149996793856*m[4]*np.sin(q[3]) - 5564079914561003595496890*m[5]*np.sin(q[3]) - 14673105167765834710384640*mp*np.sin(q[3])))/144115188075855872000000000
        M[4,3] = -np.cos(q[4])*((799843*m[4])/500000000 + (282885653993744037976053*m[5])/28823037615171174400000000 + (647053*mp)/25000000)
        M[4,4] = (35001652044750319774713*m[4])/22517998136852480000000000 + (96149074149345570669947681665422560407201*m[5])/8307674973655724205648794126752153600000000 + (421201*mp)/6250000
        M[4,5] = 0
        M[5,0] = (106253245864567*m[5]*(np.cos(q[1] + q[2] + q[3] + q[4]) - np.cos(q[1] + q[2] + q[3] - q[4])))/72057594037927936
        M[5,1] = (106253245864567*m[5]*np.cos(q[4]))/36028797018963968
        M[5,2] = (106253245864567*m[5]*np.cos(q[4]))/36028797018963968
        M[5,3] = (106253245864567*m[5]*np.cos(q[4]))/36028797018963968
        M[5,4] = 0
        M[5,5] = (106253245864567*m[5])/36028797018963968
        return M

    def Cal_C(self, q, q_): #This Function Calculates The Matrix C in Equation (1)
        m = np.array([[3.761],[8.058],[2.846],[1.37],[1.3],[0.365]],dtype='float64')
        mp = 0.0
        C = np.zeros([6,6],dtype='float64')
        C[0,0] = (13889*q_[1]*m[4]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/4000000 - (1919819*q_[3]*m[4]*np.cos(q[3]))/100000000 - (1955117*q_[3]*m[5]*np.cos(q[3]))/100000000 - (1602137*q_[1]*m[3]*np.cos(2*q[1] + 2*q[2] + q[3]))/250000000 - (1919819*q_[1]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3]))/50000000 - (1602137*q_[2]*m[3]*np.cos(2*q[1] + 2*q[2] + q[3]))/250000000 - (1955117*q_[1]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3]))/50000000 - (1919819*q_[2]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3]))/50000000 - (1602137*q_[3]*m[3]*np.cos(2*q[1] + 2*q[2] + q[3]))/500000000 - (1955117*q_[2]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3]))/50000000 - (1919819*q_[3]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3]))/100000000 - (1955117*q_[3]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3]))/100000000 - (1955117*q_[3]*mp*np.cos(q[3]))/100000000 - (1955117*q_[1]*mp*np.cos(2*q[1] + 2*q[2] + q[3]))/50000000 - (1955117*q_[2]*mp*np.cos(2*q[1] + 2*q[2] + q[3]))/50000000 - (1955117*q_[3]*mp*np.cos(2*q[1] + 2*q[2] + q[3]))/100000000 - (20587*q_[2]*m[2]*np.sin(q[2]))/400000 - (33337*q_[2]*m[3]*np.sin(q[2]))/400000 - (33337*q_[2]*m[4]*np.sin(q[2]))/400000 - (33337*q_[2]*m[5]*np.sin(q[2]))/400000 - (1089061*q_[4]*m[4]*np.sin(q[4]))/500000000 - (378221240495146241346117*q_[4]*m[5]*np.sin(q[4]))/28823037615171174400000000 - (33337*q_[2]*mp*np.sin(q[2]))/400000 - (865117*q_[4]*mp*np.sin(q[4]))/25000000 - (1602137*q_[3]*m[3]*np.cos(q[3]))/500000000 + (4823526697987611480033*q_[1]*m[5]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/230584300921369395200000 + (13889*q_[2]*m[4]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/8000000 + (4823526697987611480033*q_[2]*m[5]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/461168601842738790400000 + (13889*q_[3]*m[4]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/8000000 + (4823526697987611480033*q_[3]*m[5]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/461168601842738790400000 + (13889*q_[4]*m[4]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/8000000 + (4823526697987611480033*q_[4]*m[5]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/461168601842738790400000 + (11033*q_[1]*mp*np.cos(2*q[1] + q[2] + q[3] + q[4]))/200000 + (11033*q_[2]*mp*np.cos(2*q[1] + q[2] + q[3] + q[4]))/400000 + (11033*q_[3]*mp*np.cos(2*q[1] + q[2] + q[3] + q[4]))/400000 + (11033*q_[4]*mp*np.cos(2*q[1] + q[2] + q[3] + q[4]))/400000 - (1602137*q_[3]*m[4]*np.cos(q[3] - q[4]))/1000000000 - (556407991456100359549689*q_[3]*m[5]*np.cos(q[3] - q[4]))/57646075230342348800000000 + (1602137*q_[4]*m[4]*np.cos(q[3] - q[4]))/1000000000 + (556407991456100359549689*q_[4]*m[5]*np.cos(q[3] - q[4]))/57646075230342348800000000 - (1272689*q_[3]*mp*np.cos(q[3] - q[4]))/50000000 + (1272689*q_[4]*mp*np.cos(q[3] - q[4]))/50000000 - (20587*q_[1]*m[2]*np.sin(2*q[1] + q[2]))/200000 - (33337*q_[1]*m[3]*np.sin(2*q[1] + q[2]))/200000 - (20587*q_[2]*m[2]*np.sin(2*q[1] + q[2]))/400000 - (33337*q_[1]*m[4]*np.sin(2*q[1] + q[2]))/200000 - (33337*q_[2]*m[3]*np.sin(2*q[1] + q[2]))/400000 - (33337*q_[1]*m[5]*np.sin(2*q[1] + q[2]))/200000 - (33337*q_[2]*m[4]*np.sin(2*q[1] + q[2]))/400000 - (33337*q_[2]*m[5]*np.sin(2*q[1] + q[2]))/400000 + (799843*q_[1]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/1000000000 + (18399582378411726024713*q_[1]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/180143985094819840000000000 + (18399582378411726024713*q_[1]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/180143985094819840000000000 + (282885653993744037976053*q_[1]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/57646075230342348800000000 + (799843*q_[2]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/1000000000 + (71648743731038005291574683765544160407201*q_[1]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/66461399789245793645190353014017228800000000 + (71648743731038005291574683765544160407201*q_[1]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/66461399789245793645190353014017228800000000 + (18399582378411726024713*q_[2]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/180143985094819840000000000 + (18399582378411726024713*q_[2]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/180143985094819840000000000 + (282885653993744037976053*q_[2]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/57646075230342348800000000 + (799843*q_[3]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/1000000000 + (71648743731038005291574683765544160407201*q_[2]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/66461399789245793645190353014017228800000000 + (71648743731038005291574683765544160407201*q_[2]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/66461399789245793645190353014017228800000000 + (18399582378411726024713*q_[3]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/180143985094819840000000000 + (18399582378411726024713*q_[3]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/180143985094819840000000000 + (282885653993744037976053*q_[3]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/57646075230342348800000000 - (799843*q_[4]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/2000000000 + (71648743731038005291574683765544160407201*q_[3]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/66461399789245793645190353014017228800000000 + (71648743731038005291574683765544160407201*q_[3]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/66461399789245793645190353014017228800000000 - (18399582378411726024713*q_[4]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/180143985094819840000000000 + (18399582378411726024713*q_[4]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/180143985094819840000000000 - (282885653993744037976053*q_[4]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/115292150460684697600000000 - (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/66461399789245793645190353014017228800000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/66461399789245793645190353014017228800000000 - (33337*q_[1]*mp*np.sin(2*q[1] + q[2]))/200000 - (33337*q_[2]*mp*np.sin(2*q[1] + q[2]))/400000 + (647053*q_[1]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/50000000 + (421201*q_[1]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/50000000 + (421201*q_[1]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/50000000 + (647053*q_[2]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/50000000 + (421201*q_[2]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/50000000 + (421201*q_[2]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/50000000 + (647053*q_[3]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/50000000 + (421201*q_[3]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/50000000 + (421201*q_[3]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/50000000 - (647053*q_[4]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/100000000 - (421201*q_[4]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/50000000 + (421201*q_[4]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/50000000 + (13889*q_[2]*m[4]*np.cos(q[2] + q[3] + q[4]))/8000000 + (4823526697987611480033*q_[2]*m[5]*np.cos(q[2] + q[3] + q[4]))/461168601842738790400000 + (13889*q_[3]*m[4]*np.cos(q[2] + q[3] + q[4]))/8000000 + (4823526697987611480033*q_[3]*m[5]*np.cos(q[2] + q[3] + q[4]))/461168601842738790400000 + (13889*q_[4]*m[4]*np.cos(q[2] + q[3] + q[4]))/8000000 + (4823526697987611480033*q_[4]*m[5]*np.cos(q[2] + q[3] + q[4]))/461168601842738790400000 + (11033*q_[2]*mp*np.cos(q[2] + q[3] + q[4]))/400000 + (11033*q_[3]*mp*np.cos(q[2] + q[3] + q[4]))/400000 + (11033*q_[4]*mp*np.cos(q[2] + q[3] + q[4]))/400000 - (47901573450033238331*q_[1]*m[1]*np.sin(2*q[1]))/1383505805528216371200 - (289*q_[1]*m[2]*np.sin(2*q[1]))/3200 - (289*q_[1]*m[3]*np.sin(2*q[1]))/3200 - (289*q_[1]*m[4]*np.sin(2*q[1]))/3200 - (289*q_[1]*m[5]*np.sin(2*q[1]))/3200 - (18399582378411726024713*q_[4]*m[4]*np.sin(2*q[4]))/90071992547409920000000000 - (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(2*q[4]))/33230699894622896822595176507008614400000000 + (18399582378411726024713*q_[1]*m[3]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/45035996273704960000000000 + (413243870667248829648887*q_[1]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/90071992547409920000000000 + (18399582378411726024713*q_[2]*m[3]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/45035996273704960000000000 + (93509330126733049947080360257231468548447*q_[1]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/33230699894622896822595176507008614400000000 + (413243870667248829648887*q_[2]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/90071992547409920000000000 + (18399582378411726024713*q_[3]*m[3]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/45035996273704960000000000 + (93509330126733049947080360257231468548447*q_[2]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/33230699894622896822595176507008614400000000 + (413243870667248829648887*q_[3]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/90071992547409920000000000 + (93509330126733049947080360257231468548447*q_[3]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/33230699894622896822595176507008614400000000 - (289*q_[1]*mp*np.sin(2*q[1]))/3200 - (421201*q_[4]*mp*np.sin(2*q[4]))/25000000 - (2375599*q_[1]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/200000000 - (2375599*q_[2]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/200000000 - (2375599*q_[3]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/200000000 - (13889*q_[1]*m[4]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/4000000 + (1602137*q_[1]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/500000000 - (4823526697987611480033*q_[1]*m[5]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/230584300921369395200000 - (13889*q_[2]*m[4]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/8000000 + (556407991456100359549689*q_[1]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/28823037615171174400000000 + (1602137*q_[2]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/500000000 - (4823526697987611480033*q_[2]*m[5]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/461168601842738790400000 - (13889*q_[3]*m[4]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/8000000 + (556407991456100359549689*q_[2]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/28823037615171174400000000 + (1602137*q_[3]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/1000000000 - (4823526697987611480033*q_[3]*m[5]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/461168601842738790400000 + (13889*q_[4]*m[4]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/8000000 + (556407991456100359549689*q_[3]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/57646075230342348800000000 + (1602137*q_[4]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/1000000000 + (4823526697987611480033*q_[4]*m[5]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/461168601842738790400000 + (556407991456100359549689*q_[4]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/57646075230342348800000000 - (11033*q_[1]*mp*np.cos(2*q[1] + q[2] + q[3] - q[4]))/200000 + (1272689*q_[1]*mp*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/25000000 - (11033*q_[2]*mp*np.cos(2*q[1] + q[2] + q[3] - q[4]))/400000 + (1272689*q_[2]*mp*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/25000000 - (11033*q_[3]*mp*np.cos(2*q[1] + q[2] + q[3] - q[4]))/400000 + (1272689*q_[3]*mp*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/50000000 + (11033*q_[4]*mp*np.cos(2*q[1] + q[2] + q[3] - q[4]))/400000 + (1272689*q_[4]*mp*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/50000000 - (13216703834082521293499*q_[1]*m[2]*np.sin(2*q[1] + 2*q[2]))/337769972052787200000000 - (3845521*q_[1]*m[3]*np.sin(2*q[1] + 2*q[2]))/50000000 - (13216703834082521293499*q_[2]*m[2]*np.sin(2*q[1] + 2*q[2]))/337769972052787200000000 - (3845521*q_[1]*m[4]*np.sin(2*q[1] + 2*q[2]))/50000000 - (3845521*q_[2]*m[3]*np.sin(2*q[1] + 2*q[2]))/50000000 - (3845521*q_[1]*m[5]*np.sin(2*q[1] + 2*q[2]))/50000000 - (3845521*q_[2]*m[4]*np.sin(2*q[1] + 2*q[2]))/50000000 - (3845521*q_[2]*m[5]*np.sin(2*q[1] + 2*q[2]))/50000000 - (3845521*q_[1]*mp*np.sin(2*q[1] + 2*q[2]))/50000000 - (3845521*q_[2]*mp*np.sin(2*q[1] + 2*q[2]))/50000000 - (13889*q_[1]*m[3]*np.cos(2*q[1] + q[2] + q[3]))/2000000 - (16643*q_[1]*m[4]*np.cos(2*q[1] + q[2] + q[3]))/400000 - (13889*q_[2]*m[3]*np.cos(2*q[1] + q[2] + q[3]))/4000000 - (16949*q_[1]*m[5]*np.cos(2*q[1] + q[2] + q[3]))/400000 - (16643*q_[2]*m[4]*np.cos(2*q[1] + q[2] + q[3]))/800000 - (13889*q_[3]*m[3]*np.cos(2*q[1] + q[2] + q[3]))/4000000 - (16949*q_[2]*m[5]*np.cos(2*q[1] + q[2] + q[3]))/800000 - (16643*q_[3]*m[4]*np.cos(2*q[1] + q[2] + q[3]))/800000 - (13889*q_[2]*m[4]*np.cos(q[2] + q[3] - q[4]))/8000000 - (16949*q_[3]*m[5]*np.cos(2*q[1] + q[2] + q[3]))/800000 - (4823526697987611480033*q_[2]*m[5]*np.cos(q[2] + q[3] - q[4]))/461168601842738790400000 - (13889*q_[3]*m[4]*np.cos(q[2] + q[3] - q[4]))/8000000 - (4823526697987611480033*q_[3]*m[5]*np.cos(q[2] + q[3] - q[4]))/461168601842738790400000 + (13889*q_[4]*m[4]*np.cos(q[2] + q[3] - q[4]))/8000000 + (4823526697987611480033*q_[4]*m[5]*np.cos(q[2] + q[3] - q[4]))/461168601842738790400000 - (16949*q_[1]*mp*np.cos(2*q[1] + q[2] + q[3]))/400000 - (16949*q_[2]*mp*np.cos(2*q[1] + q[2] + q[3]))/800000 - (16949*q_[3]*mp*np.cos(2*q[1] + q[2] + q[3]))/800000 - (11033*q_[2]*mp*np.cos(q[2] + q[3] - q[4]))/400000 - (11033*q_[3]*mp*np.cos(q[2] + q[3] - q[4]))/400000 + (11033*q_[4]*mp*np.cos(q[2] + q[3] - q[4]))/400000 - (13889*q_[2]*m[3]*np.cos(q[2] + q[3]))/4000000 - (16643*q_[2]*m[4]*np.cos(q[2] + q[3]))/800000 - (13889*q_[3]*m[3]*np.cos(q[2] + q[3]))/4000000 - (16949*q_[2]*m[5]*np.cos(q[2] + q[3]))/800000 - (16643*q_[3]*m[4]*np.cos(q[2] + q[3]))/800000 - (16949*q_[3]*m[5]*np.cos(q[2] + q[3]))/800000 + (1602137*q_[3]*m[4]*np.cos(q[3] + q[4]))/1000000000 + (556407991456100359549689*q_[3]*m[5]*np.cos(q[3] + q[4]))/57646075230342348800000000 + (1602137*q_[4]*m[4]*np.cos(q[3] + q[4]))/1000000000 + (556407991456100359549689*q_[4]*m[5]*np.cos(q[3] + q[4]))/57646075230342348800000000 - (1602137*q_[1]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/500000000 - (556407991456100359549689*q_[1]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/28823037615171174400000000 - (1602137*q_[2]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/500000000 - (556407991456100359549689*q_[2]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/28823037615171174400000000 - (1602137*q_[3]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/1000000000 - (556407991456100359549689*q_[3]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/57646075230342348800000000 + (1602137*q_[4]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/1000000000 + (556407991456100359549689*q_[4]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/57646075230342348800000000 - (16949*q_[2]*mp*np.cos(q[2] + q[3]))/800000 - (16949*q_[3]*mp*np.cos(q[2] + q[3]))/800000 + (1272689*q_[3]*mp*np.cos(q[3] + q[4]))/50000000 + (1272689*q_[4]*mp*np.cos(q[3] + q[4]))/50000000 - (1272689*q_[1]*mp*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/25000000 - (1272689*q_[2]*mp*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/25000000 - (1272689*q_[3]*mp*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/50000000 + (1272689*q_[4]*mp*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/50000000 - (799843*q_[1]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/1000000000 - (282885653993744037976053*q_[1]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/57646075230342348800000000 - (799843*q_[2]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/1000000000 - (282885653993744037976053*q_[2]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/57646075230342348800000000 - (799843*q_[3]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/1000000000 - (282885653993744037976053*q_[3]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/57646075230342348800000000 - (799843*q_[4]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/2000000000 - (282885653993744037976053*q_[4]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/115292150460684697600000000 - (647053*q_[1]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/50000000 - (647053*q_[2]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/50000000 - (647053*q_[3]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/50000000 - (647053*q_[4]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/100000000
        C[0,1] = (24089*q_[1]*m[1]*np.cos(q[1]))/1000000 + (901*q_[1]*m[2]*np.cos(q[1]))/80000 + (4471*q_[1]*m[3]*np.cos(q[1]))/80000 + (22661*q_[1]*m[4]*np.cos(q[1]))/400000 + (22661*q_[1]*m[5]*np.cos(q[1]))/400000 - (1602137*q_[0]*m[3]*np.cos(2*q[1] + 2*q[2] + q[3]))/250000000 - (1919819*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3]))/50000000 - (1955117*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3]))/50000000 + (22661*q_[1]*mp*np.cos(q[1]))/400000 - (1955117*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3]))/50000000 + (13889*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/4000000 + (4823526697987611480033*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/230584300921369395200000 + (11033*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3] + q[4]))/200000 - (236113*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/125000000 - (18399582378411726024713*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 - (66110689448889027932217*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/5764607523034234880000000 - (236113*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/125000000 - (71648743731038005291574683765544160407201*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 - (18399582378411726024713*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 - (66110689448889027932217*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/5764607523034234880000000 - (236113*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/125000000 - (71648743731038005291574683765544160407201*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 - (18399582378411726024713*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 - (66110689448889027932217*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/5764607523034234880000000 + (1089061*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/1000000000 - (71648743731038005291574683765544160407201*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 + (18399582378411726024713*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 + (378221240495146241346117*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/57646075230342348800000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 + (106253245864567*q_[5]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/144115188075855872 - (151217*q_[1]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/5000000 - (421201*q_[1]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[1]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 - (151217*q_[2]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/5000000 - (421201*q_[2]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[2]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 - (151217*q_[3]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/5000000 - (421201*q_[3]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[3]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 + (865117*q_[4]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/50000000 + (421201*q_[4]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[4]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 + (13889*q_[1]*m[4]*np.cos(q[1] - q[4]))/4000000 + (4823526697987611480033*q_[1]*m[5]*np.cos(q[1] - q[4]))/230584300921369395200000 + (11033*q_[1]*mp*np.cos(q[1] - q[4]))/200000 - (20587*q_[0]*m[2]*np.sin(2*q[1] + q[2]))/200000 - (33337*q_[0]*m[3]*np.sin(2*q[1] + q[2]))/200000 - (33337*q_[0]*m[4]*np.sin(2*q[1] + q[2]))/200000 - (33337*q_[0]*m[5]*np.sin(2*q[1] + q[2]))/200000 + (799843*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/1000000000 + (18399582378411726024713*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/180143985094819840000000000 + (18399582378411726024713*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/180143985094819840000000000 + (282885653993744037976053*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/57646075230342348800000000 + (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/66461399789245793645190353014017228800000000 + (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/66461399789245793645190353014017228800000000 - (33337*q_[0]*mp*np.sin(2*q[1] + q[2]))/200000 + (647053*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/50000000 + (421201*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/50000000 + (421201*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/50000000 + (1602137*q_[1]*m[4]*np.cos(q[1] + q[2] + q[4]))/500000000 + (556407991456100359549689*q_[1]*m[5]*np.cos(q[1] + q[2] + q[4]))/28823037615171174400000000 + (1602137*q_[2]*m[4]*np.cos(q[1] + q[2] + q[4]))/500000000 + (556407991456100359549689*q_[2]*m[5]*np.cos(q[1] + q[2] + q[4]))/28823037615171174400000000 + (1272689*q_[1]*mp*np.cos(q[1] + q[2] + q[4]))/25000000 + (1272689*q_[2]*mp*np.cos(q[1] + q[2] + q[4]))/25000000 - (214871*q_[1]*m[3]*np.sin(q[1] + q[2] + q[3]))/100000000 - (1305007*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3]))/100000000 - (214871*q_[2]*m[3]*np.sin(q[1] + q[2] + q[3]))/100000000 - (1329001*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3]))/100000000 - (1305007*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3]))/100000000 - (214871*q_[3]*m[3]*np.sin(q[1] + q[2] + q[3]))/100000000 - (1329001*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3]))/100000000 - (1305007*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3]))/100000000 - (1329001*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3]))/100000000 + (35001652044750319774713*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3]))/45035996273704960000000000 + (96149074149345570669947681665422560407201*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3]))/16615349947311448411297588253504307200000000 - (1329001*q_[1]*mp*np.sin(q[1] + q[2] + q[3]))/100000000 - (1329001*q_[2]*mp*np.sin(q[1] + q[2] + q[3]))/100000000 - (1329001*q_[3]*mp*np.sin(q[1] + q[2] + q[3]))/100000000 + (421201*q_[4]*mp*np.sin(q[1] + q[2] + q[3]))/12500000 - (47901573450033238331*q_[0]*m[1]*np.sin(2*q[1]))/1383505805528216371200 - (289*q_[0]*m[2]*np.sin(2*q[1]))/3200 - (289*q_[0]*m[3]*np.sin(2*q[1]))/3200 - (289*q_[0]*m[4]*np.sin(2*q[1]))/3200 - (289*q_[0]*m[5]*np.sin(2*q[1]))/3200 + (18399582378411726024713*q_[0]*m[3]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/45035996273704960000000000 + (413243870667248829648887*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/90071992547409920000000000 + (93509330126733049947080360257231468548447*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/33230699894622896822595176507008614400000000 - (289*q_[0]*mp*np.sin(2*q[1]))/3200 - (2375599*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/200000000 - (13889*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/4000000 + (1602137*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/500000000 - (4823526697987611480033*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/230584300921369395200000 + (556407991456100359549689*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/28823037615171174400000000 - (11033*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3] - q[4]))/200000 + (1272689*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/25000000 - (13216703834082521293499*q_[0]*m[2]*np.sin(2*q[1] + 2*q[2]))/337769972052787200000000 - (3845521*q_[0]*m[3]*np.sin(2*q[1] + 2*q[2]))/50000000 - (3845521*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2]))/50000000 - (3845521*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2]))/50000000 - (3845521*q_[0]*mp*np.sin(2*q[1] + 2*q[2]))/50000000 - (13889*q_[0]*m[3]*np.cos(2*q[1] + q[2] + q[3]))/2000000 - (16643*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3]))/400000 - (16949*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3]))/400000 + (1602137*q_[1]*m[4]*np.cos(q[1] + q[2] - q[4]))/500000000 + (556407991456100359549689*q_[1]*m[5]*np.cos(q[1] + q[2] - q[4]))/28823037615171174400000000 + (1602137*q_[2]*m[4]*np.cos(q[1] + q[2] - q[4]))/500000000 + (556407991456100359549689*q_[2]*m[5]*np.cos(q[1] + q[2] - q[4]))/28823037615171174400000000 - (16949*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3]))/400000 + (1272689*q_[1]*mp*np.cos(q[1] + q[2] - q[4]))/25000000 + (1272689*q_[2]*mp*np.cos(q[1] + q[2] - q[4]))/25000000 + (144609*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/500000000 + (5958474156337637710629*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/3602879701896396800000000 + (144609*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/500000000 + (5958474156337637710629*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/3602879701896396800000000 + (144609*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/500000000 + (5958474156337637710629*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/3602879701896396800000000 + (1089061*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/1000000000 + (378221240495146241346117*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/57646075230342348800000000 - (106253245864567*q_[5]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/144115188075855872 + (13629*q_[1]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/3125000 + (13629*q_[2]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/3125000 + (13629*q_[3]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/3125000 + (865117*q_[4]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/50000000 + (64183*q_[1]*m[2]*np.cos(q[1] + q[2]))/10000000 + (515743*q_[1]*m[3]*np.cos(q[1] + q[2]))/10000000 + (64183*q_[2]*m[2]*np.cos(q[1] + q[2]))/10000000 + (2614013*q_[1]*m[4]*np.cos(q[1] + q[2]))/50000000 + (515743*q_[2]*m[3]*np.cos(q[1] + q[2]))/10000000 + (2614013*q_[1]*m[5]*np.cos(q[1] + q[2]))/50000000 + (2614013*q_[2]*m[4]*np.cos(q[1] + q[2]))/50000000 + (13889*q_[1]*m[4]*np.cos(q[1] + q[4]))/4000000 + (2614013*q_[2]*m[5]*np.cos(q[1] + q[2]))/50000000 + (4823526697987611480033*q_[1]*m[5]*np.cos(q[1] + q[4]))/230584300921369395200000 - (1602137*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/500000000 - (556407991456100359549689*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/28823037615171174400000000 + (2614013*q_[1]*mp*np.cos(q[1] + q[2]))/50000000 + (2614013*q_[2]*mp*np.cos(q[1] + q[2]))/50000000 + (11033*q_[1]*mp*np.cos(q[1] + q[4]))/200000 - (1272689*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/25000000 - (799843*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/1000000000 - (282885653993744037976053*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/57646075230342348800000000 - (647053*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/50000000
        C[0,2] = (13889*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/8000000 - (1919819*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3]))/50000000 - (1955117*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3]))/50000000 - (1955117*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3]))/50000000 - (20587*q_[0]*m[2]*np.sin(q[2]))/400000 - (33337*q_[0]*m[3]*np.sin(q[2]))/400000 - (33337*q_[0]*m[4]*np.sin(q[2]))/400000 - (33337*q_[0]*m[5]*np.sin(q[2]))/400000 - (33337*q_[0]*mp*np.sin(q[2]))/400000 - (1602137*q_[0]*m[3]*np.cos(2*q[1] + 2*q[2] + q[3]))/250000000 + (4823526697987611480033*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/461168601842738790400000 + (11033*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3] + q[4]))/400000 - (236113*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/125000000 - (18399582378411726024713*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 - (66110689448889027932217*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/5764607523034234880000000 - (236113*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/125000000 - (71648743731038005291574683765544160407201*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 - (18399582378411726024713*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 - (66110689448889027932217*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/5764607523034234880000000 - (236113*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/125000000 - (71648743731038005291574683765544160407201*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 - (18399582378411726024713*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 - (66110689448889027932217*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/5764607523034234880000000 + (1089061*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/1000000000 - (71648743731038005291574683765544160407201*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 + (18399582378411726024713*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 + (378221240495146241346117*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/57646075230342348800000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 + (106253245864567*q_[5]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/144115188075855872 - (151217*q_[1]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/5000000 - (421201*q_[1]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[1]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 - (151217*q_[2]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/5000000 - (421201*q_[2]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[2]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 - (151217*q_[3]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/5000000 - (421201*q_[3]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[3]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 + (865117*q_[4]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/50000000 + (421201*q_[4]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[4]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 - (20587*q_[0]*m[2]*np.sin(2*q[1] + q[2]))/400000 - (33337*q_[0]*m[3]*np.sin(2*q[1] + q[2]))/400000 - (33337*q_[0]*m[4]*np.sin(2*q[1] + q[2]))/400000 - (33337*q_[0]*m[5]*np.sin(2*q[1] + q[2]))/400000 + (799843*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/1000000000 + (18399582378411726024713*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/180143985094819840000000000 + (18399582378411726024713*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/180143985094819840000000000 + (282885653993744037976053*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/57646075230342348800000000 + (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/66461399789245793645190353014017228800000000 + (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/66461399789245793645190353014017228800000000 - (33337*q_[0]*mp*np.sin(2*q[1] + q[2]))/400000 + (647053*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/50000000 + (421201*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/50000000 + (421201*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/50000000 + (1602137*q_[1]*m[4]*np.cos(q[1] + q[2] + q[4]))/500000000 + (13889*q_[0]*m[4]*np.cos(q[2] + q[3] + q[4]))/8000000 + (556407991456100359549689*q_[1]*m[5]*np.cos(q[1] + q[2] + q[4]))/28823037615171174400000000 + (1602137*q_[2]*m[4]*np.cos(q[1] + q[2] + q[4]))/500000000 + (4823526697987611480033*q_[0]*m[5]*np.cos(q[2] + q[3] + q[4]))/461168601842738790400000 + (556407991456100359549689*q_[2]*m[5]*np.cos(q[1] + q[2] + q[4]))/28823037615171174400000000 + (1272689*q_[1]*mp*np.cos(q[1] + q[2] + q[4]))/25000000 + (11033*q_[0]*mp*np.cos(q[2] + q[3] + q[4]))/400000 + (1272689*q_[2]*mp*np.cos(q[1] + q[2] + q[4]))/25000000 - (214871*q_[1]*m[3]*np.sin(q[1] + q[2] + q[3]))/100000000 - (1305007*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3]))/100000000 - (214871*q_[2]*m[3]*np.sin(q[1] + q[2] + q[3]))/100000000 - (1329001*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3]))/100000000 - (1305007*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3]))/100000000 - (214871*q_[3]*m[3]*np.sin(q[1] + q[2] + q[3]))/100000000 - (1329001*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3]))/100000000 - (1305007*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3]))/100000000 - (1329001*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3]))/100000000 + (35001652044750319774713*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3]))/45035996273704960000000000 + (96149074149345570669947681665422560407201*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3]))/16615349947311448411297588253504307200000000 - (1329001*q_[1]*mp*np.sin(q[1] + q[2] + q[3]))/100000000 - (1329001*q_[2]*mp*np.sin(q[1] + q[2] + q[3]))/100000000 - (1329001*q_[3]*mp*np.sin(q[1] + q[2] + q[3]))/100000000 + (421201*q_[4]*mp*np.sin(q[1] + q[2] + q[3]))/12500000 + (18399582378411726024713*q_[0]*m[3]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/45035996273704960000000000 + (413243870667248829648887*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/90071992547409920000000000 + (93509330126733049947080360257231468548447*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/33230699894622896822595176507008614400000000 - (2375599*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/200000000 - (13889*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/8000000 + (1602137*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/500000000 - (4823526697987611480033*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/461168601842738790400000 + (556407991456100359549689*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/28823037615171174400000000 - (11033*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3] - q[4]))/400000 + (1272689*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/25000000 - (13216703834082521293499*q_[0]*m[2]*np.sin(2*q[1] + 2*q[2]))/337769972052787200000000 - (3845521*q_[0]*m[3]*np.sin(2*q[1] + 2*q[2]))/50000000 - (3845521*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2]))/50000000 - (3845521*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2]))/50000000 - (3845521*q_[0]*mp*np.sin(2*q[1] + 2*q[2]))/50000000 - (13889*q_[0]*m[3]*np.cos(2*q[1] + q[2] + q[3]))/4000000 - (16643*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3]))/800000 - (16949*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3]))/800000 + (1602137*q_[1]*m[4]*np.cos(q[1] + q[2] - q[4]))/500000000 - (13889*q_[0]*m[4]*np.cos(q[2] + q[3] - q[4]))/8000000 + (556407991456100359549689*q_[1]*m[5]*np.cos(q[1] + q[2] - q[4]))/28823037615171174400000000 + (1602137*q_[2]*m[4]*np.cos(q[1] + q[2] - q[4]))/500000000 - (4823526697987611480033*q_[0]*m[5]*np.cos(q[2] + q[3] - q[4]))/461168601842738790400000 + (556407991456100359549689*q_[2]*m[5]*np.cos(q[1] + q[2] - q[4]))/28823037615171174400000000 - (16949*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3]))/800000 + (1272689*q_[1]*mp*np.cos(q[1] + q[2] - q[4]))/25000000 - (11033*q_[0]*mp*np.cos(q[2] + q[3] - q[4]))/400000 + (1272689*q_[2]*mp*np.cos(q[1] + q[2] - q[4]))/25000000 + (144609*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/500000000 + (5958474156337637710629*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/3602879701896396800000000 + (144609*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/500000000 + (5958474156337637710629*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/3602879701896396800000000 + (144609*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/500000000 + (5958474156337637710629*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/3602879701896396800000000 + (1089061*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/1000000000 + (378221240495146241346117*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/57646075230342348800000000 - (106253245864567*q_[5]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/144115188075855872 + (13629*q_[1]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/3125000 + (13629*q_[2]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/3125000 + (13629*q_[3]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/3125000 + (865117*q_[4]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/50000000 + (64183*q_[1]*m[2]*np.cos(q[1] + q[2]))/10000000 + (515743*q_[1]*m[3]*np.cos(q[1] + q[2]))/10000000 + (64183*q_[2]*m[2]*np.cos(q[1] + q[2]))/10000000 - (13889*q_[0]*m[3]*np.cos(q[2] + q[3]))/4000000 + (2614013*q_[1]*m[4]*np.cos(q[1] + q[2]))/50000000 + (515743*q_[2]*m[3]*np.cos(q[1] + q[2]))/10000000 - (16643*q_[0]*m[4]*np.cos(q[2] + q[3]))/800000 + (2614013*q_[1]*m[5]*np.cos(q[1] + q[2]))/50000000 + (2614013*q_[2]*m[4]*np.cos(q[1] + q[2]))/50000000 - (16949*q_[0]*m[5]*np.cos(q[2] + q[3]))/800000 + (2614013*q_[2]*m[5]*np.cos(q[1] + q[2]))/50000000 - (1602137*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/500000000 - (556407991456100359549689*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/28823037615171174400000000 + (2614013*q_[1]*mp*np.cos(q[1] + q[2]))/50000000 - (16949*q_[0]*mp*np.cos(q[2] + q[3]))/800000 + (2614013*q_[2]*mp*np.cos(q[1] + q[2]))/50000000 - (1272689*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/25000000 - (799843*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/1000000000 - (282885653993744037976053*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/57646075230342348800000000 - (647053*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/50000000
        C[0,3] = (13889*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/8000000 - (1919819*q_[0]*m[4]*np.cos(q[3]))/100000000 - (1955117*q_[0]*m[5]*np.cos(q[3]))/100000000 - (1602137*q_[0]*m[3]*np.cos(2*q[1] + 2*q[2] + q[3]))/500000000 - (1919819*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3]))/100000000 - (1955117*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3]))/100000000 - (1955117*q_[0]*mp*np.cos(q[3]))/100000000 - (1955117*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3]))/100000000 - (1602137*q_[0]*m[3]*np.cos(q[3]))/500000000 + (4823526697987611480033*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/461168601842738790400000 + (11033*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3] + q[4]))/400000 - (236113*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/125000000 - (18399582378411726024713*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 - (66110689448889027932217*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/5764607523034234880000000 - (236113*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/125000000 - (71648743731038005291574683765544160407201*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 - (18399582378411726024713*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 - (66110689448889027932217*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/5764607523034234880000000 - (236113*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/125000000 - (71648743731038005291574683765544160407201*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 - (18399582378411726024713*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 - (66110689448889027932217*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/5764607523034234880000000 + (1089061*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/1000000000 - (71648743731038005291574683765544160407201*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 + (18399582378411726024713*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 + (378221240495146241346117*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/57646075230342348800000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 + (106253245864567*q_[5]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/144115188075855872 - (151217*q_[1]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/5000000 - (421201*q_[1]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[1]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 - (151217*q_[2]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/5000000 - (421201*q_[2]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[2]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 - (151217*q_[3]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/5000000 - (421201*q_[3]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[3]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 + (865117*q_[4]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/50000000 + (421201*q_[4]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[4]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 - (1602137*q_[0]*m[4]*np.cos(q[3] - q[4]))/1000000000 - (556407991456100359549689*q_[0]*m[5]*np.cos(q[3] - q[4]))/57646075230342348800000000 - (1272689*q_[0]*mp*np.cos(q[3] - q[4]))/50000000 + (799843*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/1000000000 + (18399582378411726024713*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/180143985094819840000000000 + (18399582378411726024713*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/180143985094819840000000000 + (282885653993744037976053*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/57646075230342348800000000 + (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/66461399789245793645190353014017228800000000 + (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/66461399789245793645190353014017228800000000 + (647053*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/50000000 + (421201*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/50000000 + (421201*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/50000000 + (13889*q_[0]*m[4]*np.cos(q[2] + q[3] + q[4]))/8000000 + (4823526697987611480033*q_[0]*m[5]*np.cos(q[2] + q[3] + q[4]))/461168601842738790400000 + (11033*q_[0]*mp*np.cos(q[2] + q[3] + q[4]))/400000 - (214871*q_[1]*m[3]*np.sin(q[1] + q[2] + q[3]))/100000000 - (1305007*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3]))/100000000 - (214871*q_[2]*m[3]*np.sin(q[1] + q[2] + q[3]))/100000000 - (1329001*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3]))/100000000 - (1305007*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3]))/100000000 - (214871*q_[3]*m[3]*np.sin(q[1] + q[2] + q[3]))/100000000 - (1329001*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3]))/100000000 - (1305007*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3]))/100000000 - (1329001*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3]))/100000000 + (35001652044750319774713*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3]))/45035996273704960000000000 + (96149074149345570669947681665422560407201*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3]))/16615349947311448411297588253504307200000000 - (1329001*q_[1]*mp*np.sin(q[1] + q[2] + q[3]))/100000000 - (1329001*q_[2]*mp*np.sin(q[1] + q[2] + q[3]))/100000000 - (1329001*q_[3]*mp*np.sin(q[1] + q[2] + q[3]))/100000000 + (421201*q_[4]*mp*np.sin(q[1] + q[2] + q[3]))/12500000 + (18399582378411726024713*q_[0]*m[3]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/45035996273704960000000000 + (413243870667248829648887*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/90071992547409920000000000 + (93509330126733049947080360257231468548447*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/33230699894622896822595176507008614400000000 - (2375599*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/200000000 - (13889*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/8000000 + (1602137*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/1000000000 - (4823526697987611480033*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/461168601842738790400000 + (556407991456100359549689*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/57646075230342348800000000 - (11033*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3] - q[4]))/400000 + (1272689*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/50000000 - (13889*q_[0]*m[3]*np.cos(2*q[1] + q[2] + q[3]))/4000000 - (16643*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3]))/800000 - (16949*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3]))/800000 - (13889*q_[0]*m[4]*np.cos(q[2] + q[3] - q[4]))/8000000 - (4823526697987611480033*q_[0]*m[5]*np.cos(q[2] + q[3] - q[4]))/461168601842738790400000 - (16949*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3]))/800000 - (11033*q_[0]*mp*np.cos(q[2] + q[3] - q[4]))/400000 + (144609*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/500000000 + (5958474156337637710629*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/3602879701896396800000000 + (144609*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/500000000 + (5958474156337637710629*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/3602879701896396800000000 + (144609*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/500000000 + (5958474156337637710629*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/3602879701896396800000000 + (1089061*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/1000000000 + (378221240495146241346117*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/57646075230342348800000000 - (106253245864567*q_[5]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/144115188075855872 + (13629*q_[1]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/3125000 + (13629*q_[2]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/3125000 + (13629*q_[3]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/3125000 + (865117*q_[4]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/50000000 - (13889*q_[0]*m[3]*np.cos(q[2] + q[3]))/4000000 - (16643*q_[0]*m[4]*np.cos(q[2] + q[3]))/800000 - (16949*q_[0]*m[5]*np.cos(q[2] + q[3]))/800000 + (1602137*q_[0]*m[4]*np.cos(q[3] + q[4]))/1000000000 + (556407991456100359549689*q_[0]*m[5]*np.cos(q[3] + q[4]))/57646075230342348800000000 - (1602137*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/1000000000 - (556407991456100359549689*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/57646075230342348800000000 - (16949*q_[0]*mp*np.cos(q[2] + q[3]))/800000 + (1272689*q_[0]*mp*np.cos(q[3] + q[4]))/50000000 - (1272689*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/50000000 - (799843*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/1000000000 - (282885653993744037976053*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/57646075230342348800000000 - (647053*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/50000000
        C[0,4] = (13889*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/8000000 - (378221240495146241346117*q_[0]*m[5]*np.sin(q[4]))/28823037615171174400000000 - (865117*q_[0]*mp*np.sin(q[4]))/25000000 - (1089061*q_[0]*m[4]*np.sin(q[4]))/500000000 + (4823526697987611480033*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/461168601842738790400000 + (11033*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3] + q[4]))/400000 + (1089061*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/1000000000 + (18399582378411726024713*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 + (378221240495146241346117*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/57646075230342348800000000 + (1089061*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/1000000000 + (71648743731038005291574683765544160407201*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 + (18399582378411726024713*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 + (378221240495146241346117*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/57646075230342348800000000 + (1089061*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/1000000000 + (71648743731038005291574683765544160407201*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 + (18399582378411726024713*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 + (378221240495146241346117*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/57646075230342348800000000 - (144609*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/500000000 + (71648743731038005291574683765544160407201*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 - (5958474156337637710629*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/3602879701896396800000000 - (106253245864567*q_[5]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/144115188075855872 + (865117*q_[1]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/50000000 + (421201*q_[1]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[1]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 + (865117*q_[2]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/50000000 + (421201*q_[2]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[2]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 + (865117*q_[3]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/50000000 + (421201*q_[3]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[3]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 - (13629*q_[4]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/3125000 + (1602137*q_[0]*m[4]*np.cos(q[3] - q[4]))/1000000000 + (556407991456100359549689*q_[0]*m[5]*np.cos(q[3] - q[4]))/57646075230342348800000000 - (13889*q_[4]*m[4]*np.cos(q[1] - q[4]))/4000000 - (4823526697987611480033*q_[4]*m[5]*np.cos(q[1] - q[4]))/230584300921369395200000 + (1272689*q_[0]*mp*np.cos(q[3] - q[4]))/50000000 - (11033*q_[4]*mp*np.cos(q[1] - q[4]))/200000 - (799843*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/2000000000 - (18399582378411726024713*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/180143985094819840000000000 + (18399582378411726024713*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/180143985094819840000000000 - (282885653993744037976053*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/115292150460684697600000000 - (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/66461399789245793645190353014017228800000000 + (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/66461399789245793645190353014017228800000000 - (647053*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/100000000 - (421201*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/50000000 + (421201*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/50000000 + (13889*q_[0]*m[4]*np.cos(q[2] + q[3] + q[4]))/8000000 + (4823526697987611480033*q_[0]*m[5]*np.cos(q[2] + q[3] + q[4]))/461168601842738790400000 - (1602137*q_[4]*m[4]*np.cos(q[1] + q[2] + q[4]))/500000000 - (556407991456100359549689*q_[4]*m[5]*np.cos(q[1] + q[2] + q[4]))/28823037615171174400000000 + (11033*q_[0]*mp*np.cos(q[2] + q[3] + q[4]))/400000 - (1272689*q_[4]*mp*np.cos(q[1] + q[2] + q[4]))/25000000 + (35001652044750319774713*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3]))/45035996273704960000000000 + (96149074149345570669947681665422560407201*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3]))/16615349947311448411297588253504307200000000 + (35001652044750319774713*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3]))/45035996273704960000000000 + (96149074149345570669947681665422560407201*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3]))/16615349947311448411297588253504307200000000 + (35001652044750319774713*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3]))/45035996273704960000000000 + (96149074149345570669947681665422560407201*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3]))/16615349947311448411297588253504307200000000 + (421201*q_[1]*mp*np.sin(q[1] + q[2] + q[3]))/12500000 + (421201*q_[2]*mp*np.sin(q[1] + q[2] + q[3]))/12500000 + (421201*q_[3]*mp*np.sin(q[1] + q[2] + q[3]))/12500000 - (18399582378411726024713*q_[0]*m[4]*np.sin(2*q[4]))/90071992547409920000000000 - (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(2*q[4]))/33230699894622896822595176507008614400000000 - (421201*q_[0]*mp*np.sin(2*q[4]))/25000000 + (13889*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/8000000 + (1602137*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/1000000000 + (4823526697987611480033*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/461168601842738790400000 + (556407991456100359549689*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/57646075230342348800000000 + (11033*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3] - q[4]))/400000 + (1272689*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/50000000 + (13889*q_[0]*m[4]*np.cos(q[2] + q[3] - q[4]))/8000000 + (4823526697987611480033*q_[0]*m[5]*np.cos(q[2] + q[3] - q[4]))/461168601842738790400000 - (1602137*q_[4]*m[4]*np.cos(q[1] + q[2] - q[4]))/500000000 - (556407991456100359549689*q_[4]*m[5]*np.cos(q[1] + q[2] - q[4]))/28823037615171174400000000 + (11033*q_[0]*mp*np.cos(q[2] + q[3] - q[4]))/400000 - (1272689*q_[4]*mp*np.cos(q[1] + q[2] - q[4]))/25000000 + (1089061*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/1000000000 + (378221240495146241346117*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/57646075230342348800000000 + (1089061*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/1000000000 + (378221240495146241346117*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/57646075230342348800000000 + (1089061*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/1000000000 + (378221240495146241346117*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/57646075230342348800000000 + (236113*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/125000000 + (66110689448889027932217*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/5764607523034234880000000 - (106253245864567*q_[5]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/144115188075855872 + (865117*q_[1]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/50000000 + (865117*q_[2]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/50000000 + (865117*q_[3]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/50000000 + (151217*q_[4]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/5000000 + (1602137*q_[0]*m[4]*np.cos(q[3] + q[4]))/1000000000 + (556407991456100359549689*q_[0]*m[5]*np.cos(q[3] + q[4]))/57646075230342348800000000 - (13889*q_[4]*m[4]*np.cos(q[1] + q[4]))/4000000 - (4823526697987611480033*q_[4]*m[5]*np.cos(q[1] + q[4]))/230584300921369395200000 + (1602137*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/1000000000 + (556407991456100359549689*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/57646075230342348800000000 + (1272689*q_[0]*mp*np.cos(q[3] + q[4]))/50000000 - (11033*q_[4]*mp*np.cos(q[1] + q[4]))/200000 + (1272689*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/50000000 - (799843*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/2000000000 - (282885653993744037976053*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/115292150460684697600000000 - (647053*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/100000000
        C[0,5] = - (106253245864567*q_[4]*m[5]*(np.sin(q[1] + q[2] + q[3] + q[4]) + np.sin(q[1] + q[2] + q[3] - q[4])))/144115188075855872 - (106253245864567*q_[1]*m[5]*(np.sin(q[1] + q[2] + q[3] + q[4]) - np.sin(q[1] + q[2] + q[3] - q[4])))/144115188075855872 - (106253245864567*q_[2]*m[5]*(np.sin(q[1] + q[2] + q[3] + q[4]) - np.sin(q[1] + q[2] + q[3] - q[4])))/144115188075855872 - (106253245864567*q_[3]*m[5]*(np.sin(q[1] + q[2] + q[3] + q[4]) - np.sin(q[1] + q[2] + q[3] - q[4])))/144115188075855872
        C[1,0] = (1602137*q_[0]*m[3]*np.cos(2*q[1] + 2*q[2] + q[3]))/250000000 + (1919819*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3]))/50000000 + (1955117*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3]))/50000000 + (1955117*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3]))/50000000 - (13889*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/4000000 - (4823526697987611480033*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/230584300921369395200000 - (11033*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3] + q[4]))/200000 + (799843*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/1000000000 + (18399582378411726024713*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 + (282885653993744037976053*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/57646075230342348800000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 - (106253245864567*q_[5]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/144115188075855872 + (647053*q_[4]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/50000000 + (421201*q_[4]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[4]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 - (13889*q_[4]*m[4]*np.cos(q[1] - q[4]))/4000000 - (4823526697987611480033*q_[4]*m[5]*np.cos(q[1] - q[4]))/230584300921369395200000 - (11033*q_[4]*mp*np.cos(q[1] - q[4]))/200000 + (20587*q_[0]*m[2]*np.sin(2*q[1] + q[2]))/200000 + (33337*q_[0]*m[3]*np.sin(2*q[1] + q[2]))/200000 + (33337*q_[0]*m[4]*np.sin(2*q[1] + q[2]))/200000 + (33337*q_[0]*m[5]*np.sin(2*q[1] + q[2]))/200000 - (799843*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/1000000000 - (18399582378411726024713*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/180143985094819840000000000 - (18399582378411726024713*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/180143985094819840000000000 - (282885653993744037976053*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/57646075230342348800000000 - (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/66461399789245793645190353014017228800000000 - (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/66461399789245793645190353014017228800000000 + (33337*q_[0]*mp*np.sin(2*q[1] + q[2]))/200000 - (647053*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/50000000 - (421201*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/50000000 - (421201*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/50000000 + (1602137*q_[4]*m[4]*np.cos(q[1] + q[2] + q[4]))/500000000 + (556407991456100359549689*q_[4]*m[5]*np.cos(q[1] + q[2] + q[4]))/28823037615171174400000000 + (1272689*q_[4]*mp*np.cos(q[1] + q[2] + q[4]))/25000000 - (35001652044750319774713*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3]))/45035996273704960000000000 - (96149074149345570669947681665422560407201*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3]))/16615349947311448411297588253504307200000000 - (421201*q_[4]*mp*np.sin(q[1] + q[2] + q[3]))/12500000 + (47901573450033238331*q_[0]*m[1]*np.sin(2*q[1]))/1383505805528216371200 + (289*q_[0]*m[2]*np.sin(2*q[1]))/3200 + (289*q_[0]*m[3]*np.sin(2*q[1]))/3200 + (289*q_[0]*m[4]*np.sin(2*q[1]))/3200 + (289*q_[0]*m[5]*np.sin(2*q[1]))/3200 - (18399582378411726024713*q_[0]*m[3]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/45035996273704960000000000 - (413243870667248829648887*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/90071992547409920000000000 - (93509330126733049947080360257231468548447*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/33230699894622896822595176507008614400000000 + (289*q_[0]*mp*np.sin(2*q[1]))/3200 + (2375599*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/200000000 + (13889*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/4000000 - (1602137*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/500000000 + (4823526697987611480033*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/230584300921369395200000 - (556407991456100359549689*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/28823037615171174400000000 + (11033*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3] - q[4]))/200000 - (1272689*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/25000000 + (13216703834082521293499*q_[0]*m[2]*np.sin(2*q[1] + 2*q[2]))/337769972052787200000000 + (3845521*q_[0]*m[3]*np.sin(2*q[1] + 2*q[2]))/50000000 + (3845521*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2]))/50000000 + (3845521*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2]))/50000000 + (3845521*q_[0]*mp*np.sin(2*q[1] + 2*q[2]))/50000000 + (13889*q_[0]*m[3]*np.cos(2*q[1] + q[2] + q[3]))/2000000 + (16643*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3]))/400000 + (16949*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3]))/400000 - (1602137*q_[4]*m[4]*np.cos(q[1] + q[2] - q[4]))/500000000 - (556407991456100359549689*q_[4]*m[5]*np.cos(q[1] + q[2] - q[4]))/28823037615171174400000000 + (16949*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3]))/400000 - (1272689*q_[4]*mp*np.cos(q[1] + q[2] - q[4]))/25000000 - (799843*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/1000000000 - (282885653993744037976053*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/57646075230342348800000000 + (106253245864567*q_[5]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/144115188075855872 - (647053*q_[4]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/50000000 + (13889*q_[4]*m[4]*np.cos(q[1] + q[4]))/4000000 + (4823526697987611480033*q_[4]*m[5]*np.cos(q[1] + q[4]))/230584300921369395200000 + (1602137*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/500000000 + (556407991456100359549689*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/28823037615171174400000000 + (11033*q_[4]*mp*np.cos(q[1] + q[4]))/200000 + (1272689*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/25000000 + (799843*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/1000000000 + (282885653993744037976053*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/57646075230342348800000000 + (647053*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/50000000
        C[1,1] = (q_[4]*((18399582378411726024713*m[4]*np.sin(2*q[4]))/22517998136852480000000000 + (71648743731038005291574683765544160407201*m[5]*np.sin(2*q[4]))/8307674973655724205648794126752153600000000 + (421201*mp*np.sin(2*q[4]))/6250000 + (1602137*m[4]*np.cos(q[3])*np.cos(q[4]))/125000000 + (556407991456100359549689*m[5]*np.cos(q[3])*np.cos(q[4]))/7205759403792793600000000 + (1272689*mp*np.cos(q[3])*np.cos(q[4]))/6250000 + (13889*m[4]*np.cos(q[2])*np.cos(q[3])*np.cos(q[4]))/1000000 + (4823526697987611480033*m[5]*np.cos(q[2])*np.cos(q[3])*np.cos(q[4]))/57646075230342348800000 + (11033*mp*np.cos(q[2])*np.cos(q[3])*np.cos(q[4]))/50000 - (13889*m[4]*np.cos(q[4])*np.sin(q[2])*np.sin(q[3]))/1000000 - (4823526697987611480033*m[5]*np.cos(q[4])*np.sin(q[2])*np.sin(q[3]))/57646075230342348800000 - (11033*mp*np.cos(q[4])*np.sin(q[2])*np.sin(q[3]))/50000))/2 - (q_[3]*((13889*m[4]*np.cos(q[2] + q[3] - q[4]))/2000000 + (4823526697987611480033*m[5]*np.cos(q[2] + q[3] - q[4]))/115292150460684697600000 + (11033*mp*np.cos(q[2] + q[3] - q[4]))/100000 + (13889*m[3]*np.cos(q[2] + q[3]))/1000000 + (16643*m[4]*np.cos(q[2] + q[3]))/200000 + (16949*m[5]*np.cos(q[2] + q[3]))/200000 - (1602137*m[4]*np.cos(q[3] + q[4]))/250000000 - (556407991456100359549689*m[5]*np.cos(q[3] + q[4]))/14411518807585587200000000 + (16949*mp*np.cos(q[2] + q[3]))/200000 - (1272689*mp*np.cos(q[3] + q[4]))/12500000 + (1602137*m[3]*np.cos(q[3]))/125000000 + (1919819*m[4]*np.cos(q[3]))/25000000 + (1955117*m[5]*np.cos(q[3]))/25000000 + (1955117*mp*np.cos(q[3]))/25000000 + (1602137*m[4]*np.cos(q[3] - q[4]))/250000000 + (556407991456100359549689*m[5]*np.cos(q[3] - q[4]))/14411518807585587200000000 + (1272689*mp*np.cos(q[3] - q[4]))/12500000 - (13889*m[4]*np.cos(q[2] + q[3] + q[4]))/2000000 - (4823526697987611480033*m[5]*np.cos(q[2] + q[3] + q[4]))/115292150460684697600000 - (11033*mp*np.cos(q[2] + q[3] + q[4]))/100000))/2 - (q_[2]*((13889*m[4]*np.cos(q[2] + q[3] - q[4]))/2000000 + (4823526697987611480033*m[5]*np.cos(q[2] + q[3] - q[4]))/115292150460684697600000 + (11033*mp*np.cos(q[2] + q[3] - q[4]))/100000 + (13889*m[3]*np.cos(q[2] + q[3]))/1000000 + (16643*m[4]*np.cos(q[2] + q[3]))/200000 + (16949*m[5]*np.cos(q[2] + q[3]))/200000 + (16949*mp*np.cos(q[2] + q[3]))/200000 + (20587*m[2]*np.sin(q[2]))/100000 + (33337*m[3]*np.sin(q[2]))/100000 + (33337*m[4]*np.sin(q[2]))/100000 + (33337*m[5]*np.sin(q[2]))/100000 + (33337*mp*np.sin(q[2]))/100000 - (13889*m[4]*np.cos(q[2] + q[3] + q[4]))/2000000 - (4823526697987611480033*m[5]*np.cos(q[2] + q[3] + q[4]))/115292150460684697600000 - (11033*mp*np.cos(q[2] + q[3] + q[4]))/100000))/2
        C[1,2] = (1602137*q_[4]*m[4]*np.cos(q[3] - q[4]))/500000000 - (1919819*q_[3]*m[4]*np.cos(q[3]))/50000000 - (1955117*q_[3]*m[5]*np.cos(q[3]))/50000000 - (1955117*q_[3]*mp*np.cos(q[3]))/50000000 - (20587*q_[1]*m[2]*np.sin(q[2]))/200000 - (33337*q_[1]*m[3]*np.sin(q[2]))/200000 - (20587*q_[2]*m[2]*np.sin(q[2]))/200000 - (33337*q_[1]*m[4]*np.sin(q[2]))/200000 - (33337*q_[2]*m[3]*np.sin(q[2]))/200000 - (33337*q_[1]*m[5]*np.sin(q[2]))/200000 - (33337*q_[2]*m[4]*np.sin(q[2]))/200000 - (33337*q_[2]*m[5]*np.sin(q[2]))/200000 - (33337*q_[1]*mp*np.sin(q[2]))/200000 - (33337*q_[2]*mp*np.sin(q[2]))/200000 - (1602137*q_[3]*m[4]*np.cos(q[3] - q[4]))/500000000 - (556407991456100359549689*q_[3]*m[5]*np.cos(q[3] - q[4]))/28823037615171174400000000 - (1602137*q_[3]*m[3]*np.cos(q[3]))/250000000 + (556407991456100359549689*q_[4]*m[5]*np.cos(q[3] - q[4]))/28823037615171174400000000 - (1272689*q_[3]*mp*np.cos(q[3] - q[4]))/25000000 + (1272689*q_[4]*mp*np.cos(q[3] - q[4]))/25000000 + (13889*q_[1]*m[4]*np.cos(q[2] + q[3] + q[4]))/4000000 + (4823526697987611480033*q_[1]*m[5]*np.cos(q[2] + q[3] + q[4]))/230584300921369395200000 + (13889*q_[2]*m[4]*np.cos(q[2] + q[3] + q[4]))/4000000 + (4823526697987611480033*q_[2]*m[5]*np.cos(q[2] + q[3] + q[4]))/230584300921369395200000 + (13889*q_[3]*m[4]*np.cos(q[2] + q[3] + q[4]))/4000000 + (4823526697987611480033*q_[3]*m[5]*np.cos(q[2] + q[3] + q[4]))/230584300921369395200000 + (13889*q_[4]*m[4]*np.cos(q[2] + q[3] + q[4]))/4000000 + (4823526697987611480033*q_[4]*m[5]*np.cos(q[2] + q[3] + q[4]))/230584300921369395200000 + (11033*q_[1]*mp*np.cos(q[2] + q[3] + q[4]))/200000 + (11033*q_[2]*mp*np.cos(q[2] + q[3] + q[4]))/200000 + (11033*q_[3]*mp*np.cos(q[2] + q[3] + q[4]))/200000 + (11033*q_[4]*mp*np.cos(q[2] + q[3] + q[4]))/200000 + (18399582378411726024713*q_[4]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 + (421201*q_[4]*mp*np.sin(2*q[4]))/12500000 - (13889*q_[1]*m[4]*np.cos(q[2] + q[3] - q[4]))/4000000 - (4823526697987611480033*q_[1]*m[5]*np.cos(q[2] + q[3] - q[4]))/230584300921369395200000 - (13889*q_[2]*m[4]*np.cos(q[2] + q[3] - q[4]))/4000000 - (4823526697987611480033*q_[2]*m[5]*np.cos(q[2] + q[3] - q[4]))/230584300921369395200000 - (13889*q_[3]*m[4]*np.cos(q[2] + q[3] - q[4]))/4000000 - (4823526697987611480033*q_[3]*m[5]*np.cos(q[2] + q[3] - q[4]))/230584300921369395200000 + (13889*q_[4]*m[4]*np.cos(q[2] + q[3] - q[4]))/4000000 + (4823526697987611480033*q_[4]*m[5]*np.cos(q[2] + q[3] - q[4]))/230584300921369395200000 - (11033*q_[1]*mp*np.cos(q[2] + q[3] - q[4]))/200000 - (11033*q_[2]*mp*np.cos(q[2] + q[3] - q[4]))/200000 - (11033*q_[3]*mp*np.cos(q[2] + q[3] - q[4]))/200000 + (11033*q_[4]*mp*np.cos(q[2] + q[3] - q[4]))/200000 - (13889*q_[1]*m[3]*np.cos(q[2] + q[3]))/2000000 - (16643*q_[1]*m[4]*np.cos(q[2] + q[3]))/400000 - (13889*q_[2]*m[3]*np.cos(q[2] + q[3]))/2000000 - (16949*q_[1]*m[5]*np.cos(q[2] + q[3]))/400000 - (16643*q_[2]*m[4]*np.cos(q[2] + q[3]))/400000 - (13889*q_[3]*m[3]*np.cos(q[2] + q[3]))/2000000 - (16949*q_[2]*m[5]*np.cos(q[2] + q[3]))/400000 - (16643*q_[3]*m[4]*np.cos(q[2] + q[3]))/400000 - (16949*q_[3]*m[5]*np.cos(q[2] + q[3]))/400000 + (1602137*q_[3]*m[4]*np.cos(q[3] + q[4]))/500000000 + (556407991456100359549689*q_[3]*m[5]*np.cos(q[3] + q[4]))/28823037615171174400000000 + (1602137*q_[4]*m[4]*np.cos(q[3] + q[4]))/500000000 + (556407991456100359549689*q_[4]*m[5]*np.cos(q[3] + q[4]))/28823037615171174400000000 - (16949*q_[1]*mp*np.cos(q[2] + q[3]))/400000 - (16949*q_[2]*mp*np.cos(q[2] + q[3]))/400000 - (16949*q_[3]*mp*np.cos(q[2] + q[3]))/400000 + (1272689*q_[3]*mp*np.cos(q[3] + q[4]))/25000000 + (1272689*q_[4]*mp*np.cos(q[3] + q[4]))/25000000
        C[1,3] = (1602137*q_[4]*m[4]*np.cos(q[3] - q[4]))/500000000 - (1919819*q_[1]*m[4]*np.cos(q[3]))/50000000 - (1602137*q_[2]*m[3]*np.cos(q[3]))/250000000 - (1955117*q_[1]*m[5]*np.cos(q[3]))/50000000 - (1919819*q_[2]*m[4]*np.cos(q[3]))/50000000 - (1602137*q_[3]*m[3]*np.cos(q[3]))/250000000 - (1955117*q_[2]*m[5]*np.cos(q[3]))/50000000 - (1919819*q_[3]*m[4]*np.cos(q[3]))/50000000 - (1955117*q_[3]*m[5]*np.cos(q[3]))/50000000 - (1955117*q_[1]*mp*np.cos(q[3]))/50000000 - (1955117*q_[2]*mp*np.cos(q[3]))/50000000 - (1955117*q_[3]*mp*np.cos(q[3]))/50000000 - (1602137*q_[1]*m[4]*np.cos(q[3] - q[4]))/500000000 - (556407991456100359549689*q_[1]*m[5]*np.cos(q[3] - q[4]))/28823037615171174400000000 - (1602137*q_[2]*m[4]*np.cos(q[3] - q[4]))/500000000 - (556407991456100359549689*q_[2]*m[5]*np.cos(q[3] - q[4]))/28823037615171174400000000 - (1602137*q_[3]*m[4]*np.cos(q[3] - q[4]))/500000000 - (556407991456100359549689*q_[3]*m[5]*np.cos(q[3] - q[4]))/28823037615171174400000000 - (1602137*q_[1]*m[3]*np.cos(q[3]))/250000000 + (556407991456100359549689*q_[4]*m[5]*np.cos(q[3] - q[4]))/28823037615171174400000000 - (1272689*q_[1]*mp*np.cos(q[3] - q[4]))/25000000 - (1272689*q_[2]*mp*np.cos(q[3] - q[4]))/25000000 - (1272689*q_[3]*mp*np.cos(q[3] - q[4]))/25000000 + (1272689*q_[4]*mp*np.cos(q[3] - q[4]))/25000000 + (13889*q_[1]*m[4]*np.cos(q[2] + q[3] + q[4]))/4000000 + (4823526697987611480033*q_[1]*m[5]*np.cos(q[2] + q[3] + q[4]))/230584300921369395200000 + (13889*q_[2]*m[4]*np.cos(q[2] + q[3] + q[4]))/4000000 + (4823526697987611480033*q_[2]*m[5]*np.cos(q[2] + q[3] + q[4]))/230584300921369395200000 + (13889*q_[3]*m[4]*np.cos(q[2] + q[3] + q[4]))/4000000 + (4823526697987611480033*q_[3]*m[5]*np.cos(q[2] + q[3] + q[4]))/230584300921369395200000 + (13889*q_[4]*m[4]*np.cos(q[2] + q[3] + q[4]))/4000000 + (4823526697987611480033*q_[4]*m[5]*np.cos(q[2] + q[3] + q[4]))/230584300921369395200000 + (11033*q_[1]*mp*np.cos(q[2] + q[3] + q[4]))/200000 + (11033*q_[2]*mp*np.cos(q[2] + q[3] + q[4]))/200000 + (11033*q_[3]*mp*np.cos(q[2] + q[3] + q[4]))/200000 + (11033*q_[4]*mp*np.cos(q[2] + q[3] + q[4]))/200000 + (18399582378411726024713*q_[4]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 + (421201*q_[4]*mp*np.sin(2*q[4]))/12500000 - (13889*q_[1]*m[4]*np.cos(q[2] + q[3] - q[4]))/4000000 - (4823526697987611480033*q_[1]*m[5]*np.cos(q[2] + q[3] - q[4]))/230584300921369395200000 - (13889*q_[2]*m[4]*np.cos(q[2] + q[3] - q[4]))/4000000 - (4823526697987611480033*q_[2]*m[5]*np.cos(q[2] + q[3] - q[4]))/230584300921369395200000 - (13889*q_[3]*m[4]*np.cos(q[2] + q[3] - q[4]))/4000000 - (4823526697987611480033*q_[3]*m[5]*np.cos(q[2] + q[3] - q[4]))/230584300921369395200000 + (13889*q_[4]*m[4]*np.cos(q[2] + q[3] - q[4]))/4000000 + (4823526697987611480033*q_[4]*m[5]*np.cos(q[2] + q[3] - q[4]))/230584300921369395200000 - (11033*q_[1]*mp*np.cos(q[2] + q[3] - q[4]))/200000 - (11033*q_[2]*mp*np.cos(q[2] + q[3] - q[4]))/200000 - (11033*q_[3]*mp*np.cos(q[2] + q[3] - q[4]))/200000 + (11033*q_[4]*mp*np.cos(q[2] + q[3] - q[4]))/200000 - (13889*q_[1]*m[3]*np.cos(q[2] + q[3]))/2000000 - (16643*q_[1]*m[4]*np.cos(q[2] + q[3]))/400000 - (13889*q_[2]*m[3]*np.cos(q[2] + q[3]))/2000000 - (16949*q_[1]*m[5]*np.cos(q[2] + q[3]))/400000 - (16643*q_[2]*m[4]*np.cos(q[2] + q[3]))/400000 - (13889*q_[3]*m[3]*np.cos(q[2] + q[3]))/2000000 + (1602137*q_[1]*m[4]*np.cos(q[3] + q[4]))/500000000 - (16949*q_[2]*m[5]*np.cos(q[2] + q[3]))/400000 - (16643*q_[3]*m[4]*np.cos(q[2] + q[3]))/400000 + (556407991456100359549689*q_[1]*m[5]*np.cos(q[3] + q[4]))/28823037615171174400000000 + (1602137*q_[2]*m[4]*np.cos(q[3] + q[4]))/500000000 - (16949*q_[3]*m[5]*np.cos(q[2] + q[3]))/400000 + (556407991456100359549689*q_[2]*m[5]*np.cos(q[3] + q[4]))/28823037615171174400000000 + (1602137*q_[3]*m[4]*np.cos(q[3] + q[4]))/500000000 + (556407991456100359549689*q_[3]*m[5]*np.cos(q[3] + q[4]))/28823037615171174400000000 + (1602137*q_[4]*m[4]*np.cos(q[3] + q[4]))/500000000 + (556407991456100359549689*q_[4]*m[5]*np.cos(q[3] + q[4]))/28823037615171174400000000 - (16949*q_[1]*mp*np.cos(q[2] + q[3]))/400000 - (16949*q_[2]*mp*np.cos(q[2] + q[3]))/400000 + (1272689*q_[1]*mp*np.cos(q[3] + q[4]))/25000000 - (16949*q_[3]*mp*np.cos(q[2] + q[3]))/400000 + (1272689*q_[2]*mp*np.cos(q[3] + q[4]))/25000000 + (1272689*q_[3]*mp*np.cos(q[3] + q[4]))/25000000 + (1272689*q_[4]*mp*np.cos(q[3] + q[4]))/25000000
        C[1,4] = (799843*q_[4]*m[4]*np.sin(q[4]))/500000000 + (282885653993744037976053*q_[4]*m[5]*np.sin(q[4]))/28823037615171174400000000 - (106253245864567*q_[5]*m[5]*np.sin(q[4]))/72057594037927936 + (647053*q_[4]*mp*np.sin(q[4]))/25000000 + (799843*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/1000000000 + (18399582378411726024713*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 + (282885653993744037976053*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/57646075230342348800000000 + (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 + (647053*q_[0]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/50000000 + (421201*q_[0]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[0]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 - (13889*q_[0]*m[4]*np.cos(q[1] - q[4]))/4000000 - (4823526697987611480033*q_[0]*m[5]*np.cos(q[1] - q[4]))/230584300921369395200000 + (1602137*q_[1]*m[4]*np.cos(q[3] - q[4]))/500000000 + (556407991456100359549689*q_[1]*m[5]*np.cos(q[3] - q[4]))/28823037615171174400000000 + (1602137*q_[2]*m[4]*np.cos(q[3] - q[4]))/500000000 + (556407991456100359549689*q_[2]*m[5]*np.cos(q[3] - q[4]))/28823037615171174400000000 + (1602137*q_[3]*m[4]*np.cos(q[3] - q[4]))/500000000 + (556407991456100359549689*q_[3]*m[5]*np.cos(q[3] - q[4]))/28823037615171174400000000 - (1602137*q_[4]*m[4]*np.cos(q[3] - q[4]))/500000000 - (556407991456100359549689*q_[4]*m[5]*np.cos(q[3] - q[4]))/28823037615171174400000000 - (11033*q_[0]*mp*np.cos(q[1] - q[4]))/200000 + (1272689*q_[1]*mp*np.cos(q[3] - q[4]))/25000000 + (1272689*q_[2]*mp*np.cos(q[3] - q[4]))/25000000 + (1272689*q_[3]*mp*np.cos(q[3] - q[4]))/25000000 - (1272689*q_[4]*mp*np.cos(q[3] - q[4]))/25000000 + (1602137*q_[0]*m[4]*np.cos(q[1] + q[2] + q[4]))/500000000 + (556407991456100359549689*q_[0]*m[5]*np.cos(q[1] + q[2] + q[4]))/28823037615171174400000000 + (13889*q_[1]*m[4]*np.cos(q[2] + q[3] + q[4]))/4000000 + (4823526697987611480033*q_[1]*m[5]*np.cos(q[2] + q[3] + q[4]))/230584300921369395200000 + (13889*q_[2]*m[4]*np.cos(q[2] + q[3] + q[4]))/4000000 + (4823526697987611480033*q_[2]*m[5]*np.cos(q[2] + q[3] + q[4]))/230584300921369395200000 + (13889*q_[3]*m[4]*np.cos(q[2] + q[3] + q[4]))/4000000 + (4823526697987611480033*q_[3]*m[5]*np.cos(q[2] + q[3] + q[4]))/230584300921369395200000 + (13889*q_[4]*m[4]*np.cos(q[2] + q[3] + q[4]))/4000000 + (4823526697987611480033*q_[4]*m[5]*np.cos(q[2] + q[3] + q[4]))/230584300921369395200000 + (1272689*q_[0]*mp*np.cos(q[1] + q[2] + q[4]))/25000000 + (11033*q_[1]*mp*np.cos(q[2] + q[3] + q[4]))/200000 + (11033*q_[2]*mp*np.cos(q[2] + q[3] + q[4]))/200000 + (11033*q_[3]*mp*np.cos(q[2] + q[3] + q[4]))/200000 + (11033*q_[4]*mp*np.cos(q[2] + q[3] + q[4]))/200000 - (35001652044750319774713*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3]))/45035996273704960000000000 - (96149074149345570669947681665422560407201*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3]))/16615349947311448411297588253504307200000000 - (421201*q_[0]*mp*np.sin(q[1] + q[2] + q[3]))/12500000 + (18399582378411726024713*q_[1]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 + (71648743731038005291574683765544160407201*q_[1]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 + (18399582378411726024713*q_[2]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 + (71648743731038005291574683765544160407201*q_[2]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 + (18399582378411726024713*q_[3]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 + (71648743731038005291574683765544160407201*q_[3]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 + (421201*q_[1]*mp*np.sin(2*q[4]))/12500000 + (421201*q_[2]*mp*np.sin(2*q[4]))/12500000 + (421201*q_[3]*mp*np.sin(2*q[4]))/12500000 - (1602137*q_[0]*m[4]*np.cos(q[1] + q[2] - q[4]))/500000000 - (556407991456100359549689*q_[0]*m[5]*np.cos(q[1] + q[2] - q[4]))/28823037615171174400000000 + (13889*q_[1]*m[4]*np.cos(q[2] + q[3] - q[4]))/4000000 + (4823526697987611480033*q_[1]*m[5]*np.cos(q[2] + q[3] - q[4]))/230584300921369395200000 + (13889*q_[2]*m[4]*np.cos(q[2] + q[3] - q[4]))/4000000 + (4823526697987611480033*q_[2]*m[5]*np.cos(q[2] + q[3] - q[4]))/230584300921369395200000 + (13889*q_[3]*m[4]*np.cos(q[2] + q[3] - q[4]))/4000000 + (4823526697987611480033*q_[3]*m[5]*np.cos(q[2] + q[3] - q[4]))/230584300921369395200000 - (13889*q_[4]*m[4]*np.cos(q[2] + q[3] - q[4]))/4000000 - (4823526697987611480033*q_[4]*m[5]*np.cos(q[2] + q[3] - q[4]))/230584300921369395200000 - (1272689*q_[0]*mp*np.cos(q[1] + q[2] - q[4]))/25000000 + (11033*q_[1]*mp*np.cos(q[2] + q[3] - q[4]))/200000 + (11033*q_[2]*mp*np.cos(q[2] + q[3] - q[4]))/200000 + (11033*q_[3]*mp*np.cos(q[2] + q[3] - q[4]))/200000 - (11033*q_[4]*mp*np.cos(q[2] + q[3] - q[4]))/200000 - (799843*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/1000000000 - (282885653993744037976053*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/57646075230342348800000000 - (647053*q_[0]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/50000000 + (13889*q_[0]*m[4]*np.cos(q[1] + q[4]))/4000000 + (4823526697987611480033*q_[0]*m[5]*np.cos(q[1] + q[4]))/230584300921369395200000 + (1602137*q_[1]*m[4]*np.cos(q[3] + q[4]))/500000000 + (556407991456100359549689*q_[1]*m[5]*np.cos(q[3] + q[4]))/28823037615171174400000000 + (1602137*q_[2]*m[4]*np.cos(q[3] + q[4]))/500000000 + (556407991456100359549689*q_[2]*m[5]*np.cos(q[3] + q[4]))/28823037615171174400000000 + (1602137*q_[3]*m[4]*np.cos(q[3] + q[4]))/500000000 + (556407991456100359549689*q_[3]*m[5]*np.cos(q[3] + q[4]))/28823037615171174400000000 + (1602137*q_[4]*m[4]*np.cos(q[3] + q[4]))/500000000 + (556407991456100359549689*q_[4]*m[5]*np.cos(q[3] + q[4]))/28823037615171174400000000 + (11033*q_[0]*mp*np.cos(q[1] + q[4]))/200000 + (1272689*q_[1]*mp*np.cos(q[3] + q[4]))/25000000 + (1272689*q_[2]*mp*np.cos(q[3] + q[4]))/25000000 + (1272689*q_[3]*mp*np.cos(q[3] + q[4]))/25000000 + (1272689*q_[4]*mp*np.cos(q[3] + q[4]))/25000000
        C[1,5] = (106253245864567*q_[0]*m[5]*(np.sin(q[1] + q[2] + q[3] + q[4]) - np.sin(q[1] + q[2] + q[3] - q[4])))/144115188075855872 - (106253245864567*q_[4]*m[5]*np.sin(q[4]))/72057594037927936
        C[2,0] = (1602137*q_[0]*m[3]*np.cos(2*q[1] + 2*q[2] + q[3]))/250000000 + (1919819*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3]))/50000000 + (1955117*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3]))/50000000 + (1955117*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3]))/50000000 + (20587*q_[0]*m[2]*np.sin(q[2]))/400000 + (33337*q_[0]*m[3]*np.sin(q[2]))/400000 + (33337*q_[0]*m[4]*np.sin(q[2]))/400000 + (33337*q_[0]*m[5]*np.sin(q[2]))/400000 + (33337*q_[0]*mp*np.sin(q[2]))/400000 - (13889*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/8000000 - (4823526697987611480033*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/461168601842738790400000 - (11033*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3] + q[4]))/400000 + (799843*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/1000000000 + (18399582378411726024713*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 + (282885653993744037976053*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/57646075230342348800000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 - (106253245864567*q_[5]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/144115188075855872 + (647053*q_[4]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/50000000 + (421201*q_[4]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[4]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 + (20587*q_[0]*m[2]*np.sin(2*q[1] + q[2]))/400000 + (33337*q_[0]*m[3]*np.sin(2*q[1] + q[2]))/400000 + (33337*q_[0]*m[4]*np.sin(2*q[1] + q[2]))/400000 + (33337*q_[0]*m[5]*np.sin(2*q[1] + q[2]))/400000 - (799843*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/1000000000 - (18399582378411726024713*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/180143985094819840000000000 - (18399582378411726024713*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/180143985094819840000000000 - (282885653993744037976053*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/57646075230342348800000000 - (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/66461399789245793645190353014017228800000000 - (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/66461399789245793645190353014017228800000000 + (33337*q_[0]*mp*np.sin(2*q[1] + q[2]))/400000 - (647053*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/50000000 - (421201*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/50000000 - (421201*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/50000000 - (13889*q_[0]*m[4]*np.cos(q[2] + q[3] + q[4]))/8000000 - (4823526697987611480033*q_[0]*m[5]*np.cos(q[2] + q[3] + q[4]))/461168601842738790400000 + (1602137*q_[4]*m[4]*np.cos(q[1] + q[2] + q[4]))/500000000 + (556407991456100359549689*q_[4]*m[5]*np.cos(q[1] + q[2] + q[4]))/28823037615171174400000000 - (11033*q_[0]*mp*np.cos(q[2] + q[3] + q[4]))/400000 + (1272689*q_[4]*mp*np.cos(q[1] + q[2] + q[4]))/25000000 - (35001652044750319774713*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3]))/45035996273704960000000000 - (96149074149345570669947681665422560407201*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3]))/16615349947311448411297588253504307200000000 - (421201*q_[4]*mp*np.sin(q[1] + q[2] + q[3]))/12500000 - (18399582378411726024713*q_[0]*m[3]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/45035996273704960000000000 - (413243870667248829648887*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/90071992547409920000000000 - (93509330126733049947080360257231468548447*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/33230699894622896822595176507008614400000000 + (2375599*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/200000000 + (13889*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/8000000 - (1602137*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/500000000 + (4823526697987611480033*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/461168601842738790400000 - (556407991456100359549689*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/28823037615171174400000000 + (11033*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3] - q[4]))/400000 - (1272689*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/25000000 + (13216703834082521293499*q_[0]*m[2]*np.sin(2*q[1] + 2*q[2]))/337769972052787200000000 + (3845521*q_[0]*m[3]*np.sin(2*q[1] + 2*q[2]))/50000000 + (3845521*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2]))/50000000 + (3845521*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2]))/50000000 + (3845521*q_[0]*mp*np.sin(2*q[1] + 2*q[2]))/50000000 + (13889*q_[0]*m[3]*np.cos(2*q[1] + q[2] + q[3]))/4000000 + (16643*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3]))/800000 + (16949*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3]))/800000 + (13889*q_[0]*m[4]*np.cos(q[2] + q[3] - q[4]))/8000000 + (4823526697987611480033*q_[0]*m[5]*np.cos(q[2] + q[3] - q[4]))/461168601842738790400000 - (1602137*q_[4]*m[4]*np.cos(q[1] + q[2] - q[4]))/500000000 - (556407991456100359549689*q_[4]*m[5]*np.cos(q[1] + q[2] - q[4]))/28823037615171174400000000 + (16949*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3]))/800000 + (11033*q_[0]*mp*np.cos(q[2] + q[3] - q[4]))/400000 - (1272689*q_[4]*mp*np.cos(q[1] + q[2] - q[4]))/25000000 - (799843*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/1000000000 - (282885653993744037976053*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/57646075230342348800000000 + (106253245864567*q_[5]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/144115188075855872 - (647053*q_[4]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/50000000 + (13889*q_[0]*m[3]*np.cos(q[2] + q[3]))/4000000 + (16643*q_[0]*m[4]*np.cos(q[2] + q[3]))/800000 + (16949*q_[0]*m[5]*np.cos(q[2] + q[3]))/800000 + (1602137*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/500000000 + (556407991456100359549689*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/28823037615171174400000000 + (16949*q_[0]*mp*np.cos(q[2] + q[3]))/800000 + (1272689*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/25000000 + (799843*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/1000000000 + (282885653993744037976053*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/57646075230342348800000000 + (647053*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/50000000
        C[2,1] = (20587*q_[1]*m[2]*np.sin(q[2]))/200000 - (1919819*q_[3]*m[4]*np.cos(q[3]))/50000000 - (1955117*q_[3]*m[5]*np.cos(q[3]))/50000000 - (1955117*q_[3]*mp*np.cos(q[3]))/50000000 - (1602137*q_[3]*m[3]*np.cos(q[3]))/250000000 + (33337*q_[1]*m[3]*np.sin(q[2]))/200000 + (33337*q_[1]*m[4]*np.sin(q[2]))/200000 + (33337*q_[1]*m[5]*np.sin(q[2]))/200000 + (33337*q_[1]*mp*np.sin(q[2]))/200000 + (18399582378411726024713*q_[4]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 + (421201*q_[4]*mp*np.sin(2*q[4]))/12500000 + (13889*q_[1]*m[3]*np.cos(q[2])*np.cos(q[3]))/2000000 + (16643*q_[1]*m[4]*np.cos(q[2])*np.cos(q[3]))/400000 + (16949*q_[1]*m[5]*np.cos(q[2])*np.cos(q[3]))/400000 + (1602137*q_[4]*m[4]*np.cos(q[3])*np.cos(q[4]))/250000000 + (556407991456100359549689*q_[4]*m[5]*np.cos(q[3])*np.cos(q[4]))/14411518807585587200000000 + (16949*q_[1]*mp*np.cos(q[2])*np.cos(q[3]))/400000 + (1272689*q_[4]*mp*np.cos(q[3])*np.cos(q[4]))/12500000 - (13889*q_[1]*m[3]*np.sin(q[2])*np.sin(q[3]))/2000000 - (16643*q_[1]*m[4]*np.sin(q[2])*np.sin(q[3]))/400000 - (16949*q_[1]*m[5]*np.sin(q[2])*np.sin(q[3]))/400000 - (1602137*q_[3]*m[4]*np.sin(q[3])*np.sin(q[4]))/250000000 - (556407991456100359549689*q_[3]*m[5]*np.sin(q[3])*np.sin(q[4]))/14411518807585587200000000 - (16949*q_[1]*mp*np.sin(q[2])*np.sin(q[3]))/400000 - (1272689*q_[3]*mp*np.sin(q[3])*np.sin(q[4]))/12500000 + (13889*q_[1]*m[4]*np.cos(q[2])*np.sin(q[3])*np.sin(q[4]))/2000000 + (13889*q_[1]*m[4]*np.cos(q[3])*np.sin(q[2])*np.sin(q[4]))/2000000 + (4823526697987611480033*q_[1]*m[5]*np.cos(q[2])*np.sin(q[3])*np.sin(q[4]))/115292150460684697600000 + (4823526697987611480033*q_[1]*m[5]*np.cos(q[3])*np.sin(q[2])*np.sin(q[4]))/115292150460684697600000 + (11033*q_[1]*mp*np.cos(q[2])*np.sin(q[3])*np.sin(q[4]))/100000 + (11033*q_[1]*mp*np.cos(q[3])*np.sin(q[2])*np.sin(q[4]))/100000
        C[2,2] = (q_[4]*np.cos(q[4])*(1331003345926786101166554207585231511224320*m[4]*np.cos(q[3]) + 8018684233560511044304206806968718642380800*m[5]*np.cos(q[3]) + 21146173109093859967125916296764143226060800*mp*np.cos(q[3]) + 169706193598848601805200773995116682543104*m[4]*np.sin(q[4]) + 1791218593275950132289367094138604010180025*m[5]*np.sin(q[4]) + 13996804026315058764573910939928535393894400*mp*np.sin(q[4])))/207691874341393105141219853168803840000000000 - (q_[3]*((1602137*m[3]*np.cos(q[3]))/125000000 + (1919819*m[4]*np.cos(q[3]))/25000000 + (1955117*m[5]*np.cos(q[3]))/25000000 + (1955117*mp*np.cos(q[3]))/25000000 + (1602137*m[4]*np.sin(q[3])*np.sin(q[4]))/125000000 + (556407991456100359549689*m[5]*np.sin(q[3])*np.sin(q[4]))/7205759403792793600000000 + (1272689*mp*np.sin(q[3])*np.sin(q[4]))/6250000))/2
        C[2,3] = (18399582378411726024713*q_[4]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 - (1919819*q_[1]*m[4]*np.cos(q[3]))/50000000 - (1602137*q_[2]*m[3]*np.cos(q[3]))/250000000 - (1955117*q_[1]*m[5]*np.cos(q[3]))/50000000 - (1919819*q_[2]*m[4]*np.cos(q[3]))/50000000 - (1602137*q_[3]*m[3]*np.cos(q[3]))/250000000 - (1955117*q_[2]*m[5]*np.cos(q[3]))/50000000 - (1919819*q_[3]*m[4]*np.cos(q[3]))/50000000 - (1955117*q_[3]*m[5]*np.cos(q[3]))/50000000 - (1955117*q_[1]*mp*np.cos(q[3]))/50000000 - (1955117*q_[2]*mp*np.cos(q[3]))/50000000 - (1955117*q_[3]*mp*np.cos(q[3]))/50000000 - (1602137*q_[1]*m[3]*np.cos(q[3]))/250000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 + (421201*q_[4]*mp*np.sin(2*q[4]))/12500000 + (1602137*q_[4]*m[4]*np.cos(q[3])*np.cos(q[4]))/250000000 + (556407991456100359549689*q_[4]*m[5]*np.cos(q[3])*np.cos(q[4]))/14411518807585587200000000 + (1272689*q_[4]*mp*np.cos(q[3])*np.cos(q[4]))/12500000 - (1602137*q_[1]*m[4]*np.sin(q[3])*np.sin(q[4]))/250000000 - (556407991456100359549689*q_[1]*m[5]*np.sin(q[3])*np.sin(q[4]))/14411518807585587200000000 - (1602137*q_[2]*m[4]*np.sin(q[3])*np.sin(q[4]))/250000000 - (556407991456100359549689*q_[2]*m[5]*np.sin(q[3])*np.sin(q[4]))/14411518807585587200000000 - (1602137*q_[3]*m[4]*np.sin(q[3])*np.sin(q[4]))/250000000 - (556407991456100359549689*q_[3]*m[5]*np.sin(q[3])*np.sin(q[4]))/14411518807585587200000000 - (1272689*q_[1]*mp*np.sin(q[3])*np.sin(q[4]))/12500000 - (1272689*q_[2]*mp*np.sin(q[3])*np.sin(q[4]))/12500000 - (1272689*q_[3]*mp*np.sin(q[3])*np.sin(q[4]))/12500000
        C[2,4] = (799843*q_[4]*m[4]*np.sin(q[4]))/500000000 + (282885653993744037976053*q_[4]*m[5]*np.sin(q[4]))/28823037615171174400000000 - (106253245864567*q_[5]*m[5]*np.sin(q[4]))/72057594037927936 + (647053*q_[4]*mp*np.sin(q[4]))/25000000 + (799843*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/1000000000 + (18399582378411726024713*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 + (282885653993744037976053*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/57646075230342348800000000 + (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 + (647053*q_[0]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/50000000 + (421201*q_[0]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[0]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 + (1602137*q_[1]*m[4]*np.cos(q[3] - q[4]))/500000000 + (556407991456100359549689*q_[1]*m[5]*np.cos(q[3] - q[4]))/28823037615171174400000000 + (1602137*q_[2]*m[4]*np.cos(q[3] - q[4]))/500000000 + (556407991456100359549689*q_[2]*m[5]*np.cos(q[3] - q[4]))/28823037615171174400000000 + (1602137*q_[3]*m[4]*np.cos(q[3] - q[4]))/500000000 + (556407991456100359549689*q_[3]*m[5]*np.cos(q[3] - q[4]))/28823037615171174400000000 - (1602137*q_[4]*m[4]*np.cos(q[3] - q[4]))/500000000 - (556407991456100359549689*q_[4]*m[5]*np.cos(q[3] - q[4]))/28823037615171174400000000 + (1272689*q_[1]*mp*np.cos(q[3] - q[4]))/25000000 + (1272689*q_[2]*mp*np.cos(q[3] - q[4]))/25000000 + (1272689*q_[3]*mp*np.cos(q[3] - q[4]))/25000000 - (1272689*q_[4]*mp*np.cos(q[3] - q[4]))/25000000 + (1602137*q_[0]*m[4]*np.cos(q[1] + q[2] + q[4]))/500000000 + (556407991456100359549689*q_[0]*m[5]*np.cos(q[1] + q[2] + q[4]))/28823037615171174400000000 + (1272689*q_[0]*mp*np.cos(q[1] + q[2] + q[4]))/25000000 - (35001652044750319774713*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3]))/45035996273704960000000000 - (96149074149345570669947681665422560407201*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3]))/16615349947311448411297588253504307200000000 - (421201*q_[0]*mp*np.sin(q[1] + q[2] + q[3]))/12500000 + (18399582378411726024713*q_[1]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 + (71648743731038005291574683765544160407201*q_[1]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 + (18399582378411726024713*q_[2]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 + (71648743731038005291574683765544160407201*q_[2]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 + (18399582378411726024713*q_[3]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 + (71648743731038005291574683765544160407201*q_[3]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 + (421201*q_[1]*mp*np.sin(2*q[4]))/12500000 + (421201*q_[2]*mp*np.sin(2*q[4]))/12500000 + (421201*q_[3]*mp*np.sin(2*q[4]))/12500000 - (1602137*q_[0]*m[4]*np.cos(q[1] + q[2] - q[4]))/500000000 - (556407991456100359549689*q_[0]*m[5]*np.cos(q[1] + q[2] - q[4]))/28823037615171174400000000 - (1272689*q_[0]*mp*np.cos(q[1] + q[2] - q[4]))/25000000 - (799843*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/1000000000 - (282885653993744037976053*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/57646075230342348800000000 - (647053*q_[0]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/50000000 + (1602137*q_[1]*m[4]*np.cos(q[3] + q[4]))/500000000 + (556407991456100359549689*q_[1]*m[5]*np.cos(q[3] + q[4]))/28823037615171174400000000 + (1602137*q_[2]*m[4]*np.cos(q[3] + q[4]))/500000000 + (556407991456100359549689*q_[2]*m[5]*np.cos(q[3] + q[4]))/28823037615171174400000000 + (1602137*q_[3]*m[4]*np.cos(q[3] + q[4]))/500000000 + (556407991456100359549689*q_[3]*m[5]*np.cos(q[3] + q[4]))/28823037615171174400000000 + (1602137*q_[4]*m[4]*np.cos(q[3] + q[4]))/500000000 + (556407991456100359549689*q_[4]*m[5]*np.cos(q[3] + q[4]))/28823037615171174400000000 + (1272689*q_[1]*mp*np.cos(q[3] + q[4]))/25000000 + (1272689*q_[2]*mp*np.cos(q[3] + q[4]))/25000000 + (1272689*q_[3]*mp*np.cos(q[3] + q[4]))/25000000 + (1272689*q_[4]*mp*np.cos(q[3] + q[4]))/25000000
        C[2,5] = (106253245864567*q_[0]*m[5]*(np.sin(q[1] + q[2] + q[3] + q[4]) - np.sin(q[1] + q[2] + q[3] - q[4])))/144115188075855872 - (106253245864567*q_[4]*m[5]*np.sin(q[4]))/72057594037927936
        C[3,0] = (1602137*q_[0]*m[3]*np.cos(q[3]))/500000000 + (1919819*q_[0]*m[4]*np.cos(q[3]))/100000000 + (1955117*q_[0]*m[5]*np.cos(q[3]))/100000000 + (1602137*q_[0]*m[3]*np.cos(2*q[1] + 2*q[2] + q[3]))/500000000 + (1919819*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3]))/100000000 + (1955117*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3]))/100000000 + (1955117*q_[0]*mp*np.cos(q[3]))/100000000 + (1955117*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3]))/100000000 - (13889*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/8000000 - (4823526697987611480033*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/461168601842738790400000 - (11033*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3] + q[4]))/400000 + (799843*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/1000000000 + (18399582378411726024713*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 + (282885653993744037976053*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/57646075230342348800000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 - (106253245864567*q_[5]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/144115188075855872 + (647053*q_[4]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/50000000 + (421201*q_[4]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[4]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 + (1602137*q_[0]*m[4]*np.cos(q[3] - q[4]))/1000000000 + (556407991456100359549689*q_[0]*m[5]*np.cos(q[3] - q[4]))/57646075230342348800000000 + (1272689*q_[0]*mp*np.cos(q[3] - q[4]))/50000000 - (799843*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/1000000000 - (18399582378411726024713*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/180143985094819840000000000 - (18399582378411726024713*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/180143985094819840000000000 - (282885653993744037976053*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/57646075230342348800000000 - (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/66461399789245793645190353014017228800000000 - (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/66461399789245793645190353014017228800000000 - (647053*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/50000000 - (421201*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/50000000 - (421201*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/50000000 - (13889*q_[0]*m[4]*np.cos(q[2] + q[3] + q[4]))/8000000 - (4823526697987611480033*q_[0]*m[5]*np.cos(q[2] + q[3] + q[4]))/461168601842738790400000 - (11033*q_[0]*mp*np.cos(q[2] + q[3] + q[4]))/400000 - (35001652044750319774713*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3]))/45035996273704960000000000 - (96149074149345570669947681665422560407201*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3]))/16615349947311448411297588253504307200000000 - (421201*q_[4]*mp*np.sin(q[1] + q[2] + q[3]))/12500000 - (18399582378411726024713*q_[0]*m[3]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/45035996273704960000000000 - (413243870667248829648887*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/90071992547409920000000000 - (93509330126733049947080360257231468548447*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/33230699894622896822595176507008614400000000 + (2375599*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3]))/200000000 + (13889*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/8000000 - (1602137*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/1000000000 + (4823526697987611480033*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/461168601842738790400000 - (556407991456100359549689*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/57646075230342348800000000 + (11033*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3] - q[4]))/400000 - (1272689*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/50000000 + (13889*q_[0]*m[3]*np.cos(2*q[1] + q[2] + q[3]))/4000000 + (16643*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3]))/800000 + (16949*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3]))/800000 + (13889*q_[0]*m[4]*np.cos(q[2] + q[3] - q[4]))/8000000 + (4823526697987611480033*q_[0]*m[5]*np.cos(q[2] + q[3] - q[4]))/461168601842738790400000 + (16949*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3]))/800000 + (11033*q_[0]*mp*np.cos(q[2] + q[3] - q[4]))/400000 - (799843*q_[4]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/1000000000 - (282885653993744037976053*q_[4]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/57646075230342348800000000 + (106253245864567*q_[5]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/144115188075855872 - (647053*q_[4]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/50000000 + (13889*q_[0]*m[3]*np.cos(q[2] + q[3]))/4000000 + (16643*q_[0]*m[4]*np.cos(q[2] + q[3]))/800000 + (16949*q_[0]*m[5]*np.cos(q[2] + q[3]))/800000 - (1602137*q_[0]*m[4]*np.cos(q[3] + q[4]))/1000000000 - (556407991456100359549689*q_[0]*m[5]*np.cos(q[3] + q[4]))/57646075230342348800000000 + (1602137*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/1000000000 + (556407991456100359549689*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/57646075230342348800000000 + (16949*q_[0]*mp*np.cos(q[2] + q[3]))/800000 - (1272689*q_[0]*mp*np.cos(q[3] + q[4]))/50000000 + (1272689*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/50000000 + (799843*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/1000000000 + (282885653993744037976053*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/57646075230342348800000000 + (647053*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/50000000
        C[3,1] = (1602137*q_[1]*m[3]*np.cos(q[3]))/250000000 + (1919819*q_[1]*m[4]*np.cos(q[3]))/50000000 + (1602137*q_[2]*m[3]*np.cos(q[3]))/250000000 + (1955117*q_[1]*m[5]*np.cos(q[3]))/50000000 + (1919819*q_[2]*m[4]*np.cos(q[3]))/50000000 + (1955117*q_[2]*m[5]*np.cos(q[3]))/50000000 + (1955117*q_[1]*mp*np.cos(q[3]))/50000000 + (1955117*q_[2]*mp*np.cos(q[3]))/50000000 + (18399582378411726024713*q_[4]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 + (421201*q_[4]*mp*np.sin(2*q[4]))/12500000 + (13889*q_[1]*m[3]*np.cos(q[2])*np.cos(q[3]))/2000000 + (16643*q_[1]*m[4]*np.cos(q[2])*np.cos(q[3]))/400000 + (16949*q_[1]*m[5]*np.cos(q[2])*np.cos(q[3]))/400000 + (16949*q_[1]*mp*np.cos(q[2])*np.cos(q[3]))/400000 - (13889*q_[1]*m[3]*np.sin(q[2])*np.sin(q[3]))/2000000 - (16643*q_[1]*m[4]*np.sin(q[2])*np.sin(q[3]))/400000 - (16949*q_[1]*m[5]*np.sin(q[2])*np.sin(q[3]))/400000 + (1602137*q_[1]*m[4]*np.sin(q[3])*np.sin(q[4]))/250000000 + (556407991456100359549689*q_[1]*m[5]*np.sin(q[3])*np.sin(q[4]))/14411518807585587200000000 + (1602137*q_[2]*m[4]*np.sin(q[3])*np.sin(q[4]))/250000000 + (556407991456100359549689*q_[2]*m[5]*np.sin(q[3])*np.sin(q[4]))/14411518807585587200000000 - (16949*q_[1]*mp*np.sin(q[2])*np.sin(q[3]))/400000 + (1272689*q_[1]*mp*np.sin(q[3])*np.sin(q[4]))/12500000 + (1272689*q_[2]*mp*np.sin(q[3])*np.sin(q[4]))/12500000 + (13889*q_[1]*m[4]*np.cos(q[2])*np.sin(q[3])*np.sin(q[4]))/2000000 + (13889*q_[1]*m[4]*np.cos(q[3])*np.sin(q[2])*np.sin(q[4]))/2000000 + (4823526697987611480033*q_[1]*m[5]*np.cos(q[2])*np.sin(q[3])*np.sin(q[4]))/115292150460684697600000 + (4823526697987611480033*q_[1]*m[5]*np.cos(q[3])*np.sin(q[2])*np.sin(q[4]))/115292150460684697600000 + (11033*q_[1]*mp*np.cos(q[2])*np.sin(q[3])*np.sin(q[4]))/100000 + (11033*q_[1]*mp*np.cos(q[3])*np.sin(q[2])*np.sin(q[4]))/100000
        C[3,2] = (1602137*q_[1]*m[3]*np.cos(q[3]))/250000000 + (1919819*q_[1]*m[4]*np.cos(q[3]))/50000000 + (1602137*q_[2]*m[3]*np.cos(q[3]))/250000000 + (1955117*q_[1]*m[5]*np.cos(q[3]))/50000000 + (1919819*q_[2]*m[4]*np.cos(q[3]))/50000000 + (1955117*q_[2]*m[5]*np.cos(q[3]))/50000000 + (1955117*q_[1]*mp*np.cos(q[3]))/50000000 + (1955117*q_[2]*mp*np.cos(q[3]))/50000000 + (18399582378411726024713*q_[4]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 + (71648743731038005291574683765544160407201*q_[4]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 + (421201*q_[4]*mp*np.sin(2*q[4]))/12500000 + (1602137*q_[1]*m[4]*np.sin(q[3])*np.sin(q[4]))/250000000 + (556407991456100359549689*q_[1]*m[5]*np.sin(q[3])*np.sin(q[4]))/14411518807585587200000000 + (1602137*q_[2]*m[4]*np.sin(q[3])*np.sin(q[4]))/250000000 + (556407991456100359549689*q_[2]*m[5]*np.sin(q[3])*np.sin(q[4]))/14411518807585587200000000 + (1272689*q_[1]*mp*np.sin(q[3])*np.sin(q[4]))/12500000 + (1272689*q_[2]*mp*np.sin(q[3])*np.sin(q[4]))/12500000
        C[3,3] = (q_[4]*np.sin(2*q[4])*((18399582378411726024713*m[4])/22517998136852480000000000 + (71648743731038005291574683765544160407201*m[5])/8307674973655724205648794126752153600000000 + (421201*mp)/6250000))/2
        C[3,4] = (799843*q_[4]*m[4]*np.sin(q[4]))/500000000 + (282885653993744037976053*q_[4]*m[5]*np.sin(q[4]))/28823037615171174400000000 - (106253245864567*q_[5]*m[5]*np.sin(q[4]))/72057594037927936 + (647053*q_[4]*mp*np.sin(q[4]))/25000000 + (799843*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/1000000000 + (18399582378411726024713*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 + (18399582378411726024713*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 + (282885653993744037976053*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/57646075230342348800000000 + (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 + (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 + (647053*q_[0]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/50000000 + (421201*q_[0]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 + (421201*q_[0]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 - (35001652044750319774713*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3]))/45035996273704960000000000 - (96149074149345570669947681665422560407201*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3]))/16615349947311448411297588253504307200000000 - (421201*q_[0]*mp*np.sin(q[1] + q[2] + q[3]))/12500000 + (18399582378411726024713*q_[1]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 + (71648743731038005291574683765544160407201*q_[1]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 + (18399582378411726024713*q_[2]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 + (71648743731038005291574683765544160407201*q_[2]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 + (18399582378411726024713*q_[3]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 + (71648743731038005291574683765544160407201*q_[3]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 + (421201*q_[1]*mp*np.sin(2*q[4]))/12500000 + (421201*q_[2]*mp*np.sin(2*q[4]))/12500000 + (421201*q_[3]*mp*np.sin(2*q[4]))/12500000 - (799843*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/1000000000 - (282885653993744037976053*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/57646075230342348800000000 - (647053*q_[0]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/50000000
        C[3,5] = (106253245864567*q_[0]*m[5]*(np.sin(q[1] + q[2] + q[3] + q[4]) - np.sin(q[1] + q[2] + q[3] - q[4])))/144115188075855872 - (106253245864567*q_[4]*m[5]*np.sin(q[4]))/72057594037927936
        C[4,0] = (1089061*q_[0]*m[4]*np.sin(q[4]))/500000000 + (378221240495146241346117*q_[0]*m[5]*np.sin(q[4]))/28823037615171174400000000 + (865117*q_[0]*mp*np.sin(q[4]))/25000000 - (13889*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/8000000 - (4823526697987611480033*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3] + q[4]))/461168601842738790400000 - (11033*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3] + q[4]))/400000 - (799843*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/1000000000 - (18399582378411726024713*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 - (18399582378411726024713*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 - (282885653993744037976053*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/57646075230342348800000000 - (799843*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/1000000000 - (71648743731038005291574683765544160407201*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 - (71648743731038005291574683765544160407201*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 - (18399582378411726024713*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 - (18399582378411726024713*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 - (282885653993744037976053*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/57646075230342348800000000 - (799843*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/1000000000 - (71648743731038005291574683765544160407201*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 - (71648743731038005291574683765544160407201*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 - (18399582378411726024713*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 - (18399582378411726024713*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 - (282885653993744037976053*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/57646075230342348800000000 - (71648743731038005291574683765544160407201*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 - (71648743731038005291574683765544160407201*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 + (106253245864567*q_[5]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/144115188075855872 - (647053*q_[1]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/50000000 - (421201*q_[1]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 - (421201*q_[1]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 - (647053*q_[2]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/50000000 - (421201*q_[2]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 - (421201*q_[2]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 - (647053*q_[3]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/50000000 - (421201*q_[3]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 - (421201*q_[3]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 + (13889*q_[1]*m[4]*np.cos(q[1] - q[4]))/4000000 - (1602137*q_[0]*m[4]*np.cos(q[3] - q[4]))/1000000000 + (4823526697987611480033*q_[1]*m[5]*np.cos(q[1] - q[4]))/230584300921369395200000 - (556407991456100359549689*q_[0]*m[5]*np.cos(q[3] - q[4]))/57646075230342348800000000 + (11033*q_[1]*mp*np.cos(q[1] - q[4]))/200000 - (1272689*q_[0]*mp*np.cos(q[3] - q[4]))/50000000 + (799843*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/2000000000 + (18399582378411726024713*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/180143985094819840000000000 - (18399582378411726024713*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/180143985094819840000000000 + (282885653993744037976053*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/115292150460684697600000000 + (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/66461399789245793645190353014017228800000000 - (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/66461399789245793645190353014017228800000000 + (647053*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - q[4]))/100000000 + (421201*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] - 2*q[4]))/50000000 - (421201*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + 2*q[4]))/50000000 - (1602137*q_[1]*m[4]*np.cos(q[1] + q[2] + q[4]))/500000000 - (13889*q_[0]*m[4]*np.cos(q[2] + q[3] + q[4]))/8000000 - (556407991456100359549689*q_[1]*m[5]*np.cos(q[1] + q[2] + q[4]))/28823037615171174400000000 - (1602137*q_[2]*m[4]*np.cos(q[1] + q[2] + q[4]))/500000000 - (4823526697987611480033*q_[0]*m[5]*np.cos(q[2] + q[3] + q[4]))/461168601842738790400000 - (556407991456100359549689*q_[2]*m[5]*np.cos(q[1] + q[2] + q[4]))/28823037615171174400000000 - (1272689*q_[1]*mp*np.cos(q[1] + q[2] + q[4]))/25000000 - (11033*q_[0]*mp*np.cos(q[2] + q[3] + q[4]))/400000 - (1272689*q_[2]*mp*np.cos(q[1] + q[2] + q[4]))/25000000 + (35001652044750319774713*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3]))/45035996273704960000000000 + (96149074149345570669947681665422560407201*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3]))/16615349947311448411297588253504307200000000 + (35001652044750319774713*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3]))/45035996273704960000000000 + (96149074149345570669947681665422560407201*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3]))/16615349947311448411297588253504307200000000 + (35001652044750319774713*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3]))/45035996273704960000000000 + (96149074149345570669947681665422560407201*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3]))/16615349947311448411297588253504307200000000 + (421201*q_[1]*mp*np.sin(q[1] + q[2] + q[3]))/12500000 + (421201*q_[2]*mp*np.sin(q[1] + q[2] + q[3]))/12500000 + (421201*q_[3]*mp*np.sin(q[1] + q[2] + q[3]))/12500000 + (18399582378411726024713*q_[0]*m[4]*np.sin(2*q[4]))/90071992547409920000000000 + (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(2*q[4]))/33230699894622896822595176507008614400000000 + (421201*q_[0]*mp*np.sin(2*q[4]))/25000000 - (13889*q_[0]*m[4]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/8000000 - (1602137*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/1000000000 - (4823526697987611480033*q_[0]*m[5]*np.cos(2*q[1] + q[2] + q[3] - q[4]))/461168601842738790400000 - (556407991456100359549689*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/57646075230342348800000000 - (11033*q_[0]*mp*np.cos(2*q[1] + q[2] + q[3] - q[4]))/400000 - (1272689*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3] + q[4]))/50000000 + (1602137*q_[1]*m[4]*np.cos(q[1] + q[2] - q[4]))/500000000 - (13889*q_[0]*m[4]*np.cos(q[2] + q[3] - q[4]))/8000000 + (556407991456100359549689*q_[1]*m[5]*np.cos(q[1] + q[2] - q[4]))/28823037615171174400000000 + (1602137*q_[2]*m[4]*np.cos(q[1] + q[2] - q[4]))/500000000 - (4823526697987611480033*q_[0]*m[5]*np.cos(q[2] + q[3] - q[4]))/461168601842738790400000 + (556407991456100359549689*q_[2]*m[5]*np.cos(q[1] + q[2] - q[4]))/28823037615171174400000000 + (1272689*q_[1]*mp*np.cos(q[1] + q[2] - q[4]))/25000000 - (11033*q_[0]*mp*np.cos(q[2] + q[3] - q[4]))/400000 + (1272689*q_[2]*mp*np.cos(q[1] + q[2] - q[4]))/25000000 + (799843*q_[1]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/1000000000 + (282885653993744037976053*q_[1]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/57646075230342348800000000 + (799843*q_[2]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/1000000000 + (282885653993744037976053*q_[2]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/57646075230342348800000000 + (799843*q_[3]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/1000000000 + (282885653993744037976053*q_[3]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/57646075230342348800000000 + (106253245864567*q_[5]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/144115188075855872 + (647053*q_[1]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/50000000 + (647053*q_[2]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/50000000 + (647053*q_[3]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/50000000 - (13889*q_[1]*m[4]*np.cos(q[1] + q[4]))/4000000 - (1602137*q_[0]*m[4]*np.cos(q[3] + q[4]))/1000000000 - (4823526697987611480033*q_[1]*m[5]*np.cos(q[1] + q[4]))/230584300921369395200000 - (556407991456100359549689*q_[0]*m[5]*np.cos(q[3] + q[4]))/57646075230342348800000000 - (1602137*q_[0]*m[4]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/1000000000 - (556407991456100359549689*q_[0]*m[5]*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/57646075230342348800000000 - (11033*q_[1]*mp*np.cos(q[1] + q[4]))/200000 - (1272689*q_[0]*mp*np.cos(q[3] + q[4]))/50000000 - (1272689*q_[0]*mp*np.cos(2*q[1] + 2*q[2] + q[3] - q[4]))/50000000 + (799843*q_[0]*m[4]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/2000000000 + (282885653993744037976053*q_[0]*m[5]*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/115292150460684697600000000 + (647053*q_[0]*mp*np.sin(2*q[1] + 2*q[2] + 2*q[3] + q[4]))/100000000
        C[4,1] = (106253245864567*q_[5]*m[5]*np.sin(q[4]))/72057594037927936 - (799843*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/1000000000 - (18399582378411726024713*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 - (18399582378411726024713*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 - (282885653993744037976053*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/57646075230342348800000000 - (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 - (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 - (647053*q_[0]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/50000000 - (421201*q_[0]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 - (421201*q_[0]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 + (13889*q_[0]*m[4]*np.cos(q[1] - q[4]))/4000000 + (4823526697987611480033*q_[0]*m[5]*np.cos(q[1] - q[4]))/230584300921369395200000 - (1602137*q_[1]*m[4]*np.cos(q[3] - q[4]))/500000000 - (556407991456100359549689*q_[1]*m[5]*np.cos(q[3] - q[4]))/28823037615171174400000000 - (1602137*q_[2]*m[4]*np.cos(q[3] - q[4]))/500000000 - (556407991456100359549689*q_[2]*m[5]*np.cos(q[3] - q[4]))/28823037615171174400000000 + (11033*q_[0]*mp*np.cos(q[1] - q[4]))/200000 - (1272689*q_[1]*mp*np.cos(q[3] - q[4]))/25000000 - (1272689*q_[2]*mp*np.cos(q[3] - q[4]))/25000000 - (1602137*q_[0]*m[4]*np.cos(q[1] + q[2] + q[4]))/500000000 - (556407991456100359549689*q_[0]*m[5]*np.cos(q[1] + q[2] + q[4]))/28823037615171174400000000 - (13889*q_[1]*m[4]*np.cos(q[2] + q[3] + q[4]))/4000000 - (4823526697987611480033*q_[1]*m[5]*np.cos(q[2] + q[3] + q[4]))/230584300921369395200000 - (1272689*q_[0]*mp*np.cos(q[1] + q[2] + q[4]))/25000000 - (11033*q_[1]*mp*np.cos(q[2] + q[3] + q[4]))/200000 + (35001652044750319774713*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3]))/45035996273704960000000000 + (96149074149345570669947681665422560407201*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3]))/16615349947311448411297588253504307200000000 + (421201*q_[0]*mp*np.sin(q[1] + q[2] + q[3]))/12500000 - (18399582378411726024713*q_[1]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 - (71648743731038005291574683765544160407201*q_[1]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 - (18399582378411726024713*q_[2]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 - (71648743731038005291574683765544160407201*q_[2]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 - (18399582378411726024713*q_[3]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 - (71648743731038005291574683765544160407201*q_[3]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 - (421201*q_[1]*mp*np.sin(2*q[4]))/12500000 - (421201*q_[2]*mp*np.sin(2*q[4]))/12500000 - (421201*q_[3]*mp*np.sin(2*q[4]))/12500000 + (1602137*q_[0]*m[4]*np.cos(q[1] + q[2] - q[4]))/500000000 + (556407991456100359549689*q_[0]*m[5]*np.cos(q[1] + q[2] - q[4]))/28823037615171174400000000 - (13889*q_[1]*m[4]*np.cos(q[2] + q[3] - q[4]))/4000000 - (4823526697987611480033*q_[1]*m[5]*np.cos(q[2] + q[3] - q[4]))/230584300921369395200000 + (1272689*q_[0]*mp*np.cos(q[1] + q[2] - q[4]))/25000000 - (11033*q_[1]*mp*np.cos(q[2] + q[3] - q[4]))/200000 + (799843*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/1000000000 + (282885653993744037976053*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/57646075230342348800000000 + (647053*q_[0]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/50000000 - (13889*q_[0]*m[4]*np.cos(q[1] + q[4]))/4000000 - (4823526697987611480033*q_[0]*m[5]*np.cos(q[1] + q[4]))/230584300921369395200000 - (1602137*q_[1]*m[4]*np.cos(q[3] + q[4]))/500000000 - (556407991456100359549689*q_[1]*m[5]*np.cos(q[3] + q[4]))/28823037615171174400000000 - (1602137*q_[2]*m[4]*np.cos(q[3] + q[4]))/500000000 - (556407991456100359549689*q_[2]*m[5]*np.cos(q[3] + q[4]))/28823037615171174400000000 - (11033*q_[0]*mp*np.cos(q[1] + q[4]))/200000 - (1272689*q_[1]*mp*np.cos(q[3] + q[4]))/25000000 - (1272689*q_[2]*mp*np.cos(q[3] + q[4]))/25000000
        C[4,2] = (106253245864567*q_[5]*m[5]*np.sin(q[4]))/72057594037927936 - (799843*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/1000000000 - (18399582378411726024713*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 - (18399582378411726024713*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 - (282885653993744037976053*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/57646075230342348800000000 - (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 - (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 - (647053*q_[0]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/50000000 - (421201*q_[0]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 - (421201*q_[0]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 - (1602137*q_[1]*m[4]*np.cos(q[3] - q[4]))/500000000 - (556407991456100359549689*q_[1]*m[5]*np.cos(q[3] - q[4]))/28823037615171174400000000 - (1602137*q_[2]*m[4]*np.cos(q[3] - q[4]))/500000000 - (556407991456100359549689*q_[2]*m[5]*np.cos(q[3] - q[4]))/28823037615171174400000000 - (1272689*q_[1]*mp*np.cos(q[3] - q[4]))/25000000 - (1272689*q_[2]*mp*np.cos(q[3] - q[4]))/25000000 - (1602137*q_[0]*m[4]*np.cos(q[1] + q[2] + q[4]))/500000000 - (556407991456100359549689*q_[0]*m[5]*np.cos(q[1] + q[2] + q[4]))/28823037615171174400000000 - (1272689*q_[0]*mp*np.cos(q[1] + q[2] + q[4]))/25000000 + (35001652044750319774713*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3]))/45035996273704960000000000 + (96149074149345570669947681665422560407201*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3]))/16615349947311448411297588253504307200000000 + (421201*q_[0]*mp*np.sin(q[1] + q[2] + q[3]))/12500000 - (18399582378411726024713*q_[1]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 - (71648743731038005291574683765544160407201*q_[1]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 - (18399582378411726024713*q_[2]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 - (71648743731038005291574683765544160407201*q_[2]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 - (18399582378411726024713*q_[3]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 - (71648743731038005291574683765544160407201*q_[3]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 - (421201*q_[1]*mp*np.sin(2*q[4]))/12500000 - (421201*q_[2]*mp*np.sin(2*q[4]))/12500000 - (421201*q_[3]*mp*np.sin(2*q[4]))/12500000 + (1602137*q_[0]*m[4]*np.cos(q[1] + q[2] - q[4]))/500000000 + (556407991456100359549689*q_[0]*m[5]*np.cos(q[1] + q[2] - q[4]))/28823037615171174400000000 + (1272689*q_[0]*mp*np.cos(q[1] + q[2] - q[4]))/25000000 + (799843*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/1000000000 + (282885653993744037976053*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/57646075230342348800000000 + (647053*q_[0]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/50000000 - (1602137*q_[1]*m[4]*np.cos(q[3] + q[4]))/500000000 - (556407991456100359549689*q_[1]*m[5]*np.cos(q[3] + q[4]))/28823037615171174400000000 - (1602137*q_[2]*m[4]*np.cos(q[3] + q[4]))/500000000 - (556407991456100359549689*q_[2]*m[5]*np.cos(q[3] + q[4]))/28823037615171174400000000 - (1272689*q_[1]*mp*np.cos(q[3] + q[4]))/25000000 - (1272689*q_[2]*mp*np.cos(q[3] + q[4]))/25000000
        C[4,3] = (106253245864567*q_[5]*m[5]*np.sin(q[4]))/72057594037927936 - (799843*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] - q[4]))/1000000000 - (18399582378411726024713*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/90071992547409920000000000 - (18399582378411726024713*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/90071992547409920000000000 - (282885653993744037976053*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] - q[4]))/57646075230342348800000000 - (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/33230699894622896822595176507008614400000000 - (71648743731038005291574683765544160407201*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/33230699894622896822595176507008614400000000 - (647053*q_[0]*mp*np.sin(q[1] + q[2] + q[3] - q[4]))/50000000 - (421201*q_[0]*mp*np.sin(q[1] + q[2] + q[3] - 2*q[4]))/25000000 - (421201*q_[0]*mp*np.sin(q[1] + q[2] + q[3] + 2*q[4]))/25000000 + (35001652044750319774713*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3]))/45035996273704960000000000 + (96149074149345570669947681665422560407201*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3]))/16615349947311448411297588253504307200000000 + (421201*q_[0]*mp*np.sin(q[1] + q[2] + q[3]))/12500000 - (18399582378411726024713*q_[1]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 - (71648743731038005291574683765544160407201*q_[1]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 - (18399582378411726024713*q_[2]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 - (71648743731038005291574683765544160407201*q_[2]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 - (18399582378411726024713*q_[3]*m[4]*np.sin(2*q[4]))/45035996273704960000000000 - (71648743731038005291574683765544160407201*q_[3]*m[5]*np.sin(2*q[4]))/16615349947311448411297588253504307200000000 - (421201*q_[1]*mp*np.sin(2*q[4]))/12500000 - (421201*q_[2]*mp*np.sin(2*q[4]))/12500000 - (421201*q_[3]*mp*np.sin(2*q[4]))/12500000 + (799843*q_[0]*m[4]*np.sin(q[1] + q[2] + q[3] + q[4]))/1000000000 + (282885653993744037976053*q_[0]*m[5]*np.sin(q[1] + q[2] + q[3] + q[4]))/57646075230342348800000000 + (647053*q_[0]*mp*np.sin(q[1] + q[2] + q[3] + q[4]))/50000000
        C[4,4] = 0
        C[4,5] = (106253245864567*m[5]*(q_[0]*np.sin(q[1] + q[2] + q[3] + q[4]) + 2*q_[1]*np.sin(q[4]) + 2*q_[2]*np.sin(q[4]) + 2*q_[3]*np.sin(q[4]) + q_[0]*np.sin(q[1] + q[2] + q[3] - q[4])))/144115188075855872
        C[5,0] = - (106253245864567*q_[4]*m[5]*(np.sin(q[1] + q[2] + q[3] + q[4]) + np.sin(q[1] + q[2] + q[3] - q[4])))/144115188075855872 - (106253245864567*q_[1]*m[5]*(np.sin(q[1] + q[2] + q[3] + q[4]) - np.sin(q[1] + q[2] + q[3] - q[4])))/144115188075855872 - (106253245864567*q_[2]*m[5]*(np.sin(q[1] + q[2] + q[3] + q[4]) - np.sin(q[1] + q[2] + q[3] - q[4])))/144115188075855872 - (106253245864567*q_[3]*m[5]*(np.sin(q[1] + q[2] + q[3] + q[4]) - np.sin(q[1] + q[2] + q[3] - q[4])))/144115188075855872
        C[5,1] = - (106253245864567*q_[4]*m[5]*np.sin(q[4]))/72057594037927936 - (106253245864567*q_[0]*m[5]*(np.sin(q[1] + q[2] + q[3] + q[4]) - np.sin(q[1] + q[2] + q[3] - q[4])))/144115188075855872
        C[5,2] = - (106253245864567*q_[4]*m[5]*np.sin(q[4]))/72057594037927936 - (106253245864567*q_[0]*m[5]*(np.sin(q[1] + q[2] + q[3] + q[4]) - np.sin(q[1] + q[2] + q[3] - q[4])))/144115188075855872
        C[5,3] = - (106253245864567*q_[4]*m[5]*np.sin(q[4]))/72057594037927936 - (106253245864567*q_[0]*m[5]*(np.sin(q[1] + q[2] + q[3] + q[4]) - np.sin(q[1] + q[2] + q[3] - q[4])))/144115188075855872
        C[5,4] = -(106253245864567*m[5]*(q_[0]*np.sin(q[1] + q[2] + q[3] + q[4]) + 2*q_[1]*np.sin(q[4]) + 2*q_[2]*np.sin(q[4]) + 2*q_[3]*np.sin(q[4]) + q_[0]*np.sin(q[1] + q[2] + q[3] - q[4])))/144115188075855872
        C[5,5] = 0
        return C

    def Cal_G(self, q, q_): #This Function Calculates The Vector G in Equation (1)
        m = np.array([[3.761],[8.058],[2.846],[1.37],[1.3],[0.365]],dtype='float64')
        mp = 0.0
        g = 9.8
        G = np.zeros([6,1],dtype='float64')
        G[0] = 0
        G[1] = - (17*g*m[1]*np.cos(q[1]))/80 - g*m[3]*((1961*np.cos(q[1] + q[2]))/5000 - (817*np.sin(q[1] + q[2] + q[3]))/50000 + (17*np.cos(q[1]))/40) - g*m[4]*((1961*np.cos(q[1] + q[2]))/5000 - (979*np.sin(q[1] + q[2] + q[3]))/10000 + (17*np.cos(q[1]))/40 + (817*np.cos(q[1] + q[2] + q[3])*np.sin(q[4]))/50000) - g*mp*((1961*np.cos(q[1] + q[2]))/5000 - (997*np.sin(q[1] + q[2] + q[3]))/10000 + (17*np.cos(q[1]))/40 + (649*np.cos(q[1] + q[2] + q[3])*np.sin(q[4]))/2500) - g*m[2]*((1211*np.cos(q[1] + q[2]))/5000 + (17*np.cos(q[1]))/40) - g*m[5]*((1961*np.cos(q[1] + q[2]))/5000 - (997*np.sin(q[1] + q[2] + q[3]))/10000 + (17*np.cos(q[1]))/40 + (283736864587506557649*np.cos(q[1] + q[2] + q[3])*np.sin(q[4]))/2882303761517117440000)
        G[2] = g*m[3]*((817*np.sin(q[1] + q[2] + q[3]))/50000 - (1961*np.cos(q[1] + q[2]))/5000) - g*m[4]*((1961*np.cos(q[1] + q[2]))/5000 - (979*np.sin(q[1] + q[2] + q[3]))/10000 + (817*np.cos(q[1] + q[2] + q[3])*np.sin(q[4]))/50000) - g*mp*((1961*np.cos(q[1] + q[2]))/5000 - (997*np.sin(q[1] + q[2] + q[3]))/10000 + (649*np.cos(q[1] + q[2] + q[3])*np.sin(q[4]))/2500) - g*m[5]*((1961*np.cos(q[1] + q[2]))/5000 - (997*np.sin(q[1] + q[2] + q[3]))/10000 + (283736864587506557649*np.cos(q[1] + q[2] + q[3])*np.sin(q[4]))/2882303761517117440000) - (1211*g*m[2]*np.cos(q[1] + q[2]))/5000
        G[3] = (817*g*m[3]*np.sin(q[1] + q[2] + q[3]))/50000 + g*m[4]*((979*np.sin(q[1] + q[2] + q[3]))/10000 - (817*np.cos(q[1] + q[2] + q[3])*np.sin(q[4]))/50000) + g*mp*((997*np.sin(q[1] + q[2] + q[3]))/10000 - (649*np.cos(q[1] + q[2] + q[3])*np.sin(q[4]))/2500) + g*m[5]*((997*np.sin(q[1] + q[2] + q[3]))/10000 - (283736864587506557649*np.cos(q[1] + q[2] + q[3])*np.sin(q[4]))/2882303761517117440000)
        G[4] = -(g*np.sin(q[1] + q[2] + q[3])*np.cos(q[4])*(235484217315948494848*m[4] + 1418684322937532788245*m[5] + 3741230282449218437120*mp))/14411518807585587200000
        G[5] = 0
        return G

    def TraPlanner(self, q0, q1, t, T): #This Function Generates A Reference Trajectory for The Robot
        mu = 1/2
        rho = (t/T - 0.5)*2*(1+mu)
        if rho<=-1-mu:
            p = -1
            v = 0
            a = 0
        elif rho<=-1+mu:
            p = (1 - np.abs(rho+1)/3/mu)*(rho+1)**2/2/mu + rho/2 + mu/6 - 1/2
            v = (1 - np.abs(rho+1)/2/mu)*(rho+1)/mu + 1/2
            a = 1/mu - np.abs(rho+1)/mu**2
        elif rho<=1-mu:
            p = rho
            v = 1
            a = 0
        elif rho<=1+mu:
            p = (np.abs(rho-1)/3/mu - 1)*(rho-1)**2/2/mu + rho/2 - mu/6 + 1/2
            v = (np.abs(rho-1)/2/mu - 1)*(rho-1)/mu + 1/2
            a = np.abs(rho-1)/mu**2 - 1/mu
        else:
            p = 1
            v = 0
            a = 0
        tr = np.vstack(((q1 - q0)*(p+1)/2 + q0, (q1 - q0)*v*(1+mu)/T, \
                        (q1 - q0)*a*(1+mu)**2/T**2*2))
        return tr

    def Proj(self, up): #This is A Projection Function Used to Calculate Minimum Human-Robot Distance
        mu = 1/3
        if up <= - 1 - mu:
            us = -1
            us_ = 0
            us__ = 0
        elif up <= - 1 + mu:
            us = (1 - np.abs(up+1)/3/mu)*(up+1)**2/2/mu + up/2 + mu/6 - 1/2
            us_ = (1 - np.abs(up+1)/2/mu)*(up+1)/mu + 1/2
            us__ = 1/mu - np.abs(up+1)/mu**2
        elif up <= 1 - mu:
            us = up
            us_ = 1
            us__ = 0
        elif up <= 1 + mu:
            us = (np.abs(up-1)/3/mu - 1)*(up-1)**2/2/mu + up/2 - mu/6 + 1/2
            us_ = (np.abs(up-1)/2/mu - 1)*(up-1)/mu + 1/2
            us__ = np.abs(up-1)/mu**2 - 1/mu
        else:
            us = 1
            us_ = 0
            us__ = 0
        return np.array([[us], [us_], [us__]],dtype='float64')

    def Rot2Qua(self, R): #This Function Transforms Rotation Matrix to Quaternion
        eta = np.array([[0.5*(1 + R[0,0] + R[1,1] + R[2,2])**0.5]])
        eps = 0.25/eta*np.array([[R[2,1]-R[1,2]],[R[0,2]-R[2,0]],[R[1,0]-R[0,1]]])
        return np.vstack((eps,eta))

    def Rot2Qua_(self, R, R_): #This Function Calculates Time Derivative of Quaternion
        eps = np.zeros([4,1],dtype='float64')
        eps[0] =  (R[1,2]*R_[0,0] - R[2,1]*R_[0,0] + R[1,2]*R_[1,1] - R[2,1]*R_[1,1] + R[1,2]*R_[2,2] - R[2,1]*R_[2,2] - 2*R_[1,2]*(R[0,0] + R[1,1] + R[2,2] + 1) + 2*R_[2,1]*(R[0,0] + R[1,1] + R[2,2] + 1))/(4*(R[0,0] + R[1,1] + R[2,2] + 1)**(3/2))
        eps[1] = -(R[0,2]*R_[0,0] + R[0,2]*R_[1,1] - R[2,0]*R_[0,0] + R[0,2]*R_[2,2] - R[2,0]*R_[1,1] - R[2,0]*R_[2,2] - 2*R_[0,2]*(R[0,0] + R[1,1] + R[2,2] + 1) + 2*R_[2,0]*(R[0,0] + R[1,1] + R[2,2] + 1))/(4*(R[0,0] + R[1,1] + R[2,2] + 1)**(3/2))
        eps[2] =  (R[0,1]*R_[0,0] - R[1,0]*R_[0,0] + R[0,1]*R_[1,1] - R[1,0]*R_[1,1] + R[0,1]*R_[2,2] - R[1,0]*R_[2,2] - 2*R_[0,1]*(R[0,0] + R[1,1] + R[2,2] + 1) + 2*R_[1,0]*(R[0,0] + R[1,1] + R[2,2] + 1))/(4*(R[0,0] + R[1,1] + R[2,2] + 1)**(3/2))
        eps[3] =  (R_[0,0] + R_[1,1] + R_[2,2])/(4*(R[0,0] + R[1,1] + R[2,2] + 1)**(1/2))
        return eps

    def Qua2Rot(self, eps): #This Function Transforms Quaternion to Rotation Matrix
        R = np.zeros([3,3],dtype='float64')
        R[0,0] = 1 - 2*(eps[1]**2 + eps[2]**2)
        R[1,0] = 2*eps[0]*eps[1] + 2*eps[3]*eps[2]
        R[2,0] = 2*eps[0]*eps[2] - 2*eps[3]*eps[1]
        R[0,1] = 2*eps[0]*eps[1] - 2*eps[3]*eps[2]
        R[1,1] = 1 - 2*(eps[0]**2 + eps[2]**2)
        R[2,1] = 2*eps[1]*eps[2] + 2*eps[3]*eps[0]
        R[0,2] = 2*eps[0]*eps[2] + 2*eps[3]*eps[1]
        R[1,2] = 2*eps[1]*eps[2] - 2*eps[3]*eps[0]
        R[2,2] = 1 - 2*(eps[0]**2 + eps[1]**2)
        return R

    def Qua2Rot_(self, eps, eps_): #This Function Calculates Time Derivative of Rotation Matrix
        R_ = np.zeros([3,3],dtype='float64')
        R_[0,0] = - 4*eps[1]*eps_[1] - 4*eps[2]*eps_[2]
        R_[1,0] = 2*eps[0]*eps_[1] + 2*eps[1]*eps_[0] + 2*eps[2]*eps_[3] + 2*eps[3]*eps_[2]
        R_[2,0] = 2*eps[0]*eps_[2] + 2*eps[2]*eps_[0] - 2*eps[1]*eps_[3] - 2*eps[3]*eps_[1]
        R_[0,1] = 2*eps[0]*eps_[1] + 2*eps[1]*eps_[0] - 2*eps[2]*eps_[3] - 2*eps[3]*eps_[2]
        R_[1,1] = - 4*eps[0]*eps_[0] - 4*eps[2]*eps_[2]
        R_[2,1] = 2*eps[0]*eps_[3] + 2*eps[1]*eps_[2] + 2*eps[2]*eps_[1] + 2*eps[3]*eps_[0]
        R_[0,2] = 2*eps[0]*eps_[2] + 2*eps[2]*eps_[0] + 2*eps[1]*eps_[3] + 2*eps[3]*eps_[1]
        R_[1,2] = 2*eps[1]*eps_[2] - 2*eps[0]*eps_[3] + 2*eps[2]*eps_[1] - 2*eps[3]*eps_[0]
        R_[2,2] = - 4*eps[0]*eps_[0] - 4*eps[1]*eps_[1]
        return R_

    def SkeMat(self, w): #This Function Generates A Skew-Symmetric Matrix Based on A Vector
        wx = np.zeros([3,3],dtype='float64')
        wx[1,0] = w[2]
        wx[2,0] = -w[1]
        wx[0,1] = -w[2]
        wx[2,1] = w[0]
        wx[0,2] = w[1]
        wx[1,2] = -w[0]
        return wx

    def Cal_E(self, eps): #This Function Calculates Matrix E Related to A Quaternion
        return (eps[3]*np.identity(3) - self.SkeMat(eps[0:3]))/2

    def Cal_E_(self, eps_): #This Function Calculates Time Derivative of E
        return (eps_[3]*np.identity(3) - self.SkeMat(eps_[0:3]))/2

    def Cal_invE(self, eps): #This Function Calculates The Inverse Matrix of E
        invE = np.zeros([3,3],dtype='float64')
        invE[0,0] = 2*(eps[0]**2 + eps[3]**2)/eps[3]
        invE[1,0] = 2*(eps[0]*eps[1] + eps[2]*eps[3])/eps[3]
        invE[2,0] = 2*(eps[0]*eps[2] - eps[1]*eps[3])/eps[3]
        invE[0,1] = 2*(eps[0]*eps[1] - eps[2]*eps[3])/eps[3]
        invE[1,1] = 2*(eps[1]**2 + eps[3]**2)/eps[3]
        invE[2,1] = 2*(eps[0]*eps[3] + eps[1]*eps[2])/eps[3]
        invE[0,2] = 2*(eps[0]*eps[2] + eps[1]*eps[3])/eps[3]
        invE[1,2] = 2*(eps[1]*eps[2] - eps[0]*eps[3])/eps[3]
        invE[2,2] = 2*(eps[2]**2 + eps[3]**2)/eps[3]
        return invE

    def Cal_invE_(self, eps, eps_): #This Function Calculates Time Derivative of Inverse Matrix invE
        invE_ = np.zeros([3,3],dtype='float64')
        invE_[0,0] = (4*eps[0]*eps_[0])/eps[3] - eps_[3]*((2*(eps[0]**2 + eps[3]**2))/eps[3]**2 - 4)
        invE_[1,0] = (2*(eps[3]**2*eps_[2] - eps[0]*eps[1]*eps_[3] + eps[0]*eps[3]*eps_[1] + eps[1]*eps[3]*eps_[0]))/eps[3]**2
        invE_[2,0] = -(2*(eps[3]**2*eps_[1] + eps[0]*eps[2]*eps_[3] - eps[0]*eps[3]*eps_[2] - eps[2]*eps[3]*eps_[0]))/eps[3]**2
        invE_[0,1] = -(2*(eps[3]**2*eps_[2] + eps[0]*eps[1]*eps_[3] - eps[0]*eps[3]*eps_[1] - eps[1]*eps[3]*eps_[0]))/eps[3]**2
        invE_[1,1] = (4*eps[1]*eps_[1])/eps[3] - eps_[3]*((2*(eps[1]**2 + eps[3]**2))/eps[3]**2 - 4)
        invE_[2,1] = (2*(eps[3]**2*eps_[0] - eps[1]*eps[2]*eps_[3] + eps[1]*eps[3]*eps_[2] + eps[2]*eps[3]*eps_[1]))/eps[3]**2
        invE_[0,2] = (2*(eps[3]**2*eps_[1] - eps[0]*eps[2]*eps_[3] + eps[0]*eps[3]*eps_[2] + eps[2]*eps[3]*eps_[0]))/eps[3]**2
        invE_[1,2] = -(2*(eps[3]**2*eps_[0] + eps[1]*eps[2]*eps_[3] - eps[1]*eps[3]*eps_[2] - eps[2]*eps[3]*eps_[1]))/eps[3]**2
        invE_[2,2] = (4*eps[2]*eps_[2])/eps[3] - eps_[3]*((2*(eps[2]**2 + eps[3]**2))/eps[3]**2 - 4)
        return invE_

if __name__ == '__main__':
    Controller()
